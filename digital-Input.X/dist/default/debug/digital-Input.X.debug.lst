

Microchip MPLAB XC8 Assembler V2.20 build 20200408173844 
                                                                                               Mon Mar 28 14:34:35 2022

Microchip MPLAB XC8 C Compiler v2.20 (Free license) build 20200408173844 Og1 
     1                           	processor	18F87J90
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	text0,global,reloc=2,class=CODE,delta=1
     8                           	psect	text1,global,reloc=2,class=CODE,delta=1
     9                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    10                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    12  0000                     
    13                           ; Version 2.32
    14                           ; Generated 23/11/2020 GMT
    15                           ; 
    16                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    17                           ; All rights reserved.
    18                           ; 
    19                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    20                           ; 
    21                           ; Redistribution and use in source and binary forms, with or without modification, are
    22                           ; permitted provided that the following conditions are met:
    23                           ; 
    24                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    25                           ;        conditions and the following disclaimer.
    26                           ; 
    27                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    28                           ;        of conditions and the following disclaimer in the documentation and/or other
    29                           ;        materials provided with the distribution. Publication is not required when
    30                           ;        this file is used in an embedded application.
    31                           ; 
    32                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    33                           ;        software without specific prior written permission.
    34                           ; 
    35                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    36                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    37                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    38                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    39                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    40                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    41                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    42                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    43                           ; 
    44                           ; 
    45                           ; Code-generator required, PIC18F87J90 Definitions
    46                           ; 
    47                           ; SFR Addresses
    48  0000                     _PORTDbits	set	3971
    49  0000                     _PORTFbits	set	3973
    50  0000                     _PORTAbits	set	3968
    51  0000                     _LATH	set	3984
    52  0000                     _LATE	set	3981
    53  0000                     _TRISAbits	set	3986
    54  0000                     _TRISF	set	3991
    55  0000                     _TRISD	set	3989
    56  0000                     _TRISH	set	3993
    57  0000                     _TRISE	set	3990
    58  0000                     _ADCON1	set	4033
    59  0000                     _CMCON	set	4020
    60                           
    61                           ; #config settings
    62                           
    63                           	psect	cinit
    64  01FE5E                     __pcinit:
    65                           	callstack 0
    66  01FE5E                     start_initialization:
    67                           	callstack 0
    68  01FE5E                     __initialization:
    69                           	callstack 0
    70  01FE5E                     end_of_initialization:
    71                           	callstack 0
    72  01FE5E                     __end_of__initialization:
    73                           	callstack 0
    74  01FE5E  0100               	movlb	0
    75  01FE60  EF32  F0FF         	goto	_main	;jump to C main() function
    76                           
    77                           	psect	cstackCOMRAM
    78  000000                     __pcstackCOMRAM:
    79                           	callstack 0
    80  000000                     
    81                           ; 1 bytes @ 0x0
    82 ;;
    83 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
    84 ;;
    85 ;; *************** function _main *****************
    86 ;; Defined at:
    87 ;;		line 15 in file "main.c"
    88 ;; Parameters:    Size  Location     Type
    89 ;;		None
    90 ;; Auto vars:     Size  Location     Type
    91 ;;		None
    92 ;; Return value:  Size  Location     Type
    93 ;;                  1    wreg      void 
    94 ;; Registers used:
    95 ;;		wreg, status,2, cstack
    96 ;; Tracked objects:
    97 ;;		On entry : 0/0
    98 ;;		On exit  : 0/0
    99 ;;		Unchanged: 0/0
   100 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   101 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   102 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   103 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   104 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   105 ;;Total ram usage:        0 bytes
   106 ;; Hardware stack levels required when called:    1
   107 ;; This function calls:
   108 ;;		_check_dig
   109 ;; This function is called by:
   110 ;;		Startup code after reset
   111 ;; This function uses a non-reentrant model
   112 ;;
   113                           
   114                           	psect	text0
   115  01FE64                     __ptext0:
   116                           	callstack 0
   117  01FE64                     _main:
   118                           	callstack 30
   119  01FE64                     
   120                           ;main.c: 17:     {
   121  01FE64  0E07               	movlw	7
   122  01FE66  6EB4               	movwf	180,c	;volatile
   123                           
   124                           ;main.c: 18:       check_dig();
   125  01FE68  0E0F               	movlw	15
   126  01FE6A  6EC1               	movwf	193,c	;volatile
   127                           
   128                           ;main.c: 20: 
   129  01FE6C  0E00               	movlw	0
   130  01FE6E  6E96               	movwf	150,c	;volatile
   131                           
   132                           ;main.c: 21:     return;
   133  01FE70  0E00               	movlw	0
   134  01FE72  6E99               	movwf	153,c	;volatile
   135  01FE74                     
   136                           ;main.c: 22: }
   137  01FE74  6895               	setf	149,c	;volatile
   138  01FE76                     
   139                           ;main.c: 23: 
   140  01FE76  6897               	setf	151,c	;volatile
   141  01FE78                     
   142                           ;main.c: 24: void check_dig(void){
   143  01FE78  8092               	bsf	146,0,c	;volatile
   144                           
   145                           ;main.c: 26:         if(PORTAbits.RA0 == 0)
   146  01FE7A  0E00               	movlw	0
   147  01FE7C  6E8D               	movwf	141,c	;volatile
   148                           
   149                           ;main.c: 27:            LATH = 0x01;
   150  01FE7E  0E00               	movlw	0
   151  01FE80  6E90               	movwf	144,c	;volatile
   152  01FE82                     l789:
   153                           
   154                           ;main.c: 30:         else if(PORTFbits.RF2== 0);main.c: 31:             LATH = 0x04;
   155  01FE82  EC47  F0FF         	call	_check_dig	;wreg free
   156  01FE86  EF41  F0FF         	goto	l789
   157  01FE8A  EF00  F000         	goto	start
   158  01FE8E                     __end_of_main:
   159                           	callstack 0
   160                           
   161 ;; *************** function _check_dig *****************
   162 ;; Defined at:
   163 ;;		line 37 in file "main.c"
   164 ;; Parameters:    Size  Location     Type
   165 ;;		None
   166 ;; Auto vars:     Size  Location     Type
   167 ;;		None
   168 ;; Return value:  Size  Location     Type
   169 ;;                  1    wreg      void 
   170 ;; Registers used:
   171 ;;		wreg, status,2
   172 ;; Tracked objects:
   173 ;;		On entry : 0/0
   174 ;;		On exit  : 0/0
   175 ;;		Unchanged: 0/0
   176 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   177 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   178 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   179 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   180 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   181 ;;Total ram usage:        0 bytes
   182 ;; Hardware stack levels used:    1
   183 ;; This function calls:
   184 ;;		Nothing
   185 ;; This function is called by:
   186 ;;		_main
   187 ;; This function uses a non-reentrant model
   188 ;;
   189                           
   190                           	psect	text1
   191  01FE8E                     __ptext1:
   192                           	callstack 0
   193  01FE8E                     _check_dig:
   194                           	callstack 30
   195  01FE8E                     
   196                           ;main.c: 39:             LATH = 0x40;
   197  01FE8E  B080               	btfsc	128,0,c	;volatile
   198  01FE90  EF4C  F0FF         	goto	u11
   199  01FE94  EF4E  F0FF         	goto	u10
   200  01FE98                     u11:
   201  01FE98  EF52  F0FF         	goto	l37
   202  01FE9C                     u10:
   203  01FE9C                     
   204                           ;main.c: 40:         else if(PORTFbits.RF7== 0)
   205  01FE9C  0E01               	movlw	1
   206  01FE9E  6E90               	movwf	144,c	;volatile
   207  01FEA0  EFFB  F0FF         	goto	l69
   208  01FEA4                     l37:
   209  01FEA4  B285               	btfsc	133,1,c	;volatile
   210  01FEA6  EF57  F0FF         	goto	u21
   211  01FEAA  EF59  F0FF         	goto	u20
   212  01FEAE                     u21:
   213  01FEAE  EF5D  F0FF         	goto	l39
   214  01FEB2                     u20:
   215  01FEB2                     
   216                           ;main.c: 42: 
   217  01FEB2  0E02               	movlw	2
   218  01FEB4  6E90               	movwf	144,c	;volatile
   219  01FEB6  EFFB  F0FF         	goto	l69
   220  01FEBA                     l39:
   221  01FEBA  B485               	btfsc	133,2,c	;volatile
   222  01FEBC  EF62  F0FF         	goto	u31
   223  01FEC0  EF64  F0FF         	goto	u30
   224  01FEC4                     u31:
   225  01FEC4  EF68  F0FF         	goto	l41
   226  01FEC8                     u30:
   227  01FEC8                     
   228                           ;main.c: 44:         else if(PORTDbits.RD0 == 0)
   229  01FEC8  0E04               	movlw	4
   230  01FECA  6E90               	movwf	144,c	;volatile
   231  01FECC  EFFB  F0FF         	goto	l69
   232  01FED0                     l41:
   233  01FED0  B685               	btfsc	133,3,c	;volatile
   234  01FED2  EF6D  F0FF         	goto	u41
   235  01FED6  EF6F  F0FF         	goto	u40
   236  01FEDA                     u41:
   237  01FEDA  EF73  F0FF         	goto	l43
   238  01FEDE                     u40:
   239  01FEDE                     
   240                           ;main.c: 46:         else if(PORTDbits.RD1== 0)
   241  01FEDE  0E08               	movlw	8
   242  01FEE0  6E90               	movwf	144,c	;volatile
   243  01FEE2  EFFB  F0FF         	goto	l69
   244  01FEE6                     l43:
   245  01FEE6  B885               	btfsc	133,4,c	;volatile
   246  01FEE8  EF78  F0FF         	goto	u51
   247  01FEEC  EF7A  F0FF         	goto	u50
   248  01FEF0                     u51:
   249  01FEF0  EF7E  F0FF         	goto	l45
   250  01FEF4                     u50:
   251  01FEF4                     
   252                           ;main.c: 48:         else if(PORTDbits.RD2== 0)
   253  01FEF4  0E10               	movlw	16
   254  01FEF6  6E90               	movwf	144,c	;volatile
   255  01FEF8  EFFB  F0FF         	goto	l69
   256  01FEFC                     l45:
   257  01FEFC  BA85               	btfsc	133,5,c	;volatile
   258  01FEFE  EF83  F0FF         	goto	u61
   259  01FF02  EF85  F0FF         	goto	u60
   260  01FF06                     u61:
   261  01FF06  EF89  F0FF         	goto	l47
   262  01FF0A                     u60:
   263  01FF0A                     
   264                           ;main.c: 50:         else if(PORTDbits.RD3== 0)
   265  01FF0A  0E20               	movlw	32
   266  01FF0C  6E90               	movwf	144,c	;volatile
   267  01FF0E  EFFB  F0FF         	goto	l69
   268  01FF12                     l47:
   269  01FF12  BC85               	btfsc	133,6,c	;volatile
   270  01FF14  EF8E  F0FF         	goto	u71
   271  01FF18  EF90  F0FF         	goto	u70
   272  01FF1C                     u71:
   273  01FF1C  EF94  F0FF         	goto	l49
   274  01FF20                     u70:
   275  01FF20                     
   276                           ;main.c: 52:         else if(PORTDbits.RD4== 0)
   277  01FF20  0E40               	movlw	64
   278  01FF22  6E90               	movwf	144,c	;volatile
   279  01FF24  EFFB  F0FF         	goto	l69
   280  01FF28                     l49:
   281  01FF28  BE85               	btfsc	133,7,c	;volatile
   282  01FF2A  EF99  F0FF         	goto	u81
   283  01FF2E  EF9B  F0FF         	goto	u80
   284  01FF32                     u81:
   285  01FF32  EF9F  F0FF         	goto	l51
   286  01FF36                     u80:
   287  01FF36                     
   288                           ;main.c: 54:         else if(PORTDbits.RD5== 0)
   289  01FF36  0E80               	movlw	128
   290  01FF38  6E90               	movwf	144,c	;volatile
   291  01FF3A  EFFB  F0FF         	goto	l69
   292  01FF3E                     l51:
   293  01FF3E  B083               	btfsc	131,0,c	;volatile
   294  01FF40  EFA4  F0FF         	goto	u91
   295  01FF44  EFA6  F0FF         	goto	u90
   296  01FF48                     u91:
   297  01FF48  EFAA  F0FF         	goto	l53
   298  01FF4C                     u90:
   299  01FF4C                     
   300                           ;main.c: 58:         else if(PORTDbits.RD7== 0)
   301  01FF4C  0E01               	movlw	1
   302  01FF4E  6E8D               	movwf	141,c	;volatile
   303  01FF50  EFFB  F0FF         	goto	l69
   304  01FF54                     l53:
   305  01FF54  B283               	btfsc	131,1,c	;volatile
   306  01FF56  EFAF  F0FF         	goto	u101
   307  01FF5A  EFB1  F0FF         	goto	u100
   308  01FF5E                     u101:
   309  01FF5E  EFB5  F0FF         	goto	l55
   310  01FF62                     u100:
   311  01FF62                     
   312                           ;main.c: 60:         else{
   313  01FF62  0E02               	movlw	2
   314  01FF64  6E8D               	movwf	141,c	;volatile
   315  01FF66  EFFB  F0FF         	goto	l69
   316  01FF6A                     l55:
   317  01FF6A  B483               	btfsc	131,2,c	;volatile
   318  01FF6C  EFBA  F0FF         	goto	u111
   319  01FF70  EFBC  F0FF         	goto	u110
   320  01FF74                     u111:
   321  01FF74  EFC0  F0FF         	goto	l57
   322  01FF78                     u110:
   323  01FF78                     
   324                           ;main.c: 62:             LATE = 0x00;
   325  01FF78  0E04               	movlw	4
   326  01FF7A  6E8D               	movwf	141,c	;volatile
   327  01FF7C  EFFB  F0FF         	goto	l69
   328  01FF80                     l57:
   329  01FF80  B683               	btfsc	131,3,c	;volatile
   330  01FF82  EFC5  F0FF         	goto	u121
   331  01FF86  EFC7  F0FF         	goto	u120
   332  01FF8A                     u121:
   333  01FF8A  EFCB  F0FF         	goto	l59
   334  01FF8E                     u120:
   335  01FF8E                     
   336                           ;main.c: 64: }
   337  01FF8E  0E08               	movlw	8
   338  01FF90  6E8D               	movwf	141,c	;volatile
   339  01FF92  EFFB  F0FF         	goto	l69
   340  01FF96                     l59:
   341  01FF96  B883               	btfsc	131,4,c	;volatile
   342  01FF98  EFD0  F0FF         	goto	u131
   343  01FF9C  EFD2  F0FF         	goto	u130
   344  01FFA0                     u131:
   345  01FFA0  EFD6  F0FF         	goto	l61
   346  01FFA4                     u130:
   347  01FFA4  0E10               	movlw	16
   348  01FFA6  6E8D               	movwf	141,c	;volatile
   349  01FFA8  EFFB  F0FF         	goto	l69
   350  01FFAC                     l61:
   351  01FFAC  BA83               	btfsc	131,5,c	;volatile
   352  01FFAE  EFDB  F0FF         	goto	u141
   353  01FFB2  EFDD  F0FF         	goto	u140
   354  01FFB6                     u141:
   355  01FFB6  EFE1  F0FF         	goto	l63
   356  01FFBA                     u140:
   357  01FFBA  0E20               	movlw	32
   358  01FFBC  6E8D               	movwf	141,c	;volatile
   359  01FFBE  EFFB  F0FF         	goto	l69
   360  01FFC2                     l63:
   361  01FFC2  BC83               	btfsc	131,6,c	;volatile
   362  01FFC4  EFE6  F0FF         	goto	u151
   363  01FFC8  EFE8  F0FF         	goto	u150
   364  01FFCC                     u151:
   365  01FFCC  EFEC  F0FF         	goto	l65
   366  01FFD0                     u150:
   367  01FFD0  0E40               	movlw	64
   368  01FFD2  6E8D               	movwf	141,c	;volatile
   369  01FFD4  EFFB  F0FF         	goto	l69
   370  01FFD8                     l65:
   371  01FFD8  BE83               	btfsc	131,7,c	;volatile
   372  01FFDA  EFF1  F0FF         	goto	u161
   373  01FFDE  EFF3  F0FF         	goto	u160
   374  01FFE2                     u161:
   375  01FFE2  EFF7  F0FF         	goto	l779
   376  01FFE6                     u160:
   377  01FFE6  0E80               	movlw	128
   378  01FFE8  6E8D               	movwf	141,c	;volatile
   379  01FFEA  EFFB  F0FF         	goto	l69
   380  01FFEE                     l779:
   381  01FFEE  0E00               	movlw	0
   382  01FFF0  6E90               	movwf	144,c	;volatile
   383  01FFF2  0E00               	movlw	0
   384  01FFF4  6E8D               	movwf	141,c	;volatile
   385  01FFF6                     l69:
   386  01FFF6  0012               	return		;funcret
   387  01FFF8                     __end_of_check_dig:
   388                           	callstack 0
   389  0000                     
   390                           	psect	rparam
   391  0000                     
   392                           	psect	config
   393                           
   394                           ;Config register CONFIG1L @ 0x1FFF8
   395                           ;	Watchdog Timer
   396                           ;	WDTEN = OFF, Disabled-Controlled by SWDTEN bit
   397                           ;	Stack Overflow Reset
   398                           ;	STVREN = OFF, Disabled
   399                           ;	Extended Instruction Set Enable bit
   400                           ;	XINST = OFF, Disabled
   401                           ;	Background Debugger Enable bit
   402                           ;	DEBUG = 0x1, unprogrammed default
   403  1FFF8                     	org	131064
   404  1FFF8  80                 	db	128
   405                           
   406                           ;Config register CONFIG1H @ 0x1FFF9
   407                           ;	Code Protect
   408                           ;	CP0 = OFF, Disabled
   409  1FFF9                     	org	131065
   410  1FFF9  F4                 	db	244
   411                           
   412                           ;Config register CONFIG2L @ 0x1FFFA
   413                           ;	Oscillator Selection bits
   414                           ;	OSC = INTOSC, Internal oscillator, port function on RA6 and RA7
   415                           ;	Secondary Clock Source T1OSCEN Enforcement
   416                           ;	T1DIG = 0x1, unprogrammed default
   417                           ;	Low-Power Timer1 Oscillator Enable bit
   418                           ;	LPT1OSC = 0x1, unprogrammed default
   419                           ;	Fail-Safe Clock Monitor Enable bit
   420                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
   421                           ;	Two-Speed Start-up (Internal/External Oscillator Switchover) Control bit
   422                           ;	IESO = OFF, Two-Speed Start-up disabled
   423  1FFFA                     	org	131066
   424  1FFFA  18                 	db	24
   425                           
   426                           ;Config register CONFIG2H @ 0x1FFFB
   427                           ;	unspecified, using default values
   428                           ;	Watchdog Timer Postscaler Select bits
   429                           ;	WDTPS = 0xF, unprogrammed default
   430  1FFFB                     	org	131067
   431  1FFFB  FF                 	db	255
   432                           
   433                           ;Config register CONFIG3L @ 0x1FFFC
   434                           ;	unspecified, using default values
   435                           ;	RTCC Reference Clock Select bit
   436                           ;	RTCSOSC = 0x1, unprogrammed default
   437  1FFFC                     	org	131068
   438  1FFFC  F2                 	db	242
   439                           
   440                           ;Config register CONFIG3H @ 0x1FFFD
   441                           ;	unspecified, using default values
   442                           ;	CCP2 MUX
   443                           ;	CCP2MX = 0x1, unprogrammed default
   444  1FFFD                     	org	131069
   445  1FFFD  F1                 	db	241
   446                           tosu	equ	0xFFF
   447                           tosh	equ	0xFFE
   448                           tosl	equ	0xFFD
   449                           stkptr	equ	0xFFC
   450                           pclatu	equ	0xFFB
   451                           pclath	equ	0xFFA
   452                           pcl	equ	0xFF9
   453                           tblptru	equ	0xFF8
   454                           tblptrh	equ	0xFF7
   455                           tblptrl	equ	0xFF6
   456                           tablat	equ	0xFF5
   457                           prodh	equ	0xFF4
   458                           prodl	equ	0xFF3
   459                           indf0	equ	0xFEF
   460                           postinc0	equ	0xFEE
   461                           postdec0	equ	0xFED
   462                           preinc0	equ	0xFEC
   463                           plusw0	equ	0xFEB
   464                           fsr0h	equ	0xFEA
   465                           fsr0l	equ	0xFE9
   466                           wreg	equ	0xFE8
   467                           indf1	equ	0xFE7
   468                           postinc1	equ	0xFE6
   469                           postdec1	equ	0xFE5
   470                           preinc1	equ	0xFE4
   471                           plusw1	equ	0xFE3
   472                           fsr1h	equ	0xFE2
   473                           fsr1l	equ	0xFE1
   474                           bsr	equ	0xFE0
   475                           indf2	equ	0xFDF
   476                           postinc2	equ	0xFDE
   477                           postdec2	equ	0xFDD
   478                           preinc2	equ	0xFDC
   479                           plusw2	equ	0xFDB
   480                           fsr2h	equ	0xFDA
   481                           fsr2l	equ	0xFD9
   482                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95      0       0
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           84      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
                          _check_dig
 ---------------------------------------------------------------------------------
 (1) _check_dig                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _check_dig

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5F      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5F      0       0       1        0.0%
STACK                0      0       0       2        0.0%
DATA                 0      0       0       3        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
ABS                  0      0       0      12        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK15           54      0       0      35        0.0%
BANK15              54      0       0      36        0.0%
BIGRAM             F53      0       0      37        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V2.20 build 20200408173844 
Symbol Table                                                                                   Mon Mar 28 14:34:35 2022

                     l41 FED0                       l51 FF3E                       l43 FEE6  
                     l61 FFAC                       l53 FF54                       l45 FEFC  
                     l37 FEA4                       l63 FFC2                       l55 FF6A  
                     l47 FF12                       l39 FEBA                       l65 FFD8  
                     l57 FF80                       l49 FF28                       l59 FF96  
                     l69 FFF6                       u10 FE9C                       u11 FE98  
                     u20 FEB2                       u21 FEAE                       u30 FEC8  
                     u31 FEC4                       u40 FEDE                       u41 FEDA  
                     u50 FEF4                       u51 FEF0                       u60 FF0A  
                     u61 FF06                       u70 FF20                       u71 FF1C  
                     u80 FF36                       u81 FF32                       u90 FF4C  
                     u91 FF48                      l751 FEC8                      l761 FF36  
                    l753 FEDE                      l745 FE8E                      l771 FFA4  
                    l763 FF4C                      l755 FEF4                      l747 FE9C  
                    l773 FFBA                      l765 FF62                      l757 FF0A  
                    l749 FEB2                      l781 FE64                      l775 FFD0  
                    l767 FF78                      l759 FF20                      l783 FE74  
                    l777 FFE6                      l769 FF8E                      l785 FE76  
                    l779 FFEE                      l787 FE78                      l789 FE82  
                    u100 FF62                      u101 FF5E                      u110 FF78  
                    u111 FF74                      u120 FF8E                      u121 FF8A  
                    u130 FFA4                      u131 FFA0                      u140 FFBA  
                    u141 FFB6                      u150 FFD0                      u151 FFCC  
                    u160 FFE6                      u161 FFE2                     _LATE 000F8D  
                   _LATH 000F90                     _main FE64                     start 0000  
           ___param_bank 000000                    ?_main 0000                    _CMCON 000FB4  
                  _TRISD 000F95                    _TRISE 000F96                    _TRISF 000F97  
                  _TRISH 000F99          __initialization FE5E             __end_of_main FE8E  
                 ??_main 0000            __activetblptr 000000                   _ADCON1 000FC1  
             __accesstop 0060  __end_of__initialization FE5E            ___rparam_used 000001  
         __pcstackCOMRAM 0000       __size_of_check_dig 016A        __end_of_check_dig FFF8  
                __Hparam 0000                  __Lparam 0000                  __pcinit FE5E  
                __ramtop 1000                  __ptext0 FE64                  __ptext1 FE8E  
   end_of_initialization FE5E                _PORTAbits 000F80                _PORTDbits 000F83  
              _PORTFbits 000F85                _TRISAbits 000F92      start_initialization FE5E  
              _check_dig FE8E               ?_check_dig 0000                 __Hrparam 0000  
               __Lrparam 0000            __size_of_main 002A              ??_check_dig 0000  
