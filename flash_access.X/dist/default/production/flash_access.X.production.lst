

Microchip MPLAB XC8 Assembler V2.20 build 20200408173844 
                                                                                               Wed Mar 16 14:29:00 2022

Microchip MPLAB XC8 C Compiler v2.20 (Free license) build 20200408173844 Og1 
     1                           	processor	18F87J90
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=3
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=3
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=3
    26                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=3
    27                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=3
    28                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=3
    29                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=3
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=3
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=3
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=2
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1
    34                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=2
    35                           	psect	text20,global,reloc=2,class=CODE,delta=1
    36                           	psect	text21,global,reloc=2,class=CODE,delta=1
    37                           	psect	text22,global,reloc=2,class=CODE,delta=1
    38                           	psect	text23,global,reloc=2,class=CODE,delta=1
    39                           	psect	text24,global,reloc=2,class=CODE,delta=1
    40                           	psect	text25,global,reloc=2,class=CODE,delta=1
    41                           	psect	text26,global,reloc=2,class=CODE,delta=1
    42                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=2
    43                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=2
    44                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=2
    45                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=2
    46                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    47                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    48                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    49                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    50                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    51  0000                     
    52                           ; Version 2.32
    53                           ; Generated 23/11/2020 GMT
    54                           ; 
    55                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    56                           ; All rights reserved.
    57                           ; 
    58                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    59                           ; 
    60                           ; Redistribution and use in source and binary forms, with or without modification, are
    61                           ; permitted provided that the following conditions are met:
    62                           ; 
    63                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    64                           ;        conditions and the following disclaimer.
    65                           ; 
    66                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    67                           ;        of conditions and the following disclaimer in the documentation and/or other
    68                           ;        materials provided with the distribution. Publication is not required when
    69                           ;        this file is used in an embedded application.
    70                           ; 
    71                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    72                           ;        software without specific prior written permission.
    73                           ; 
    74                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    75                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    76                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    77                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    78                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    79                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    80                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    81                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    82                           ; 
    83                           ; 
    84                           ; Code-generator required, PIC18F87J90 Definitions
    85                           ; 
    86                           ; SFR Addresses
    87  0000                     
    88                           	psect	idataBANK0
    89  002C2C                     __pidataBANK0:
    90                           	callstack 0
    91                           
    92                           ;initializer for _freq
    93  002C2C  01F4               	dw	500
    94                           
    95                           ;initializer for _t
    96  002C2E  0019               	dw	25
    97                           
    98                           	psect	nvBANK0
    99  0000E5                     __pnvBANK0:
   100                           	callstack 0
   101  0000E5                     _hex:
   102                           	callstack 0
   103  0000E5                     	ds	2
   104  0000                     _TBLPTR	set	4086
   105  0000                     _TMR1	set	4046
   106  0000                     _T1CONbits	set	4045
   107  0000                     _LATEbits	set	3981
   108  0000                     _PIR1bits	set	3998
   109  0000                     _RCONbits	set	4048
   110  0000                     _T1CON	set	4045
   111  0000                     _LATE	set	3981
   112  0000                     _TRISE	set	3990
   113  0000                     _OSCCONbits	set	4051
   114  0000                     _EECON2	set	4007
   115  0000                     _INTCONbits	set	4082
   116  0000                     _EECON1bits	set	4006
   117  0000                     _TABLAT	set	4085
   118  0000                     _RCREG1	set	4014
   119  0000                     _TXREG1	set	4013
   120  0000                     _PIE1bits	set	3997
   121  0000                     _IPR1bits	set	3999
   122  0000                     _RCSTA1	set	4011
   123  0000                     _BAUDCON1bits	set	3966
   124  0000                     _TXSTA1bits	set	4012
   125  0000                     _SPBRG1	set	4015
   126  0000                     _TRISCbits	set	3988
   127  0000                     _TMR1IF	set	31984
   128  0000                     _RC1IF	set	31989
   129  0000                     _TRMT	set	32097
   130                           
   131                           	psect	smallconst
   132  001000                     __psmallconst:
   133                           	callstack 0
   134  001000  00                 	db	0
   135  001001                     STR_1:
   136  001001  30                 	db	48	;'0'
   137  001002  78                 	db	120	;'x'
   138  001003  25                 	db	37
   139  001004  30                 	db	48	;'0'
   140  001005  32                 	db	50	;'2'
   141  001006  58                 	db	88	;'X'
   142  001007  00                 	db	0
   143  001008  00                 	db	0	; dummy byte at the end
   144  0000                     
   145                           ; #config settings
   146                           
   147                           	psect	cinit
   148  002970                     __pcinit:
   149                           	callstack 0
   150  002970                     start_initialization:
   151                           	callstack 0
   152  002970                     __initialization:
   153                           	callstack 0
   154                           
   155                           ; Initialize objects allocated to BANK0 (4 bytes)
   156                           ; load TBLPTR registers with __pidataBANK0
   157  002970  0E2C               	movlw	low __pidataBANK0
   158  002972  6EF6               	movwf	tblptrl,c
   159  002974  0E2C               	movlw	high __pidataBANK0
   160  002976  6EF7               	movwf	tblptrh,c
   161  002978  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   162  00297A  6EF8               	movwf	tblptru,c
   163  00297C  EE00  F0E1         	lfsr	0,__pdataBANK0
   164  002980  EE10 F004          	lfsr	1,4
   165  002984                     copy_data0:
   166  002984  0009               	tblrd		*+
   167  002986  CFF5 FFEE          	movff	tablat,postinc0
   168  00298A  50E5               	movf	postdec1,w,c
   169  00298C  50E1               	movf	fsr1l,w,c
   170  00298E  E1FA               	bnz	copy_data0
   171                           
   172                           ; Clear objects allocated to BANK1 (256 bytes)
   173  002990  EE01  F000         	lfsr	0,__pbssBANK1
   174  002994  EE11 F000          	lfsr	1,256
   175  002998                     clear_0:
   176  002998  6AEE               	clrf	postinc0,c
   177  00299A  50E5               	movf	postdec1,w,c
   178  00299C  50E1               	movf	fsr1l,w,c
   179  00299E  E1FC               	bnz	clear_0
   180  0029A0  50E2               	movf	fsr1h,w,c
   181  0029A2  E1FA               	bnz	clear_0
   182                           
   183                           ; Clear objects allocated to BANK0 (105 bytes)
   184  0029A4  EE00  F060         	lfsr	0,__pbssBANK0
   185  0029A8  0E69               	movlw	105
   186  0029AA                     clear_1:
   187  0029AA  6AEE               	clrf	postinc0,c
   188  0029AC  06E8               	decf	wreg,f,c
   189  0029AE  E1FD               	bnz	clear_1
   190                           
   191                           ; Clear objects allocated to COMRAM (2 bytes)
   192  0029B0  6A5C               	clrf	(__pbssCOMRAM+1)& (0+255),c
   193  0029B2  6A5B               	clrf	__pbssCOMRAM& (0+255),c
   194  0029B4                     end_of_initialization:
   195                           	callstack 0
   196  0029B4                     __end_of__initialization:
   197                           	callstack 0
   198  0029B4  905D               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   199  0029B6  925D               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   200  0029B8  0100               	movlb	0
   201  0029BA  EFED  F012         	goto	_main	;jump to C main() function
   202                           
   203                           	psect	bssCOMRAM
   204  00005B                     __pbssCOMRAM:
   205                           	callstack 0
   206  00005B                     _flags:
   207                           	callstack 0
   208  00005B                     	ds	2
   209                           
   210                           	psect	bssBANK0
   211  000060                     __pbssBANK0:
   212                           	callstack 0
   213  000060                     	ds	64
   214  0000A0                     _nout:
   215                           	callstack 0
   216  0000A0                     	ds	2
   217  0000A2                     _width:
   218                           	callstack 0
   219  0000A2                     	ds	2
   220  0000A4                     _prec:
   221                           	callstack 0
   222  0000A4                     	ds	2
   223  0000A6                     _count:
   224                           	callstack 0
   225  0000A6                     	ds	2
   226  0000A8                     _a:
   227                           	callstack 0
   228  0000A8                     	ds	1
   229  0000A9                     _dbuf:
   230                           	callstack 0
   231  0000A9                     	ds	32
   232                           
   233                           	psect	dataBANK0
   234  0000E1                     __pdataBANK0:
   235                           	callstack 0
   236  0000E1                     _freq:
   237                           	callstack 0
   238  0000E1                     	ds	2
   239  0000E3                     _t:
   240                           	callstack 0
   241  0000E3                     	ds	2
   242                           
   243                           	psect	bssBANK1
   244  000100                     __pbssBANK1:
   245                           	callstack 0
   246  000100                     _print_buffer:
   247                           	callstack 0
   248  000100                     	ds	256
   249                           
   250                           	psect	cstackBANK0
   251  0000C9                     __pcstackBANK0:
   252                           	callstack 0
   253  0000C9                     ?_vfprintf:
   254                           	callstack 0
   255  0000C9                     vfprintf@fp:
   256                           	callstack 0
   257                           
   258                           ; 2 bytes @ 0x0
   259  0000C9                     	ds	2
   260  0000CB                     vfprintf@fmt:
   261                           	callstack 0
   262                           
   263                           ; 2 bytes @ 0x2
   264  0000CB                     	ds	2
   265  0000CD                     vfprintf@ap:
   266                           	callstack 0
   267                           
   268                           ; 2 bytes @ 0x4
   269  0000CD                     	ds	2
   270  0000CF                     vfprintf@cfmt:
   271                           	callstack 0
   272                           
   273                           ; 2 bytes @ 0x6
   274  0000CF                     	ds	2
   275  0000D1                     ?_sprintf:
   276                           	callstack 0
   277  0000D1                     sprintf@s:
   278                           	callstack 0
   279                           
   280                           ; 2 bytes @ 0x8
   281  0000D1                     	ds	2
   282  0000D3                     sprintf@fmt:
   283                           	callstack 0
   284                           
   285                           ; 2 bytes @ 0xA
   286  0000D3                     	ds	6
   287  0000D9                     sprintf@ap:
   288                           	callstack 0
   289                           
   290                           ; 2 bytes @ 0x10
   291  0000D9                     	ds	2
   292  0000DB                     sprintf@f:
   293                           	callstack 0
   294                           
   295                           ; 6 bytes @ 0x12
   296  0000DB                     	ds	6
   297                           
   298                           	psect	cstackCOMRAM
   299  000001                     __pcstackCOMRAM:
   300                           	callstack 0
   301  000001                     ??_high_isr:
   302  000001                     
   303                           ; 1 bytes @ 0x0
   304  000001                     	ds	1
   305  000002                     ?_strlen:
   306                           	callstack 0
   307  000002                     ?_isupper:
   308                           	callstack 0
   309  000002                     ?_isalpha:
   310                           	callstack 0
   311  000002                     ?_isdigit:
   312                           	callstack 0
   313  000002                     ?_isspace:
   314                           	callstack 0
   315  000002                     ?_islower:
   316                           	callstack 0
   317  000002                     ?_flash_read:
   318                           	callstack 0
   319  000002                     ?___wmul:
   320                           	callstack 0
   321  000002                     ?___aldiv:
   322                           	callstack 0
   323  000002                     ?___fltol:
   324                           	callstack 0
   325  000002                     ?___xxtofl:
   326                           	callstack 0
   327  000002                     UART_Write@data:
   328                           	callstack 0
   329  000002                     flash_read@flash_addr:
   330                           	callstack 0
   331  000002                     flash_block_delete@addr:
   332                           	callstack 0
   333  000002                     ___wmul@multiplier:
   334                           	callstack 0
   335  000002                     isalpha@c:
   336                           	callstack 0
   337  000002                     isdigit@c:
   338                           	callstack 0
   339  000002                     isspace@c:
   340                           	callstack 0
   341  000002                     isupper@c:
   342                           	callstack 0
   343  000002                     fputc@c:
   344                           	callstack 0
   345  000002                     strlen@s:
   346                           	callstack 0
   347  000002                     islower@c:
   348                           	callstack 0
   349  000002                     ___aldiv@dividend:
   350                           	callstack 0
   351  000002                     ___fltol@f1:
   352                           	callstack 0
   353  000002                     ___xxtofl@val:
   354                           	callstack 0
   355                           
   356                           ; 4 bytes @ 0x1
   357  000002                     	ds	1
   358  000003                     UART_send_string@str:
   359                           	callstack 0
   360                           
   361                           ; 2 bytes @ 0x2
   362  000003                     	ds	1
   363  000004                     ??_isupper:
   364  000004                     ??_isalpha:
   365  000004                     ??_isdigit:
   366  000004                     ??_isspace:
   367  000004                     ??_islower:
   368  000004                     ??_flash_read:
   369  000004                     flash_block_write@addr:
   370                           	callstack 0
   371  000004                     ___wmul@multiplicand:
   372                           	callstack 0
   373  000004                     fputc@fp:
   374                           	callstack 0
   375  000004                     strlen@a:
   376                           	callstack 0
   377                           
   378                           ; 2 bytes @ 0x3
   379  000004                     	ds	1
   380  000005                     ??_UART_send_string:
   381                           
   382                           ; 1 bytes @ 0x4
   383  000005                     	ds	1
   384  000006                     ??_fputc:
   385  000006                     ??___fltol:
   386  000006                     ??___xxtofl:
   387  000006                     UART_send_string@i:
   388                           	callstack 0
   389  000006                     flash_read@flash_h:
   390                           	callstack 0
   391  000006                     flash_block_write@flash_data_buff:
   392                           	callstack 0
   393  000006                     ___wmul@product:
   394                           	callstack 0
   395  000006                     ___aldiv@divisor:
   396                           	callstack 0
   397                           
   398                           ; 4 bytes @ 0x5
   399  000006                     	ds	2
   400  000008                     ?_toupper:
   401                           	callstack 0
   402  000008                     _isspace$1316:
   403                           	callstack 0
   404  000008                     flash_read@flash_l:
   405                           	callstack 0
   406  000008                     toupper@c:
   407                           	callstack 0
   408  000008                     flash_block_write@flash_store_buff:
   409                           	callstack 0
   410                           
   411                           ; 64 bytes @ 0x7
   412  000008                     	ds	1
   413  000009                     ?_atoi:
   414                           	callstack 0
   415  000009                     atoi@s:
   416                           	callstack 0
   417                           
   418                           ; 2 bytes @ 0x8
   419  000009                     	ds	1
   420  00000A                     ??_toupper:
   421  00000A                     ___aldiv@counter:
   422                           	callstack 0
   423  00000A                     ___fltol@sign1:
   424                           	callstack 0
   425  00000A                     ___xxtofl@sign:
   426                           	callstack 0
   427                           
   428                           ; 1 bytes @ 0x9
   429  00000A                     	ds	1
   430  00000B                     ??_atoi:
   431  00000B                     ___aldiv@sign:
   432                           	callstack 0
   433  00000B                     ___fltol@exp1:
   434                           	callstack 0
   435  00000B                     ___xxtofl@exp:
   436                           	callstack 0
   437  00000B                     fputs@s:
   438                           	callstack 0
   439                           
   440                           ; 2 bytes @ 0xA
   441  00000B                     	ds	1
   442  00000C                     ___aldiv@quotient:
   443                           	callstack 0
   444  00000C                     ___xxtofl@arg:
   445                           	callstack 0
   446                           
   447                           ; 4 bytes @ 0xB
   448  00000C                     	ds	1
   449  00000D                     fputs@fp:
   450                           	callstack 0
   451                           
   452                           ; 2 bytes @ 0xC
   453  00000D                     	ds	1
   454  00000E                     _toupper$1371:
   455                           	callstack 0
   456                           
   457                           ; 2 bytes @ 0xD
   458  00000E                     	ds	1
   459  00000F                     fputs@c:
   460                           	callstack 0
   461  00000F                     atoi@neg:
   462                           	callstack 0
   463                           
   464                           ; 2 bytes @ 0xE
   465  00000F                     	ds	1
   466  000010                     ?_freqCalc:
   467                           	callstack 0
   468  000010                     ?___fldiv:
   469                           	callstack 0
   470  000010                     freqCalc@f:
   471                           	callstack 0
   472  000010                     fputs@i:
   473                           	callstack 0
   474  000010                     ___fldiv@b:
   475                           	callstack 0
   476                           
   477                           ; 4 bytes @ 0xF
   478  000010                     	ds	1
   479  000011                     _atoi$1289:
   480                           	callstack 0
   481                           
   482                           ; 2 bytes @ 0x10
   483  000011                     	ds	1
   484  000012                     ??_freqCalc:
   485  000012                     ?_pad:
   486                           	callstack 0
   487  000012                     pad@fp:
   488                           	callstack 0
   489                           
   490                           ; 2 bytes @ 0x11
   491  000012                     	ds	1
   492  000013                     _atoi$1291:
   493                           	callstack 0
   494                           
   495                           ; 2 bytes @ 0x12
   496  000013                     	ds	1
   497  000014                     freqCalc@temp:
   498                           	callstack 0
   499  000014                     pad@buf:
   500                           	callstack 0
   501  000014                     ___fldiv@a:
   502                           	callstack 0
   503                           
   504                           ; 4 bytes @ 0x13
   505  000014                     	ds	1
   506  000015                     _atoi$1290:
   507                           	callstack 0
   508                           
   509                           ; 1 bytes @ 0x14
   510  000015                     	ds	1
   511  000016                     freqCalc@t:
   512                           	callstack 0
   513  000016                     pad@p:
   514                           	callstack 0
   515  000016                     atoi@n:
   516                           	callstack 0
   517                           
   518                           ; 2 bytes @ 0x15
   519  000016                     	ds	2
   520  000018                     ??___fldiv:
   521  000018                     ??_pad:
   522  000018                     freqCalc@cal:
   523                           	callstack 0
   524                           
   525                           ; 2 bytes @ 0x17
   526  000018                     	ds	1
   527  000019                     pad@i:
   528                           	callstack 0
   529                           
   530                           ; 2 bytes @ 0x18
   531  000019                     	ds	2
   532  00001B                     pad@w:
   533                           	callstack 0
   534                           
   535                           ; 2 bytes @ 0x1A
   536  00001B                     	ds	1
   537  00001C                     ___fldiv@rem:
   538                           	callstack 0
   539                           
   540                           ; 4 bytes @ 0x1B
   541  00001C                     	ds	1
   542  00001D                     ?_xtoa:
   543                           	callstack 0
   544  00001D                     xtoa@fp:
   545                           	callstack 0
   546                           
   547                           ; 2 bytes @ 0x1C
   548  00001D                     	ds	2
   549  00001F                     xtoa@d:
   550                           	callstack 0
   551                           
   552                           ; 8 bytes @ 0x1E
   553  00001F                     	ds	1
   554  000020                     ___fldiv@sign:
   555                           	callstack 0
   556                           
   557                           ; 1 bytes @ 0x1F
   558  000020                     	ds	1
   559  000021                     ___fldiv@new_exp:
   560                           	callstack 0
   561                           
   562                           ; 2 bytes @ 0x20
   563  000021                     	ds	2
   564  000023                     ___fldiv@grs:
   565                           	callstack 0
   566                           
   567                           ; 4 bytes @ 0x22
   568  000023                     	ds	4
   569  000027                     ___fldiv@bexp:
   570                           	callstack 0
   571  000027                     xtoa@x:
   572                           	callstack 0
   573                           
   574                           ; 1 bytes @ 0x26
   575  000027                     	ds	1
   576  000028                     ??_xtoa:
   577  000028                     ___fldiv@aexp:
   578                           	callstack 0
   579                           
   580                           ; 1 bytes @ 0x27
   581  000028                     	ds	1
   582  000029                     ?___fladd:
   583                           	callstack 0
   584  000029                     ___fladd@b:
   585                           	callstack 0
   586                           
   587                           ; 4 bytes @ 0x28
   588  000029                     	ds	4
   589  00002D                     ___fladd@a:
   590                           	callstack 0
   591                           
   592                           ; 4 bytes @ 0x2C
   593  00002D                     	ds	3
   594  000030                     _xtoa$1255:
   595                           	callstack 0
   596                           
   597                           ; 2 bytes @ 0x2F
   598  000030                     	ds	1
   599  000031                     ??___fladd:
   600                           
   601                           ; 1 bytes @ 0x30
   602  000031                     	ds	1
   603  000032                     _xtoa$1256:
   604                           	callstack 0
   605                           
   606                           ; 2 bytes @ 0x31
   607  000032                     	ds	2
   608  000034                     xtoa@p:
   609                           	callstack 0
   610                           
   611                           ; 2 bytes @ 0x33
   612  000034                     	ds	1
   613  000035                     ___fladd@signs:
   614                           	callstack 0
   615                           
   616                           ; 1 bytes @ 0x34
   617  000035                     	ds	1
   618  000036                     ___fladd@aexp:
   619                           	callstack 0
   620  000036                     xtoa@w:
   621                           	callstack 0
   622                           
   623                           ; 2 bytes @ 0x35
   624  000036                     	ds	1
   625  000037                     ___fladd@bexp:
   626                           	callstack 0
   627                           
   628                           ; 1 bytes @ 0x36
   629  000037                     	ds	1
   630  000038                     ___fladd@grs:
   631                           	callstack 0
   632  000038                     xtoa@n:
   633                           	callstack 0
   634                           
   635                           ; 8 bytes @ 0x37
   636  000038                     	ds	1
   637  000039                     UART_Initial@baud_rate:
   638                           	callstack 0
   639                           
   640                           ; 4 bytes @ 0x38
   641  000039                     	ds	4
   642  00003D                     UART_Initial@bps:
   643                           	callstack 0
   644                           
   645                           ; 4 bytes @ 0x3C
   646  00003D                     	ds	3
   647  000040                     xtoa@i:
   648                           	callstack 0
   649                           
   650                           ; 2 bytes @ 0x3F
   651  000040                     	ds	2
   652  000042                     xtoa@c:
   653                           	callstack 0
   654                           
   655                           ; 2 bytes @ 0x41
   656  000042                     	ds	2
   657  000044                     ?_vfpfcnvrt:
   658                           	callstack 0
   659  000044                     vfpfcnvrt@fp:
   660                           	callstack 0
   661                           
   662                           ; 2 bytes @ 0x43
   663  000044                     	ds	2
   664  000046                     vfpfcnvrt@fmt:
   665                           	callstack 0
   666                           
   667                           ; 2 bytes @ 0x45
   668  000046                     	ds	2
   669  000048                     flash_block_write@flash_ptr:
   670                           	callstack 0
   671  000048                     vfpfcnvrt@ap:
   672                           	callstack 0
   673                           
   674                           ; 2 bytes @ 0x47
   675  000048                     	ds	2
   676  00004A                     ??_vfpfcnvrt:
   677  00004A                     flash_block_write@i:
   678                           	callstack 0
   679                           
   680                           ; 1 bytes @ 0x49
   681  00004A                     	ds	4
   682  00004E                     vfpfcnvrt@llu:
   683                           	callstack 0
   684                           
   685                           ; 8 bytes @ 0x4D
   686  00004E                     	ds	8
   687  000056                     vfpfcnvrt@c:
   688                           	callstack 0
   689                           
   690                           ; 1 bytes @ 0x55
   691  000056                     	ds	1
   692  000057                     vfpfcnvrt@done:
   693                           	callstack 0
   694                           
   695                           ; 2 bytes @ 0x56
   696  000057                     	ds	2
   697  000059                     _vfpfcnvrt$1271:
   698                           	callstack 0
   699                           
   700                           ; 2 bytes @ 0x58
   701  000059                     	ds	2
   702  00005B                     
   703                           ; 1 bytes @ 0x5A
   704 ;;
   705 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   706 ;;
   707 ;; *************** function _main *****************
   708 ;; Defined at:
   709 ;;		line 168 in file "main.c"
   710 ;; Parameters:    Size  Location     Type
   711 ;;		None
   712 ;; Auto vars:     Size  Location     Type
   713 ;;		None
   714 ;; Return value:  Size  Location     Type
   715 ;;                  1    wreg      void 
   716 ;; Registers used:
   717 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   718 ;; Tracked objects:
   719 ;;		On entry : 0/0
   720 ;;		On exit  : 0/0
   721 ;;		Unchanged: 0/0
   722 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   723 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   724 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   725 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   726 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   727 ;;Total ram usage:        0 bytes
   728 ;; Hardware stack levels required when called:    9
   729 ;; This function calls:
   730 ;;		_UART_Initial
   731 ;;		_UART_send_string
   732 ;;		_flash_block_write
   733 ;;		_flash_read
   734 ;;		_freqCalc
   735 ;;		_sprintf
   736 ;; This function is called by:
   737 ;;		Startup code after reset
   738 ;; This function uses a non-reentrant model
   739 ;;
   740                           
   741                           	psect	text0
   742  0025DA                     __ptext0:
   743                           	callstack 0
   744  0025DA                     _main:
   745                           	callstack 22
   746  0025DA                     
   747                           ;main.c: 172:     OSCCONbits.IRCF = 0x07;
   748  0025DA  0E70               	movlw	112
   749  0025DC  12D3               	iorwf	211,f,c	;volatile
   750                           
   751                           ;main.c: 173:     OSCCONbits.SCS = 0x03;
   752  0025DE  0E03               	movlw	3
   753  0025E0  12D3               	iorwf	211,f,c	;volatile
   754  0025E2                     
   755                           ;main.c: 175:     hex = freqCalc(freq);
   756  0025E2  0E01               	movlw	1
   757  0025E4  6E11               	movwf	(freqCalc@f+1)^0,c
   758  0025E6  0EF4               	movlw	244
   759  0025E8  6E10               	movwf	freqCalc@f^0,c
   760  0025EA  EC37  F014         	call	_freqCalc	;wreg free
   761  0025EE  C010  F0E5         	movff	?_freqCalc,_hex
   762  0025F2  C011  F0E6         	movff	?_freqCalc+1,_hex+1
   763  0025F6                     
   764                           ;main.c: 177:     TRISE = 0x00;
   765  0025F6  0E00               	movlw	0
   766  0025F8  6E96               	movwf	150,c	;volatile
   767  0025FA                     
   768                           ;main.c: 178:     LATE = 0x00;
   769  0025FA  0E00               	movlw	0
   770  0025FC  6E8D               	movwf	141,c	;volatile
   771  0025FE                     
   772                           ;main.c: 179:     T1CON = 0x80;
   773  0025FE  0E80               	movlw	128
   774  002600  6ECD               	movwf	205,c	;volatile
   775  002602                     
   776                           ;main.c: 181:     TMR1 = hex;
   777  002602  C0E5  FFCE         	movff	_hex,4046	;volatile
   778  002606  C0E6  FFCF         	movff	_hex+1,4047	;volatile
   779                           
   780                           ;main.c: 185:     UART_Initial(9600);
   781  00260A  0E80               	movlw	128
   782  00260C  6E39               	movwf	UART_Initial@baud_rate^0,c
   783  00260E  0E25               	movlw	37
   784  002610  6E3A               	movwf	(UART_Initial@baud_rate+1)^0,c
   785  002612  0E00               	movlw	0
   786  002614  6E3B               	movwf	(UART_Initial@baud_rate+2)^0,c
   787  002616  0E00               	movlw	0
   788  002618  6E3C               	movwf	(UART_Initial@baud_rate+3)^0,c
   789  00261A  EC3F  F013         	call	_UART_Initial	;wreg free
   790  00261E                     
   791                           ;main.c: 187:     PIE1bits.TMR1IE = 1;
   792  00261E  809D               	bsf	157,0,c	;volatile
   793  002620                     
   794                           ;main.c: 188:     RCONbits.IPEN = 1;
   795  002620  8ED0               	bsf	208,7,c	;volatile
   796  002622                     
   797                           ;main.c: 189:     IPR1bits.TMR1IP =1;
   798  002622  809F               	bsf	159,0,c	;volatile
   799  002624                     
   800                           ;main.c: 190:     INTCONbits.GIE = 1;
   801  002624  8EF2               	bsf	242,7,c	;volatile
   802  002626                     
   803                           ;main.c: 191:     PIR1bits.TMR1IF = 0;
   804  002626  909E               	bcf	158,0,c	;volatile
   805  002628                     
   806                           ;main.c: 192:     LATEbits.LATE1 = 1;
   807  002628  828D               	bsf	141,1,c	;volatile
   808  00262A                     
   809                           ;main.c: 194:     T1CONbits.TMR1ON = 1;
   810  00262A  80CD               	bsf	205,0,c	;volatile
   811  00262C                     
   812                           ;main.c: 196:     flash_block_write(0x7FC0,hex);
   813  00262C  0E7F               	movlw	127
   814  00262E  6E05               	movwf	(flash_block_write@addr+1)^0,c
   815  002630  0EC0               	movlw	192
   816  002632  6E04               	movwf	flash_block_write@addr^0,c
   817  002634  C0E5  F006         	movff	_hex,flash_block_write@flash_data_buff
   818  002638  C0E6  F007         	movff	_hex+1,flash_block_write@flash_data_buff+1
   819  00263C  EC8F  F013         	call	_flash_block_write	;wreg free
   820  002640                     
   821                           ;main.c: 198:     sprintf(print_buffer, "0x%02X", flash_read(0x7FC0));
   822  002640  0E00               	movlw	low _print_buffer
   823  002642  0100               	movlb	0	; () banked
   824  002644  6FD1               	movwf	sprintf@s& (0+255),b
   825  002646  0E01               	movlw	high _print_buffer
   826  002648  6FD2               	movwf	(sprintf@s+1)& (0+255),b
   827  00264A  0E01               	movlw	low STR_1
   828  00264C  6FD3               	movwf	sprintf@fmt& (0+255),b
   829  00264E  0E10               	movlw	high STR_1
   830  002650  6FD4               	movwf	(sprintf@fmt+1)& (0+255),b
   831  002652  0E7F               	movlw	127
   832  002654  6E03               	movwf	(flash_read@flash_addr+1)^0,c
   833  002656  0EC0               	movlw	192
   834  002658  6E02               	movwf	flash_read@flash_addr^0,c
   835  00265A  EC06  F015         	call	_flash_read	;wreg free
   836  00265E  C002  F0D5         	movff	?_flash_read,?_sprintf+4
   837  002662  C003  F0D6         	movff	?_flash_read+1,?_sprintf+5
   838  002666  EC66  F014         	call	_sprintf	;wreg free
   839  00266A                     
   840                           ;main.c: 199:     UART_send_string(print_buffer);
   841  00266A  0E00               	movlw	low _print_buffer
   842  00266C  6E03               	movwf	UART_send_string@str^0,c
   843  00266E  0E01               	movlw	high _print_buffer
   844  002670  6E04               	movwf	(UART_send_string@str+1)^0,c
   845  002672  ECDF  F014         	call	_UART_send_string	;wreg free
   846  002676                     l113:
   847  002676  EF3B  F013         	goto	l113
   848  00267A  EF23  F000         	goto	start
   849  00267E                     __end_of_main:
   850                           	callstack 0
   851                           
   852 ;; *************** function _sprintf *****************
   853 ;; Defined at:
   854 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\nf_sprintf.c"
   855 ;; Parameters:    Size  Location     Type
   856 ;;  s               2    8[BANK0 ] PTR unsigned char 
   857 ;;		 -> print_buffer(256), 
   858 ;;  fmt             2   10[BANK0 ] PTR const unsigned char 
   859 ;;		 -> STR_1(7), 
   860 ;; Auto vars:     Size  Location     Type
   861 ;;  f               6   18[BANK0 ] struct _IO_FILE
   862 ;;  ap              2   16[BANK0 ] PTR void [1]
   863 ;;		 -> ?_sprintf(2), 
   864 ;;  ret             2    0        int 
   865 ;; Return value:  Size  Location     Type
   866 ;;                  2    8[BANK0 ] int 
   867 ;; Registers used:
   868 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   869 ;; Tracked objects:
   870 ;;		On entry : 0/0
   871 ;;		On exit  : 0/0
   872 ;;		Unchanged: 0/0
   873 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   874 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   875 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   876 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   877 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   878 ;;Total ram usage:       16 bytes
   879 ;; Hardware stack levels used:    1
   880 ;; Hardware stack levels required when called:    8
   881 ;; This function calls:
   882 ;;		_vfprintf
   883 ;; This function is called by:
   884 ;;		_main
   885 ;; This function uses a non-reentrant model
   886 ;;
   887                           
   888                           	psect	text1
   889  0028CC                     __ptext1:
   890                           	callstack 0
   891  0028CC                     _sprintf:
   892                           	callstack 22
   893  0028CC  0ED5               	movlw	low (?_sprintf+4)
   894  0028CE  0100               	movlb	0	; () banked
   895  0028D0  6FD9               	movwf	sprintf@ap& (0+255),b
   896  0028D2  0E00               	movlw	high (?_sprintf+4)
   897  0028D4  6FDA               	movwf	(sprintf@ap+1)& (0+255),b
   898  0028D6  C0D1  F0DB         	movff	sprintf@s,sprintf@f
   899  0028DA  C0D2  F0DC         	movff	sprintf@s+1,sprintf@f+1
   900  0028DE                     
   901                           ; BSR set to: 0
   902  0028DE  0E00               	movlw	0
   903  0028E0  6FDE               	movwf	(sprintf@f+3)& (0+255),b
   904  0028E2  0E00               	movlw	0
   905  0028E4  6FDD               	movwf	(sprintf@f+2)& (0+255),b
   906  0028E6                     
   907                           ; BSR set to: 0
   908  0028E6  0E00               	movlw	0
   909  0028E8  6FE0               	movwf	(sprintf@f+5)& (0+255),b
   910  0028EA  0E00               	movlw	0
   911  0028EC  6FDF               	movwf	(sprintf@f+4)& (0+255),b
   912  0028EE                     
   913                           ; BSR set to: 0
   914  0028EE  0EDB               	movlw	low sprintf@f
   915  0028F0  6FC9               	movwf	vfprintf@fp& (0+255),b
   916  0028F2  0E00               	movlw	high sprintf@f
   917  0028F4  6FCA               	movwf	(vfprintf@fp+1)& (0+255),b
   918  0028F6  C0D3  F0CB         	movff	sprintf@fmt,vfprintf@fmt
   919  0028FA  C0D4  F0CC         	movff	sprintf@fmt+1,vfprintf@fmt+1
   920  0028FE  0ED9               	movlw	low sprintf@ap
   921  002900  6FCD               	movwf	vfprintf@ap& (0+255),b
   922  002902  0E00               	movlw	high sprintf@ap
   923  002904  6FCE               	movwf	(vfprintf@ap+1)& (0+255),b
   924  002906  ECD5  F013         	call	_vfprintf	;wreg free
   925  00290A  0100               	movlb	0	; () banked
   926  00290C  51DD               	movf	(sprintf@f+2)& (0+255),w,b
   927  00290E  25D1               	addwf	sprintf@s& (0+255),w,b
   928  002910  6ED9               	movwf	fsr2l,c
   929  002912  51DE               	movf	(sprintf@f+3)& (0+255),w,b
   930  002914  21D2               	addwfc	(sprintf@s+1)& (0+255),w,b
   931  002916  6EDA               	movwf	fsr2h,c
   932  002918  0E00               	movlw	0
   933  00291A  6EDF               	movwf	indf2,c
   934  00291C                     
   935                           ; BSR set to: 0
   936  00291C  0012               	return		;funcret
   937  00291E                     __end_of_sprintf:
   938                           	callstack 0
   939                           
   940 ;; *************** function _vfprintf *****************
   941 ;; Defined at:
   942 ;;		line 1368 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
   943 ;; Parameters:    Size  Location     Type
   944 ;;  fp              2    0[BANK0 ] PTR struct _IO_FILE
   945 ;;		 -> sprintf@f(6), 
   946 ;;  fmt             2    2[BANK0 ] PTR const unsigned char 
   947 ;;		 -> STR_1(7), 
   948 ;;  ap              2    4[BANK0 ] PTR PTR void 
   949 ;;		 -> sprintf@ap(2), 
   950 ;; Auto vars:     Size  Location     Type
   951 ;;  cfmt            2    6[BANK0 ] PTR unsigned char 
   952 ;;		 -> STR_1(7), 
   953 ;; Return value:  Size  Location     Type
   954 ;;                  2    0[BANK0 ] int 
   955 ;; Registers used:
   956 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   957 ;; Tracked objects:
   958 ;;		On entry : 0/0
   959 ;;		On exit  : 0/0
   960 ;;		Unchanged: 0/0
   961 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   962 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   963 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   964 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   965 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   966 ;;Total ram usage:        8 bytes
   967 ;; Hardware stack levels used:    1
   968 ;; Hardware stack levels required when called:    7
   969 ;; This function calls:
   970 ;;		_vfpfcnvrt
   971 ;; This function is called by:
   972 ;;		_sprintf
   973 ;; This function uses a non-reentrant model
   974 ;;
   975                           
   976                           	psect	text2
   977  0027AA                     __ptext2:
   978                           	callstack 0
   979  0027AA                     _vfprintf:
   980                           	callstack 22
   981  0027AA                     
   982                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1368: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.20\pic\source
      +                          s\c99\common\doprnt.c: 1369: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\comm
      +                          on\doprnt.c: 1371:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\
      +                          common\doprnt.c: 1373:     cfmt = (char *)fmt;
   983  0027AA  C0CB  F0CF         	movff	vfprintf@fmt,vfprintf@cfmt
   984  0027AE  C0CC  F0D0         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
   985  0027B2                     
   986                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1374:     nout = 
      +                          0;
   987  0027B2  0E00               	movlw	0
   988  0027B4  0100               	movlb	0	; () banked
   989  0027B6  6FA1               	movwf	(_nout+1)& (0+255),b
   990  0027B8  0E00               	movlw	0
   991  0027BA  6FA0               	movwf	_nout& (0+255),b
   992                           
   993                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1375:     while (
      +                          *cfmt) {
   994  0027BC  EFF3  F013         	goto	l3342
   995  0027C0                     l3340:
   996                           
   997                           ; BSR set to: 0
   998                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1376:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
   999  0027C0  C0C9  F044         	movff	vfprintf@fp,vfpfcnvrt@fp
  1000  0027C4  C0CA  F045         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  1001  0027C8  0ECF               	movlw	low vfprintf@cfmt
  1002  0027CA  6E46               	movwf	vfpfcnvrt@fmt^0,c
  1003  0027CC  0E00               	movlw	high vfprintf@cfmt
  1004  0027CE  6E47               	movwf	(vfpfcnvrt@fmt+1)^0,c
  1005  0027D0  C0CD  F048         	movff	vfprintf@ap,vfpfcnvrt@ap
  1006  0027D4  C0CE  F049         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  1007  0027D8  EC65  F00A         	call	_vfpfcnvrt	;wreg free
  1008  0027DC  5044               	movf	?_vfpfcnvrt^0,w,c
  1009  0027DE  0100               	movlb	0	; () banked
  1010  0027E0  27A0               	addwf	_nout& (0+255),f,b
  1011  0027E2  5045               	movf	(?_vfpfcnvrt+1)^0,w,c
  1012  0027E4  23A1               	addwfc	(_nout+1)& (0+255),f,b
  1013  0027E6                     l3342:
  1014                           
  1015                           ; BSR set to: 0
  1016                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1375:     while (
      +                          *cfmt) {
  1017  0027E6  C0CF  FFF6         	movff	vfprintf@cfmt,tblptrl
  1018  0027EA  C0D0  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  1019  0027EE                     	if	0	;tblptru may be non-zero
  1020  0027EE                     	endif
  1021  0027EE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1022  0027EE  0E00               	movlw	low (__mediumconst shr (0+16))
  1023  0027F0  6EF8               	movwf	tblptru,c
  1024  0027F2                     	endif
  1025  0027F2  0008               	tblrd		*
  1026  0027F4  50F5               	movf	tablat,w,c
  1027  0027F6  0900               	iorlw	0
  1028  0027F8  A4D8               	btfss	status,2,c
  1029  0027FA  EF01  F014         	goto	u3601
  1030  0027FE  EF03  F014         	goto	u3600
  1031  002802                     u3601:
  1032  002802  EFE0  F013         	goto	l3340
  1033  002806                     u3600:
  1034  002806                     
  1035                           ; BSR set to: 0
  1036                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1378:     return 
      +                          nout;
  1037  002806  C0A0  F0C9         	movff	_nout,?_vfprintf
  1038  00280A  C0A1  F0CA         	movff	_nout+1,?_vfprintf+1
  1039  00280E                     
  1040                           ; BSR set to: 0
  1041  00280E  0012               	return		;funcret
  1042  002810                     __end_of_vfprintf:
  1043                           	callstack 0
  1044                           
  1045 ;; *************** function _vfpfcnvrt *****************
  1046 ;; Defined at:
  1047 ;;		line 670 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  1048 ;; Parameters:    Size  Location     Type
  1049 ;;  fp              2   67[COMRAM] PTR struct _IO_FILE
  1050 ;;		 -> sprintf@f(6), 
  1051 ;;  fmt             2   69[COMRAM] PTR PTR unsigned char 
  1052 ;;		 -> vfprintf@cfmt(2), 
  1053 ;;  ap              2   71[COMRAM] PTR PTR void 
  1054 ;;		 -> sprintf@ap(2), 
  1055 ;; Auto vars:     Size  Location     Type
  1056 ;;  llu             8   77[COMRAM] unsigned long long 
  1057 ;;  ll              8    0        long long 
  1058 ;;  f               4    0        long long 
  1059 ;;  vp              3    0        PTR void 
  1060 ;;  ct              3    0        unsigned char [3]
  1061 ;;  cp              3    0        PTR unsigned char 
  1062 ;;  done            2   86[COMRAM] int 
  1063 ;;  i               2    0        int 
  1064 ;;  c               1   85[COMRAM] unsigned char 
  1065 ;; Return value:  Size  Location     Type
  1066 ;;                  2   67[COMRAM] int 
  1067 ;; Registers used:
  1068 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1069 ;; Tracked objects:
  1070 ;;		On entry : 0/0
  1071 ;;		On exit  : 0/0
  1072 ;;		Unchanged: 0/0
  1073 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1074 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1075 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1076 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1077 ;;      Totals:        23       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1078 ;;Total ram usage:       23 bytes
  1079 ;; Hardware stack levels used:    1
  1080 ;; Hardware stack levels required when called:    6
  1081 ;; This function calls:
  1082 ;;		_atoi
  1083 ;;		_fputc
  1084 ;;		_isdigit
  1085 ;;		_xtoa
  1086 ;; This function is called by:
  1087 ;;		_vfprintf
  1088 ;; This function uses a non-reentrant model
  1089 ;;
  1090                           
  1091                           	psect	text3
  1092  0014CA                     __ptext3:
  1093                           	callstack 0
  1094  0014CA                     _vfpfcnvrt:
  1095                           	callstack 22
  1096  0014CA                     
  1097                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 670: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.20\pic\sou
      +                          rces\c99\common\doprnt.c: 671: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\co
      +                          mmon\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.20\pic\sou
      +                          rces\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files\Microchip\xc8\v2.20\pic
      +                          \sources\c99\common\doprnt.c: 674:     long long ll;;C:\Program Files\Microchip\xc8\v2.2
      +                          0\pic\sources\c99\common\doprnt.c: 675:     unsigned long long llu;
  1098  0014CA  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1099  0014CE  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1100  0014D2  CFDE FFF6          	movff	postinc2,tblptrl
  1101  0014D6  CFDD FFF7          	movff	postdec2,tblptrh
  1102  0014DA                     	if	0	;tblptru may be non-zero
  1103  0014DA                     	endif
  1104  0014DA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1105  0014DA  0E00               	movlw	low (__mediumconst shr (0+16))
  1106  0014DC  6EF8               	movwf	tblptru,c
  1107  0014DE                     	endif
  1108  0014DE  0008               	tblrd		*
  1109  0014E0  50F5               	movf	tablat,w,c
  1110  0014E2  0A25               	xorlw	37
  1111  0014E4  A4D8               	btfss	status,2,c
  1112  0014E6  EF77  F00A         	goto	u3491
  1113  0014EA  EF79  F00A         	goto	u3490
  1114  0014EE                     u3491:
  1115  0014EE  EF1D  F00C         	goto	l3324
  1116  0014F2                     u3490:
  1117  0014F2                     
  1118                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 681:         ++*f
      +                          mt;
  1119  0014F2  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1120  0014F6  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1121  0014FA  2ADE               	incf	postinc2,f,c
  1122  0014FC  0E00               	movlw	0
  1123  0014FE  22DD               	addwfc	postdec2,f,c
  1124  001500                     
  1125                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 683:         flag
      +                          s = width = 0;
  1126  001500  0E00               	movlw	0
  1127  001502  0100               	movlb	0	; () banked
  1128  001504  6FA3               	movwf	(_width+1)& (0+255),b
  1129  001506  0E00               	movlw	0
  1130  001508  6FA2               	movwf	_width& (0+255),b
  1131  00150A  C0A2  F05B         	movff	_width,_flags
  1132  00150E  C0A3  F05C         	movff	_width+1,_flags+1
  1133  001512                     
  1134                           ; BSR set to: 0
  1135                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 684:         prec
      +                           = -1;
  1136  001512  69A4               	setf	_prec& (0+255),b
  1137  001514  69A5               	setf	(_prec+1)& (0+255),b
  1138  001516                     
  1139                           ; BSR set to: 0
  1140                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 688:         done
      +                           = 0;
  1141  001516  0E00               	movlw	0
  1142  001518  6E58               	movwf	(vfpfcnvrt@done+1)^0,c
  1143  00151A  0E00               	movlw	0
  1144  00151C  6E57               	movwf	vfpfcnvrt@done^0,c
  1145                           
  1146                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 689:         whil
      +                          e (!done) {
  1147  00151E  EFD9  F00A         	goto	l3272
  1148  001522                     l3246:
  1149                           
  1150                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 692:             
      +                                  flags |= (1 << 0);
  1151  001522  805B               	bsf	_flags^0,0,c
  1152  001524                     l3248:
  1153                           
  1154                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 693:             
      +                                  ++*fmt;
  1155  001524  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1156  001528  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1157  00152C  2ADE               	incf	postinc2,f,c
  1158  00152E  0E00               	movlw	0
  1159  001530  22DD               	addwfc	postdec2,f,c
  1160                           
  1161                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 694:             
      +                                  break;
  1162  001532  EFD9  F00A         	goto	l3272
  1163  001536                     l3250:
  1164                           
  1165                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 696:             
      +                                  flags |= (1 << 1);
  1166  001536  825B               	bsf	_flags^0,1,c
  1167  001538  EF92  F00A         	goto	l3248
  1168  00153C                     l3254:
  1169                           
  1170                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 700:             
      +                                  flags |= (1 << 2);
  1171  00153C  845B               	bsf	_flags^0,2,c
  1172  00153E  EF92  F00A         	goto	l3248
  1173  001542                     l3258:
  1174                           
  1175                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 704:             
      +                                  flags |= (1 << 3);
  1176  001542  865B               	bsf	_flags^0,3,c
  1177  001544  EF92  F00A         	goto	l3248
  1178  001548                     l3262:
  1179                           
  1180                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 708:             
      +                                  flags |= (1 << 4);
  1181  001548  885B               	bsf	_flags^0,4,c
  1182  00154A  EF92  F00A         	goto	l3248
  1183  00154E                     l3266:
  1184                           
  1185                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 712:             
      +                                  done = 1;
  1186  00154E  0E00               	movlw	0
  1187  001550  6E58               	movwf	(vfpfcnvrt@done+1)^0,c
  1188  001552  0E01               	movlw	1
  1189  001554  6E57               	movwf	vfpfcnvrt@done^0,c
  1190                           
  1191                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 713:             
      +                                  break;
  1192  001556  EFD9  F00A         	goto	l3272
  1193  00155A                     l3270:
  1194  00155A  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1195  00155E  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1196  001562  CFDE FFF6          	movff	postinc2,tblptrl
  1197  001566  CFDD FFF7          	movff	postdec2,tblptrh
  1198  00156A                     	if	0	;tblptru may be non-zero
  1199  00156A                     	endif
  1200  00156A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1201  00156A  0E00               	movlw	low (__mediumconst shr (0+16))
  1202  00156C  6EF8               	movwf	tblptru,c
  1203  00156E                     	endif
  1204  00156E  0008               	tblrd		*
  1205  001570  50F5               	movf	tablat,w,c
  1206  001572  6E4A               	movwf	??_vfpfcnvrt^0,c
  1207  001574  6A4B               	clrf	(??_vfpfcnvrt+1)^0,c
  1208                           
  1209                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1210                           ; Switch size 1, requested type "simple"
  1211                           ; Number of cases is 1, Range of values is 0 to 0
  1212                           ; switch strategies available:
  1213                           ; Name         Instructions Cycles
  1214                           ; simple_byte            4     3 (average)
  1215                           ;	Chosen strategy is simple_byte
  1216  001576  504B               	movf	(??_vfpfcnvrt+1)^0,w,c
  1217  001578  0A00               	xorlw	0	; case 0
  1218  00157A  B4D8               	btfsc	status,2,c
  1219  00157C  EFC2  F00A         	goto	l3428
  1220  001580  EFA7  F00A         	goto	l3266
  1221  001584                     l3428:
  1222                           
  1223                           ; Switch size 1, requested type "simple"
  1224                           ; Number of cases is 5, Range of values is 32 to 48
  1225                           ; switch strategies available:
  1226                           ; Name         Instructions Cycles
  1227                           ; simple_byte           16     9 (average)
  1228                           ;	Chosen strategy is simple_byte
  1229  001584  504A               	movf	??_vfpfcnvrt^0,w,c
  1230  001586  0A20               	xorlw	32	; case 32
  1231  001588  B4D8               	btfsc	status,2,c
  1232  00158A  EFA1  F00A         	goto	l3258
  1233  00158E  0A03               	xorlw	3	; case 35
  1234  001590  B4D8               	btfsc	status,2,c
  1235  001592  EFA4  F00A         	goto	l3262
  1236  001596  0A08               	xorlw	8	; case 43
  1237  001598  B4D8               	btfsc	status,2,c
  1238  00159A  EF9E  F00A         	goto	l3254
  1239  00159E  0A06               	xorlw	6	; case 45
  1240  0015A0  B4D8               	btfsc	status,2,c
  1241  0015A2  EF91  F00A         	goto	l3246
  1242  0015A6  0A1D               	xorlw	29	; case 48
  1243  0015A8  B4D8               	btfsc	status,2,c
  1244  0015AA  EF9B  F00A         	goto	l3250
  1245  0015AE  EFA7  F00A         	goto	l3266
  1246  0015B2                     l3272:
  1247                           
  1248                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 689:         whil
      +                          e (!done) {
  1249  0015B2  5057               	movf	vfpfcnvrt@done^0,w,c
  1250  0015B4  1058               	iorwf	(vfpfcnvrt@done+1)^0,w,c
  1251  0015B6  B4D8               	btfsc	status,2,c
  1252  0015B8  EFE0  F00A         	goto	u3501
  1253  0015BC  EFE2  F00A         	goto	u3500
  1254  0015C0                     u3501:
  1255  0015C0  EFAD  F00A         	goto	l3270
  1256  0015C4                     u3500:
  1257  0015C4                     
  1258                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 716:         if (
      +                          flags & (1 << 0)) {
  1259  0015C4  A05B               	btfss	_flags^0,0,c
  1260  0015C6  EFE7  F00A         	goto	u3511
  1261  0015CA  EFE9  F00A         	goto	u3510
  1262  0015CE                     u3511:
  1263  0015CE  EFEA  F00A         	goto	l3276
  1264  0015D2                     u3510:
  1265  0015D2                     
  1266                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 717:             
      +                          flags &= ~(1 << 1);
  1267  0015D2  925B               	bcf	_flags^0,1,c
  1268  0015D4                     l3276:
  1269                           
  1270                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 723:         if (
      +                          (*fmt)[0] == '*') {
  1271  0015D4  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1272  0015D8  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1273  0015DC  CFDE FFF6          	movff	postinc2,tblptrl
  1274  0015E0  CFDD FFF7          	movff	postdec2,tblptrh
  1275  0015E4                     	if	0	;tblptru may be non-zero
  1276  0015E4                     	endif
  1277  0015E4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1278  0015E4  0E00               	movlw	low (__mediumconst shr (0+16))
  1279  0015E6  6EF8               	movwf	tblptru,c
  1280  0015E8                     	endif
  1281  0015E8  0008               	tblrd		*
  1282  0015EA  50F5               	movf	tablat,w,c
  1283  0015EC  0A2A               	xorlw	42
  1284  0015EE  A4D8               	btfss	status,2,c
  1285  0015F0  EFFC  F00A         	goto	u3521
  1286  0015F4  EFFE  F00A         	goto	u3520
  1287  0015F8                     u3521:
  1288  0015F8  EF28  F00B         	goto	l3284
  1289  0015FC                     u3520:
  1290  0015FC                     
  1291                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 724:             
      +                          ++*fmt;
  1292  0015FC  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1293  001600  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1294  001604  2ADE               	incf	postinc2,f,c
  1295  001606  0E00               	movlw	0
  1296  001608  22DD               	addwfc	postdec2,f,c
  1297                           
  1298                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 725:             
      +                          width = (*(int *)__va_arg(*(int **)ap, (int)0));
  1299  00160A  C048  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1300  00160E  C049  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1301  001612  CFDF F04A          	movff	indf2,??_vfpfcnvrt
  1302  001616  0E02               	movlw	2
  1303  001618  26DE               	addwf	postinc2,f,c
  1304  00161A  CFDF F04B          	movff	indf2,??_vfpfcnvrt+1
  1305  00161E  0E00               	movlw	0
  1306  001620  22DD               	addwfc	postdec2,f,c
  1307  001622  C04A  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1308  001626  C04B  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1309  00162A  CFDE F0A2          	movff	postinc2,_width
  1310  00162E  CFDD F0A3          	movff	postdec2,_width+1
  1311  001632                     
  1312                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 726:             
      +                          if (width < 0) {
  1313  001632  0100               	movlb	0	; () banked
  1314  001634  BFA3               	btfsc	(_width+1)& (0+255),7,b
  1315  001636  EF21  F00B         	goto	u3530
  1316  00163A  EF1F  F00B         	goto	u3531
  1317  00163E                     u3531:
  1318  00163E  EF6D  F00B         	goto	l3294
  1319  001642                     u3530:
  1320  001642                     
  1321                           ; BSR set to: 0
  1322                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 727:             
      +                              flags |= (1 << 0);
  1323  001642  805B               	bsf	_flags^0,0,c
  1324                           
  1325                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 728:             
      +                              width = -width;
  1326  001644  6DA2               	negf	_width& (0+255),b
  1327  001646  1FA3               	comf	(_width+1)& (0+255),f,b
  1328  001648  B0D8               	btfsc	status,0,c
  1329  00164A  2BA3               	incf	(_width+1)& (0+255),f,b
  1330  00164C  EF6D  F00B         	goto	l3294
  1331  001650                     l3284:
  1332                           
  1333                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 731:             
      +                          width = atoi(*fmt);
  1334  001650  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1335  001654  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1336  001658  CFDE F009          	movff	postinc2,atoi@s
  1337  00165C  CFDD F00A          	movff	postdec2,atoi@s+1
  1338  001660  EC4C  F010         	call	_atoi	;wreg free
  1339  001664  C009  F0A2         	movff	?_atoi,_width
  1340  001668  C00A  F0A3         	movff	?_atoi+1,_width+1
  1341                           
  1342                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 732:             
      +                          while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  1343  00166C  EF3F  F00B         	goto	l3288
  1344  001670                     l3286:
  1345                           
  1346                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 733:             
      +                              ++*fmt;
  1347  001670  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1348  001674  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1349  001678  2ADE               	incf	postinc2,f,c
  1350  00167A  0E00               	movlw	0
  1351  00167C  22DD               	addwfc	postdec2,f,c
  1352  00167E                     l3288:
  1353  00167E  0ED0               	movlw	208
  1354  001680  6E4A               	movwf	??_vfpfcnvrt^0,c
  1355  001682  0EFF               	movlw	255
  1356  001684  6E4B               	movwf	(??_vfpfcnvrt+1)^0,c
  1357  001686  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1358  00168A  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1359  00168E  CFDE FFF6          	movff	postinc2,tblptrl
  1360  001692  CFDD FFF7          	movff	postdec2,tblptrh
  1361  001696                     	if	0	;tblptru may be non-zero
  1362  001696                     	endif
  1363  001696                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1364  001696  0E00               	movlw	low (__mediumconst shr (0+16))
  1365  001698  6EF8               	movwf	tblptru,c
  1366  00169A                     	endif
  1367  00169A  0008               	tblrd		*
  1368  00169C  50F5               	movf	tablat,w,c
  1369  00169E  6E4C               	movwf	(??_vfpfcnvrt+2)^0,c
  1370  0016A0  6A4D               	clrf	(??_vfpfcnvrt+3)^0,c
  1371  0016A2  504A               	movf	??_vfpfcnvrt^0,w,c
  1372  0016A4  264C               	addwf	(??_vfpfcnvrt+2)^0,f,c
  1373  0016A6  504B               	movf	(??_vfpfcnvrt+1)^0,w,c
  1374  0016A8  224D               	addwfc	(??_vfpfcnvrt+3)^0,f,c
  1375  0016AA  504D               	movf	(??_vfpfcnvrt+3)^0,w,c
  1376  0016AC  E10A               	bnz	u3540
  1377  0016AE  0E0A               	movlw	10
  1378  0016B0  5C4C               	subwf	(??_vfpfcnvrt+2)^0,w,c
  1379  0016B2  A0D8               	btfss	status,0,c
  1380  0016B4  EF5E  F00B         	goto	u3541
  1381  0016B8  EF61  F00B         	goto	u3540
  1382  0016BC                     u3541:
  1383  0016BC  0E01               	movlw	1
  1384  0016BE  EF62  F00B         	goto	u3550
  1385  0016C2                     u3540:
  1386  0016C2  0E00               	movlw	0
  1387  0016C4                     u3550:
  1388  0016C4  6E59               	movwf	_vfpfcnvrt$1271^0,c
  1389  0016C6  6A5A               	clrf	(_vfpfcnvrt$1271+1)^0,c
  1390  0016C8  5059               	movf	_vfpfcnvrt$1271^0,w,c
  1391  0016CA  105A               	iorwf	(_vfpfcnvrt$1271+1)^0,w,c
  1392  0016CC  A4D8               	btfss	status,2,c
  1393  0016CE  EF6B  F00B         	goto	u3561
  1394  0016D2  EF6D  F00B         	goto	u3560
  1395  0016D6                     u3561:
  1396  0016D6  EF38  F00B         	goto	l3286
  1397  0016DA                     u3560:
  1398  0016DA                     l3294:
  1399                           
  1400                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1274:         if 
      +                          ((*fmt[0] == 'x') || (*fmt[0] == 'X')) {
  1401  0016DA  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1402  0016DE  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1403  0016E2  CFDE FFF6          	movff	postinc2,tblptrl
  1404  0016E6  CFDD FFF7          	movff	postdec2,tblptrh
  1405  0016EA                     	if	0	;tblptru may be non-zero
  1406  0016EA                     	endif
  1407  0016EA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1408  0016EA  0E00               	movlw	low (__mediumconst shr (0+16))
  1409  0016EC  6EF8               	movwf	tblptru,c
  1410  0016EE                     	endif
  1411  0016EE  0008               	tblrd		*
  1412  0016F0  50F5               	movf	tablat,w,c
  1413  0016F2  0A78               	xorlw	120
  1414  0016F4  B4D8               	btfsc	status,2,c
  1415  0016F6  EF7F  F00B         	goto	u3571
  1416  0016FA  EF81  F00B         	goto	u3570
  1417  0016FE                     u3571:
  1418  0016FE  EF95  F00B         	goto	l3298
  1419  001702                     u3570:
  1420  001702  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1421  001706  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1422  00170A  CFDE FFF6          	movff	postinc2,tblptrl
  1423  00170E  CFDD FFF7          	movff	postdec2,tblptrh
  1424  001712                     	if	0	;tblptru may be non-zero
  1425  001712                     	endif
  1426  001712                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1427  001712  0E00               	movlw	low (__mediumconst shr (0+16))
  1428  001714  6EF8               	movwf	tblptru,c
  1429  001716                     	endif
  1430  001716  0008               	tblrd		*
  1431  001718  50F5               	movf	tablat,w,c
  1432  00171A  0A58               	xorlw	88
  1433  00171C  A4D8               	btfss	status,2,c
  1434  00171E  EF93  F00B         	goto	u3581
  1435  001722  EF95  F00B         	goto	u3580
  1436  001726                     u3581:
  1437  001726  EFE5  F00B         	goto	l3308
  1438  00172A                     u3580:
  1439  00172A                     l3298:
  1440                           
  1441                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1276:            
      +                           c = (*fmt)[0];
  1442  00172A  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1443  00172E  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1444  001732  CFDE FFF6          	movff	postinc2,tblptrl
  1445  001736  CFDD FFF7          	movff	postdec2,tblptrh
  1446  00173A                     	if	0	;tblptru may be non-zero
  1447  00173A                     	endif
  1448  00173A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1449  00173A  0E00               	movlw	low (__mediumconst shr (0+16))
  1450  00173C  6EF8               	movwf	tblptru,c
  1451  00173E                     	endif
  1452  00173E  0008               	tblrd		*
  1453  001740  CFF5 F056          	movff	tablat,vfpfcnvrt@c
  1454  001744                     
  1455                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1277:            
      +                           ++*fmt;
  1456  001744  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1457  001748  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1458  00174C  2ADE               	incf	postinc2,f,c
  1459  00174E  0E00               	movlw	0
  1460  001750  22DD               	addwfc	postdec2,f,c
  1461  001752                     
  1462                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1278:            
      +                           llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned in
      +                          t)0));
  1463  001752  C048  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1464  001756  C049  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1465  00175A  CFDF F04A          	movff	indf2,??_vfpfcnvrt
  1466  00175E  0E02               	movlw	2
  1467  001760  26DE               	addwf	postinc2,f,c
  1468  001762  CFDF F04B          	movff	indf2,??_vfpfcnvrt+1
  1469  001766  0E00               	movlw	0
  1470  001768  22DD               	addwfc	postdec2,f,c
  1471  00176A  C04A  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1472  00176E  C04B  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1473  001772  CFDE F04C          	movff	postinc2,??_vfpfcnvrt+2
  1474  001776  CFDD F04D          	movff	postdec2,??_vfpfcnvrt+3
  1475  00177A  C04C  F04E         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  1476  00177E  C04D  F04F         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  1477  001782  6A50               	clrf	(vfpfcnvrt@llu+2)^0,c
  1478  001784  6A51               	clrf	(vfpfcnvrt@llu+3)^0,c
  1479  001786  6A52               	clrf	(vfpfcnvrt@llu+4)^0,c
  1480  001788  6A53               	clrf	(vfpfcnvrt@llu+5)^0,c
  1481  00178A  6A54               	clrf	(vfpfcnvrt@llu+6)^0,c
  1482  00178C  6A55               	clrf	(vfpfcnvrt@llu+7)^0,c
  1483  00178E                     
  1484                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1280:            
      +                           return xtoa(fp, llu, c);
  1485  00178E  C044  F01D         	movff	vfpfcnvrt@fp,xtoa@fp
  1486  001792  C045  F01E         	movff	vfpfcnvrt@fp+1,xtoa@fp+1
  1487  001796  C04E  F01F         	movff	vfpfcnvrt@llu,xtoa@d
  1488  00179A  C04F  F020         	movff	vfpfcnvrt@llu+1,xtoa@d+1
  1489  00179E  C050  F021         	movff	vfpfcnvrt@llu+2,xtoa@d+2
  1490  0017A2  C051  F022         	movff	vfpfcnvrt@llu+3,xtoa@d+3
  1491  0017A6  C052  F023         	movff	vfpfcnvrt@llu+4,xtoa@d+4
  1492  0017AA  C053  F024         	movff	vfpfcnvrt@llu+5,xtoa@d+5
  1493  0017AE  C054  F025         	movff	vfpfcnvrt@llu+6,xtoa@d+6
  1494  0017B2  C055  F026         	movff	vfpfcnvrt@llu+7,xtoa@d+7
  1495  0017B6  C056  F027         	movff	vfpfcnvrt@c,xtoa@x
  1496  0017BA  EC08  F00E         	call	_xtoa	;wreg free
  1497  0017BE  C01D  F044         	movff	?_xtoa,?_vfpfcnvrt
  1498  0017C2  C01E  F045         	movff	?_xtoa+1,?_vfpfcnvrt+1
  1499  0017C6  EF3A  F00C         	goto	l902
  1500  0017CA                     l3308:
  1501                           
  1502                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1350:         if 
      +                          ((*fmt)[0] == '%') {
  1503  0017CA  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1504  0017CE  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1505  0017D2  CFDE FFF6          	movff	postinc2,tblptrl
  1506  0017D6  CFDD FFF7          	movff	postdec2,tblptrh
  1507  0017DA                     	if	0	;tblptru may be non-zero
  1508  0017DA                     	endif
  1509  0017DA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1510  0017DA  0E00               	movlw	low (__mediumconst shr (0+16))
  1511  0017DC  6EF8               	movwf	tblptru,c
  1512  0017DE                     	endif
  1513  0017DE  0008               	tblrd		*
  1514  0017E0  50F5               	movf	tablat,w,c
  1515  0017E2  0A25               	xorlw	37
  1516  0017E4  A4D8               	btfss	status,2,c
  1517  0017E6  EFF7  F00B         	goto	u3591
  1518  0017EA  EFF9  F00B         	goto	u3590
  1519  0017EE                     u3591:
  1520  0017EE  EF10  F00C         	goto	l3318
  1521  0017F2                     u3590:
  1522  0017F2                     
  1523                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1351:            
      +                           ++*fmt;
  1524  0017F2  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1525  0017F6  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1526  0017FA  2ADE               	incf	postinc2,f,c
  1527  0017FC  0E00               	movlw	0
  1528  0017FE  22DD               	addwfc	postdec2,f,c
  1529  001800                     
  1530                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1352:            
      +                           fputc((int)'%', fp);
  1531  001800  0E00               	movlw	0
  1532  001802  6E03               	movwf	(fputc@c+1)^0,c
  1533  001804  0E25               	movlw	37
  1534  001806  6E02               	movwf	fputc@c^0,c
  1535  001808  C044  F004         	movff	vfpfcnvrt@fp,fputc@fp
  1536  00180C  C045  F005         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1537  001810  EC27  F012         	call	_fputc	;wreg free
  1538  001814                     l3314:
  1539                           
  1540                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1353:            
      +                           return 1;
  1541  001814  0E00               	movlw	0
  1542  001816  6E45               	movwf	(?_vfpfcnvrt+1)^0,c
  1543  001818  0E01               	movlw	1
  1544  00181A  6E44               	movwf	?_vfpfcnvrt^0,c
  1545  00181C  EF3A  F00C         	goto	l902
  1546  001820                     l3318:
  1547                           
  1548                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1357:         ++*
      +                          fmt;
  1549  001820  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1550  001824  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1551  001828  2ADE               	incf	postinc2,f,c
  1552  00182A  0E00               	movlw	0
  1553  00182C  22DD               	addwfc	postdec2,f,c
  1554  00182E                     
  1555                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1358:         ret
      +                          urn 0;
  1556  00182E  0E00               	movlw	0
  1557  001830  6E45               	movwf	(?_vfpfcnvrt+1)^0,c
  1558  001832  0E00               	movlw	0
  1559  001834  6E44               	movwf	?_vfpfcnvrt^0,c
  1560  001836  EF3A  F00C         	goto	l902
  1561  00183A                     l3324:
  1562                           
  1563                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1362:     fputc((
      +                          int)(*fmt)[0], fp);
  1564  00183A  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1565  00183E  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1566  001842  CFDE FFF6          	movff	postinc2,tblptrl
  1567  001846  CFDD FFF7          	movff	postdec2,tblptrh
  1568  00184A                     	if	0	;tblptru may be non-zero
  1569  00184A                     	endif
  1570  00184A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1571  00184A  0E00               	movlw	low (__mediumconst shr (0+16))
  1572  00184C  6EF8               	movwf	tblptru,c
  1573  00184E                     	endif
  1574  00184E  0008               	tblrd		*
  1575  001850  50F5               	movf	tablat,w,c
  1576  001852  6E02               	movwf	fputc@c^0,c
  1577  001854  6A03               	clrf	(fputc@c+1)^0,c
  1578  001856  C044  F004         	movff	vfpfcnvrt@fp,fputc@fp
  1579  00185A  C045  F005         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1580  00185E  EC27  F012         	call	_fputc	;wreg free
  1581  001862                     
  1582                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1363:     ++*fmt;
  1583  001862  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1584  001866  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1585  00186A  2ADE               	incf	postinc2,f,c
  1586  00186C  0E00               	movlw	0
  1587  00186E  22DD               	addwfc	postdec2,f,c
  1588  001870  EF0A  F00C         	goto	l3314
  1589  001874                     l902:
  1590  001874  0012               	return		;funcret
  1591  001876                     __end_of_vfpfcnvrt:
  1592                           	callstack 0
  1593                           
  1594 ;; *************** function _xtoa *****************
  1595 ;; Defined at:
  1596 ;;		line 623 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  1597 ;; Parameters:    Size  Location     Type
  1598 ;;  fp              2   28[COMRAM] PTR struct _IO_FILE
  1599 ;;		 -> sprintf@f(6), 
  1600 ;;  d               8   30[COMRAM] unsigned long long 
  1601 ;;  x               1   38[COMRAM] unsigned char 
  1602 ;; Auto vars:     Size  Location     Type
  1603 ;;  n               8   55[COMRAM] unsigned long long 
  1604 ;;  c               2   65[COMRAM] int 
  1605 ;;  i               2   63[COMRAM] int 
  1606 ;;  w               2   53[COMRAM] int 
  1607 ;;  p               2   51[COMRAM] int 
  1608 ;; Return value:  Size  Location     Type
  1609 ;;                  2   28[COMRAM] int 
  1610 ;; Registers used:
  1611 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1612 ;; Tracked objects:
  1613 ;;		On entry : 0/0
  1614 ;;		On exit  : 0/0
  1615 ;;		Unchanged: 0/0
  1616 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1617 ;;      Params:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1618 ;;      Locals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1619 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1620 ;;      Totals:        39       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1621 ;;Total ram usage:       39 bytes
  1622 ;; Hardware stack levels used:    1
  1623 ;; Hardware stack levels required when called:    5
  1624 ;; This function calls:
  1625 ;;		_isalpha
  1626 ;;		_isupper
  1627 ;;		_pad
  1628 ;;		_toupper
  1629 ;; This function is called by:
  1630 ;;		_vfpfcnvrt
  1631 ;; This function uses a non-reentrant model
  1632 ;;
  1633                           
  1634                           	psect	text4
  1635  001C10                     __ptext4:
  1636                           	callstack 0
  1637  001C10                     _xtoa:
  1638                           	callstack 22
  1639  001C10                     
  1640                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 623: static int x
      +                          toa(FILE *fp, unsigned long long d, char x);C:\Program Files\Microchip\xc8\v2.20\pic\sou
      +                          rces\c99\common\doprnt.c: 624: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\co
      +                          mmon\doprnt.c: 625:     int c, i, p, w;;C:\Program Files\Microchip\xc8\v2.20\pic\sources
      +                          \c99\common\doprnt.c: 626:     unsigned long long n;;C:\Program Files\Microchip\xc8\v2.2
      +                          0\pic\sources\c99\common\doprnt.c: 629:     if (!(prec < 0)) {
  1641  001C10  0100               	movlb	0	; () banked
  1642  001C12  BFA5               	btfsc	(_prec+1)& (0+255),7,b
  1643  001C14  EF0E  F00E         	goto	u3251
  1644  001C18  EF10  F00E         	goto	u3250
  1645  001C1C                     u3251:
  1646  001C1C  EF11  F00E         	goto	l3132
  1647  001C20                     u3250:
  1648  001C20                     
  1649                           ; BSR set to: 0
  1650                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 630:         flag
      +                          s &= ~(1 << 1);
  1651  001C20  925B               	bcf	_flags^0,1,c
  1652  001C22                     l3132:
  1653                           
  1654                           ; BSR set to: 0
  1655                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 632:     p = (0 <
      +                           prec) ? prec : 1;
  1656  001C22  BFA5               	btfsc	(_prec+1)& (0+255),7,b
  1657  001C24  EF1E  F00E         	goto	u3260
  1658  001C28  51A5               	movf	(_prec+1)& (0+255),w,b
  1659  001C2A  E106               	bnz	u3261
  1660  001C2C  05A4               	decf	_prec& (0+255),w,b
  1661  001C2E  B0D8               	btfsc	status,0,c
  1662  001C30  EF1C  F00E         	goto	u3261
  1663  001C34  EF1E  F00E         	goto	u3260
  1664  001C38                     u3261:
  1665  001C38  EF24  F00E         	goto	l848
  1666  001C3C                     u3260:
  1667  001C3C                     
  1668                           ; BSR set to: 0
  1669  001C3C  0E00               	movlw	0
  1670  001C3E  6E35               	movwf	(xtoa@p+1)^0,c
  1671  001C40  0E01               	movlw	1
  1672  001C42  6E34               	movwf	xtoa@p^0,c
  1673  001C44  EF28  F00E         	goto	l850
  1674  001C48                     l848:
  1675                           
  1676                           ; BSR set to: 0
  1677  001C48  C0A4  F034         	movff	_prec,xtoa@p
  1678  001C4C  C0A5  F035         	movff	_prec+1,xtoa@p+1
  1679  001C50                     l850:
  1680                           
  1681                           ; BSR set to: 0
  1682                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 633:     w = widt
      +                          h;
  1683  001C50  C0A2  F036         	movff	_width,xtoa@w
  1684  001C54  C0A3  F037         	movff	_width+1,xtoa@w+1
  1685                           
  1686                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 634:     if (flag
      +                          s & (1 << 4)) {
  1687  001C58  A85B               	btfss	_flags^0,4,c
  1688  001C5A  EF31  F00E         	goto	u3271
  1689  001C5E  EF33  F00E         	goto	u3270
  1690  001C62                     u3271:
  1691  001C62  EF37  F00E         	goto	l3138
  1692  001C66                     u3270:
  1693  001C66                     
  1694                           ; BSR set to: 0
  1695                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 635:         w -=
      +                           2;
  1696  001C66  0EFE               	movlw	254
  1697  001C68  2636               	addwf	xtoa@w^0,f,c
  1698  001C6A  0EFF               	movlw	255
  1699  001C6C  2237               	addwfc	(xtoa@w+1)^0,f,c
  1700  001C6E                     l3138:
  1701                           
  1702                           ; BSR set to: 0
  1703                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 639:     n = d;
  1704  001C6E  C01F  F038         	movff	xtoa@d,xtoa@n
  1705  001C72  C020  F039         	movff	xtoa@d+1,xtoa@n+1
  1706  001C76  C021  F03A         	movff	xtoa@d+2,xtoa@n+2
  1707  001C7A  C022  F03B         	movff	xtoa@d+3,xtoa@n+3
  1708  001C7E  C023  F03C         	movff	xtoa@d+4,xtoa@n+4
  1709  001C82  C024  F03D         	movff	xtoa@d+5,xtoa@n+5
  1710  001C86  C025  F03E         	movff	xtoa@d+6,xtoa@n+6
  1711  001C8A  C026  F03F         	movff	xtoa@d+7,xtoa@n+7
  1712  001C8E                     
  1713                           ; BSR set to: 0
  1714                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 640:     i = size
      +                          of(dbuf) - 1;
  1715  001C8E  0E00               	movlw	0
  1716  001C90  6E41               	movwf	(xtoa@i+1)^0,c
  1717  001C92  0E1F               	movlw	31
  1718  001C94  6E40               	movwf	xtoa@i^0,c
  1719  001C96                     
  1720                           ; BSR set to: 0
  1721                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 641:     dbuf[i] 
      +                          = '\0';
  1722  001C96  0E00               	movlw	0
  1723  001C98  6FC8               	movwf	(_dbuf+31)& (0+255),b
  1724                           
  1725                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 642:     while (!
      +                          (i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  1726  001C9A  EF02  F00F         	goto	l3174
  1727  001C9E                     l3144:
  1728                           
  1729                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 643:         --i;
  1730  001C9E  0640               	decf	xtoa@i^0,f,c
  1731  001CA0  A0D8               	btfss	status,0,c
  1732  001CA2  0641               	decf	(xtoa@i+1)^0,f,c
  1733  001CA4                     
  1734                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 644:         c = 
      +                          n & 0x0f;
  1735  001CA4  0E0F               	movlw	15
  1736  001CA6  1438               	andwf	xtoa@n^0,w,c
  1737  001CA8  6E42               	movwf	xtoa@c^0,c
  1738  001CAA  6A43               	clrf	(xtoa@c+1)^0,c
  1739  001CAC                     
  1740                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 645:         c = 
      +                          (c < 10) ? '0' + c : 'a' + (c - 10);
  1741  001CAC  BE43               	btfsc	(xtoa@c+1)^0,7,c
  1742  001CAE  EF62  F00E         	goto	u3281
  1743  001CB2  5043               	movf	(xtoa@c+1)^0,w,c
  1744  001CB4  E109               	bnz	u3280
  1745  001CB6  0E0A               	movlw	10
  1746  001CB8  5C42               	subwf	xtoa@c^0,w,c
  1747  001CBA  A0D8               	btfss	status,0,c
  1748  001CBC  EF62  F00E         	goto	u3281
  1749  001CC0  EF64  F00E         	goto	u3280
  1750  001CC4                     u3281:
  1751  001CC4  EF6C  F00E         	goto	l3152
  1752  001CC8                     u3280:
  1753  001CC8  0E57               	movlw	87
  1754  001CCA  2442               	addwf	xtoa@c^0,w,c
  1755  001CCC  6E42               	movwf	xtoa@c^0,c
  1756  001CCE  0E00               	movlw	0
  1757  001CD0  2043               	addwfc	(xtoa@c+1)^0,w,c
  1758  001CD2  6E43               	movwf	(xtoa@c+1)^0,c
  1759  001CD4  EF72  F00E         	goto	l857
  1760  001CD8                     l3152:
  1761  001CD8  0E30               	movlw	48
  1762  001CDA  2442               	addwf	xtoa@c^0,w,c
  1763  001CDC  6E42               	movwf	xtoa@c^0,c
  1764  001CDE  0E00               	movlw	0
  1765  001CE0  2043               	addwfc	(xtoa@c+1)^0,w,c
  1766  001CE2  6E43               	movwf	(xtoa@c+1)^0,c
  1767  001CE4                     l857:
  1768  001CE4  0EBF               	movlw	191
  1769  001CE6  6E28               	movwf	??_xtoa^0,c
  1770  001CE8  0EFF               	movlw	255
  1771  001CEA  6E29               	movwf	(??_xtoa+1)^0,c
  1772  001CEC  5027               	movf	xtoa@x^0,w,c
  1773  001CEE  6E2A               	movwf	(??_xtoa+2)^0,c
  1774  001CF0  6A2B               	clrf	(??_xtoa+3)^0,c
  1775  001CF2  5028               	movf	??_xtoa^0,w,c
  1776  001CF4  262A               	addwf	(??_xtoa+2)^0,f,c
  1777  001CF6  5029               	movf	(??_xtoa+1)^0,w,c
  1778  001CF8  222B               	addwfc	(??_xtoa+3)^0,f,c
  1779  001CFA  502B               	movf	(??_xtoa+3)^0,w,c
  1780  001CFC  E10A               	bnz	u3290
  1781  001CFE  0E1A               	movlw	26
  1782  001D00  5C2A               	subwf	(??_xtoa+2)^0,w,c
  1783  001D02  A0D8               	btfss	status,0,c
  1784  001D04  EF86  F00E         	goto	u3291
  1785  001D08  EF89  F00E         	goto	u3290
  1786  001D0C                     u3291:
  1787  001D0C  0E01               	movlw	1
  1788  001D0E  EF8A  F00E         	goto	u3300
  1789  001D12                     u3290:
  1790  001D12  0E00               	movlw	0
  1791  001D14                     u3300:
  1792  001D14  6E30               	movwf	_xtoa$1255^0,c
  1793  001D16  6A31               	clrf	(_xtoa$1255+1)^0,c
  1794  001D18  5030               	movf	_xtoa$1255^0,w,c
  1795  001D1A  1031               	iorwf	(_xtoa$1255+1)^0,w,c
  1796  001D1C  B4D8               	btfsc	status,2,c
  1797  001D1E  EF93  F00E         	goto	u3311
  1798  001D22  EF95  F00E         	goto	u3310
  1799  001D26                     u3311:
  1800  001D26  EFC5  F00E         	goto	l3166
  1801  001D2A                     u3310:
  1802  001D2A  0E9F               	movlw	159
  1803  001D2C  6E28               	movwf	??_xtoa^0,c
  1804  001D2E  0EFF               	movlw	255
  1805  001D30  6E29               	movwf	(??_xtoa+1)^0,c
  1806  001D32  0E20               	movlw	32
  1807  001D34  1042               	iorwf	xtoa@c^0,w,c
  1808  001D36  6E2A               	movwf	(??_xtoa+2)^0,c
  1809  001D38  0E00               	movlw	0
  1810  001D3A  1043               	iorwf	(xtoa@c+1)^0,w,c
  1811  001D3C  6E2B               	movwf	(??_xtoa+3)^0,c
  1812  001D3E  5028               	movf	??_xtoa^0,w,c
  1813  001D40  262A               	addwf	(??_xtoa+2)^0,f,c
  1814  001D42  5029               	movf	(??_xtoa+1)^0,w,c
  1815  001D44  222B               	addwfc	(??_xtoa+3)^0,f,c
  1816  001D46  502B               	movf	(??_xtoa+3)^0,w,c
  1817  001D48  E10A               	bnz	u3320
  1818  001D4A  0E1A               	movlw	26
  1819  001D4C  5C2A               	subwf	(??_xtoa+2)^0,w,c
  1820  001D4E  A0D8               	btfss	status,0,c
  1821  001D50  EFAC  F00E         	goto	u3321
  1822  001D54  EFAF  F00E         	goto	u3320
  1823  001D58                     u3321:
  1824  001D58  0E01               	movlw	1
  1825  001D5A  EFB0  F00E         	goto	u3330
  1826  001D5E                     u3320:
  1827  001D5E  0E00               	movlw	0
  1828  001D60                     u3330:
  1829  001D60  6E32               	movwf	_xtoa$1256^0,c
  1830  001D62  6A33               	clrf	(_xtoa$1256+1)^0,c
  1831  001D64  5032               	movf	_xtoa$1256^0,w,c
  1832  001D66  1033               	iorwf	(_xtoa$1256+1)^0,w,c
  1833  001D68  B4D8               	btfsc	status,2,c
  1834  001D6A  EFB9  F00E         	goto	u3341
  1835  001D6E  EFBB  F00E         	goto	u3340
  1836  001D72                     u3341:
  1837  001D72  EFC5  F00E         	goto	l3166
  1838  001D76                     u3340:
  1839  001D76                     
  1840                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 647:             
      +                          c = toupper(c);
  1841  001D76  C042  F008         	movff	xtoa@c,toupper@c
  1842  001D7A  C043  F009         	movff	xtoa@c+1,toupper@c+1
  1843  001D7E  EC08  F014         	call	_toupper	;wreg free
  1844  001D82  C008  F042         	movff	?_toupper,xtoa@c
  1845  001D86  C009  F043         	movff	?_toupper+1,xtoa@c+1
  1846  001D8A                     l3166:
  1847                           
  1848                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 649:         dbuf
      +                          [i] = (char)c;
  1849  001D8A  0EA9               	movlw	low _dbuf
  1850  001D8C  2440               	addwf	xtoa@i^0,w,c
  1851  001D8E  6ED9               	movwf	fsr2l,c
  1852  001D90  0E00               	movlw	high _dbuf
  1853  001D92  2041               	addwfc	(xtoa@i+1)^0,w,c
  1854  001D94  6EDA               	movwf	fsr2h,c
  1855  001D96  C042  FFDF         	movff	xtoa@c,indf2
  1856  001D9A                     
  1857                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 650:         --p;
  1858  001D9A  0634               	decf	xtoa@p^0,f,c
  1859  001D9C  A0D8               	btfss	status,0,c
  1860  001D9E  0635               	decf	(xtoa@p+1)^0,f,c
  1861  001DA0                     
  1862                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 651:         --w;
  1863  001DA0  0636               	decf	xtoa@w^0,f,c
  1864  001DA2  A0D8               	btfss	status,0,c
  1865  001DA4  0637               	decf	(xtoa@w+1)^0,f,c
  1866  001DA6                     
  1867                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 652:         n = 
      +                          n >> 4;
  1868  001DA6  C038  F028         	movff	xtoa@n,??_xtoa
  1869  001DAA  C039  F029         	movff	xtoa@n+1,??_xtoa+1
  1870  001DAE  C03A  F02A         	movff	xtoa@n+2,??_xtoa+2
  1871  001DB2  C03B  F02B         	movff	xtoa@n+3,??_xtoa+3
  1872  001DB6  C03C  F02C         	movff	xtoa@n+4,??_xtoa+4
  1873  001DBA  C03D  F02D         	movff	xtoa@n+5,??_xtoa+5
  1874  001DBE  C03E  F02E         	movff	xtoa@n+6,??_xtoa+6
  1875  001DC2  C03F  F02F         	movff	xtoa@n+7,??_xtoa+7
  1876  001DC6  0E05               	movlw	5
  1877  001DC8  EFEF  F00E         	goto	u3350
  1878  001DCC                     u3355:
  1879  001DCC  90D8               	bcf	status,0,c
  1880  001DCE  322F               	rrcf	(??_xtoa+7)^0,f,c
  1881  001DD0  322E               	rrcf	(??_xtoa+6)^0,f,c
  1882  001DD2  322D               	rrcf	(??_xtoa+5)^0,f,c
  1883  001DD4  322C               	rrcf	(??_xtoa+4)^0,f,c
  1884  001DD6  322B               	rrcf	(??_xtoa+3)^0,f,c
  1885  001DD8  322A               	rrcf	(??_xtoa+2)^0,f,c
  1886  001DDA  3229               	rrcf	(??_xtoa+1)^0,f,c
  1887  001DDC  3228               	rrcf	??_xtoa^0,f,c
  1888  001DDE                     u3350:
  1889  001DDE  2EE8               	decfsz	wreg,f,c
  1890  001DE0  EFE6  F00E         	goto	u3355
  1891  001DE4  C028  F038         	movff	??_xtoa,xtoa@n
  1892  001DE8  C029  F039         	movff	??_xtoa+1,xtoa@n+1
  1893  001DEC  C02A  F03A         	movff	??_xtoa+2,xtoa@n+2
  1894  001DF0  C02B  F03B         	movff	??_xtoa+3,xtoa@n+3
  1895  001DF4  C02C  F03C         	movff	??_xtoa+4,xtoa@n+4
  1896  001DF8  C02D  F03D         	movff	??_xtoa+5,xtoa@n+5
  1897  001DFC  C02E  F03E         	movff	??_xtoa+6,xtoa@n+6
  1898  001E00  C02F  F03F         	movff	??_xtoa+7,xtoa@n+7
  1899  001E04                     l3174:
  1900                           
  1901                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 642:     while (!
      +                          (i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  1902  001E04  BE41               	btfsc	(xtoa@i+1)^0,7,c
  1903  001E06  EF0E  F00F         	goto	u3361
  1904  001E0A  5041               	movf	(xtoa@i+1)^0,w,c
  1905  001E0C  E109               	bnz	u3360
  1906  001E0E  0E02               	movlw	2
  1907  001E10  5C40               	subwf	xtoa@i^0,w,c
  1908  001E12  A0D8               	btfss	status,0,c
  1909  001E14  EF0E  F00F         	goto	u3361
  1910  001E18  EF10  F00F         	goto	u3360
  1911  001E1C                     u3361:
  1912  001E1C  EF40  F00F         	goto	l871
  1913  001E20                     u3360:
  1914  001E20  5038               	movf	xtoa@n^0,w,c
  1915  001E22  1039               	iorwf	(xtoa@n+1)^0,w,c
  1916  001E24  103A               	iorwf	(xtoa@n+2)^0,w,c
  1917  001E26  103B               	iorwf	(xtoa@n+3)^0,w,c
  1918  001E28  103C               	iorwf	(xtoa@n+4)^0,w,c
  1919  001E2A  103D               	iorwf	(xtoa@n+5)^0,w,c
  1920  001E2C  103E               	iorwf	(xtoa@n+6)^0,w,c
  1921  001E2E  103F               	iorwf	(xtoa@n+7)^0,w,c
  1922  001E30  A4D8               	btfss	status,2,c
  1923  001E32  EF1D  F00F         	goto	u3371
  1924  001E36  EF1F  F00F         	goto	u3370
  1925  001E3A                     u3371:
  1926  001E3A  EF4F  F00E         	goto	l3144
  1927  001E3E                     u3370:
  1928  001E3E  BE35               	btfsc	(xtoa@p+1)^0,7,c
  1929  001E40  EF2C  F00F         	goto	u3380
  1930  001E44  5035               	movf	(xtoa@p+1)^0,w,c
  1931  001E46  E106               	bnz	u3381
  1932  001E48  0434               	decf	xtoa@p^0,w,c
  1933  001E4A  B0D8               	btfsc	status,0,c
  1934  001E4C  EF2A  F00F         	goto	u3381
  1935  001E50  EF2C  F00F         	goto	u3380
  1936  001E54                     u3381:
  1937  001E54  EF4F  F00E         	goto	l3144
  1938  001E58                     u3380:
  1939  001E58  BE37               	btfsc	(xtoa@w+1)^0,7,c
  1940  001E5A  EF37  F00F         	goto	u3391
  1941  001E5E  5037               	movf	(xtoa@w+1)^0,w,c
  1942  001E60  E108               	bnz	u3390
  1943  001E62  0436               	decf	xtoa@w^0,w,c
  1944  001E64  A0D8               	btfss	status,0,c
  1945  001E66  EF37  F00F         	goto	u3391
  1946  001E6A  EF39  F00F         	goto	u3390
  1947  001E6E                     u3391:
  1948  001E6E  EF40  F00F         	goto	l871
  1949  001E72                     u3390:
  1950  001E72  B25B               	btfsc	_flags^0,1,c
  1951  001E74  EF3E  F00F         	goto	u3401
  1952  001E78  EF40  F00F         	goto	u3400
  1953  001E7C                     u3401:
  1954  001E7C  EF4F  F00E         	goto	l3144
  1955  001E80                     u3400:
  1956  001E80                     l871:
  1957                           
  1958                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 656:     if (flag
      +                          s & (1 << 4)) {
  1959  001E80  A85B               	btfss	_flags^0,4,c
  1960  001E82  EF45  F00F         	goto	u3411
  1961  001E86  EF47  F00F         	goto	u3410
  1962  001E8A                     u3411:
  1963  001E8A  EF5D  F00F         	goto	l3190
  1964  001E8E                     u3410:
  1965  001E8E                     
  1966                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 657:         --i;
  1967  001E8E  0640               	decf	xtoa@i^0,f,c
  1968  001E90  A0D8               	btfss	status,0,c
  1969  001E92  0641               	decf	(xtoa@i+1)^0,f,c
  1970  001E94                     
  1971                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 658:         dbuf
      +                          [i] = x;
  1972  001E94  0EA9               	movlw	low _dbuf
  1973  001E96  2440               	addwf	xtoa@i^0,w,c
  1974  001E98  6ED9               	movwf	fsr2l,c
  1975  001E9A  0E00               	movlw	high _dbuf
  1976  001E9C  2041               	addwfc	(xtoa@i+1)^0,w,c
  1977  001E9E  6EDA               	movwf	fsr2h,c
  1978  001EA0  C027  FFDF         	movff	xtoa@x,indf2
  1979  001EA4                     
  1980                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 659:         --i;
  1981  001EA4  0640               	decf	xtoa@i^0,f,c
  1982  001EA6  A0D8               	btfss	status,0,c
  1983  001EA8  0641               	decf	(xtoa@i+1)^0,f,c
  1984                           
  1985                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 660:         dbuf
      +                          [i] = '0';
  1986  001EAA  0EA9               	movlw	low _dbuf
  1987  001EAC  2440               	addwf	xtoa@i^0,w,c
  1988  001EAE  6ED9               	movwf	fsr2l,c
  1989  001EB0  0E00               	movlw	high _dbuf
  1990  001EB2  2041               	addwfc	(xtoa@i+1)^0,w,c
  1991  001EB4  6EDA               	movwf	fsr2h,c
  1992  001EB6  0E30               	movlw	48
  1993  001EB8  6EDF               	movwf	indf2,c
  1994  001EBA                     l3190:
  1995                           
  1996                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 664:     return p
      +                          ad(fp, &dbuf[i], w);
  1997  001EBA  C01D  F012         	movff	xtoa@fp,pad@fp
  1998  001EBE  C01E  F013         	movff	xtoa@fp+1,pad@fp+1
  1999  001EC2  0EA9               	movlw	low _dbuf
  2000  001EC4  2440               	addwf	xtoa@i^0,w,c
  2001  001EC6  6E14               	movwf	pad@buf^0,c
  2002  001EC8  0E00               	movlw	high _dbuf
  2003  001ECA  2041               	addwfc	(xtoa@i+1)^0,w,c
  2004  001ECC  6E15               	movwf	(pad@buf+1)^0,c
  2005  001ECE  C036  F016         	movff	xtoa@w,pad@p
  2006  001ED2  C037  F017         	movff	xtoa@w+1,pad@p+1
  2007  001ED6  EC8C  F012         	call	_pad	;wreg free
  2008  001EDA  C012  F01D         	movff	?_pad,?_xtoa
  2009  001EDE  C013  F01E         	movff	?_pad+1,?_xtoa+1
  2010  001EE2  0012               	return		;funcret
  2011  001EE4                     __end_of_xtoa:
  2012                           	callstack 0
  2013                           
  2014 ;; *************** function _toupper *****************
  2015 ;; Defined at:
  2016 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\toupper.c"
  2017 ;; Parameters:    Size  Location     Type
  2018 ;;  c               2    7[COMRAM] int 
  2019 ;; Auto vars:     Size  Location     Type
  2020 ;;		None
  2021 ;; Return value:  Size  Location     Type
  2022 ;;                  2    7[COMRAM] int 
  2023 ;; Registers used:
  2024 ;;		wreg, status,2, status,0
  2025 ;; Tracked objects:
  2026 ;;		On entry : 0/0
  2027 ;;		On exit  : 0/0
  2028 ;;		Unchanged: 0/0
  2029 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2030 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2031 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2032 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2033 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2034 ;;Total ram usage:        8 bytes
  2035 ;; Hardware stack levels used:    1
  2036 ;; Hardware stack levels required when called:    2
  2037 ;; This function calls:
  2038 ;;		_islower
  2039 ;; This function is called by:
  2040 ;;		_xtoa
  2041 ;; This function uses a non-reentrant model
  2042 ;;
  2043                           
  2044                           	psect	text5
  2045  002810                     __ptext5:
  2046                           	callstack 0
  2047  002810                     _toupper:
  2048                           	callstack 24
  2049  002810  0E9F               	movlw	159
  2050  002812  6E0A               	movwf	??_toupper^0,c
  2051  002814  0EFF               	movlw	255
  2052  002816  6E0B               	movwf	(??_toupper+1)^0,c
  2053  002818  C008  F00C         	movff	toupper@c,??_toupper+2
  2054  00281C  C009  F00D         	movff	toupper@c+1,??_toupper+3
  2055  002820  500A               	movf	??_toupper^0,w,c
  2056  002822  260C               	addwf	(??_toupper+2)^0,f,c
  2057  002824  500B               	movf	(??_toupper+1)^0,w,c
  2058  002826  220D               	addwfc	(??_toupper+3)^0,f,c
  2059  002828  500D               	movf	(??_toupper+3)^0,w,c
  2060  00282A  E10A               	bnz	u3180
  2061  00282C  0E1A               	movlw	26
  2062  00282E  5C0C               	subwf	(??_toupper+2)^0,w,c
  2063  002830  A0D8               	btfss	status,0,c
  2064  002832  EF1D  F014         	goto	u3181
  2065  002836  EF20  F014         	goto	u3180
  2066  00283A                     u3181:
  2067  00283A  0E01               	movlw	1
  2068  00283C  EF21  F014         	goto	u3190
  2069  002840                     u3180:
  2070  002840  0E00               	movlw	0
  2071  002842                     u3190:
  2072  002842  6E0E               	movwf	_toupper$1371^0,c
  2073  002844  6A0F               	clrf	(_toupper$1371+1)^0,c
  2074  002846  500E               	movf	_toupper$1371^0,w,c
  2075  002848  100F               	iorwf	(_toupper$1371+1)^0,w,c
  2076  00284A  B4D8               	btfsc	status,2,c
  2077  00284C  EF2A  F014         	goto	u3201
  2078  002850  EF2C  F014         	goto	u3200
  2079  002854                     u3201:
  2080  002854  EF32  F014         	goto	l1000
  2081  002858                     u3200:
  2082  002858  0E5F               	movlw	95
  2083  00285A  1408               	andwf	toupper@c^0,w,c
  2084  00285C  6E08               	movwf	?_toupper^0,c
  2085  00285E  6A09               	clrf	(?_toupper+1)^0,c
  2086  002860  EF36  F014         	goto	l1005
  2087  002864                     l1000:
  2088  002864  C008  F008         	movff	toupper@c,?_toupper
  2089  002868  C009  F009         	movff	toupper@c+1,?_toupper+1
  2090  00286C                     l1005:
  2091  00286C  0012               	return		;funcret
  2092  00286E                     __end_of_toupper:
  2093                           	callstack 0
  2094                           
  2095 ;; *************** function _islower *****************
  2096 ;; Defined at:
  2097 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\islower.c"
  2098 ;; Parameters:    Size  Location     Type
  2099 ;;  c               2    1[COMRAM] int 
  2100 ;; Auto vars:     Size  Location     Type
  2101 ;;		None
  2102 ;; Return value:  Size  Location     Type
  2103 ;;                  2    1[COMRAM] int 
  2104 ;; Registers used:
  2105 ;;		wreg, status,2, status,0
  2106 ;; Tracked objects:
  2107 ;;		On entry : 0/0
  2108 ;;		On exit  : 0/0
  2109 ;;		Unchanged: 0/0
  2110 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2111 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2112 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2113 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2114 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2115 ;;Total ram usage:        6 bytes
  2116 ;; Hardware stack levels used:    1
  2117 ;; Hardware stack levels required when called:    1
  2118 ;; This function calls:
  2119 ;;		Nothing
  2120 ;; This function is called by:
  2121 ;;		_toupper
  2122 ;; This function uses a non-reentrant model
  2123 ;;
  2124                           
  2125                           	psect	text6
  2126  002AD8                     __ptext6:
  2127                           	callstack 0
  2128  002AD8                     _islower:
  2129                           	callstack 24
  2130  002AD8  0E9F               	movlw	159
  2131  002ADA  6E04               	movwf	??_islower^0,c
  2132  002ADC  0EFF               	movlw	255
  2133  002ADE  6E05               	movwf	(??_islower+1)^0,c
  2134  002AE0  C002  F006         	movff	islower@c,??_islower+2
  2135  002AE4  C003  F007         	movff	islower@c+1,??_islower+3
  2136  002AE8  5004               	movf	??_islower^0,w,c
  2137  002AEA  2606               	addwf	(??_islower+2)^0,f,c
  2138  002AEC  5005               	movf	(??_islower+1)^0,w,c
  2139  002AEE  2207               	addwfc	(??_islower+3)^0,f,c
  2140  002AF0  5007               	movf	(??_islower+3)^0,w,c
  2141  002AF2  E10A               	bnz	u3080
  2142  002AF4  0E1A               	movlw	26
  2143  002AF6  5C06               	subwf	(??_islower+2)^0,w,c
  2144  002AF8  A0D8               	btfss	status,0,c
  2145  002AFA  EF81  F015         	goto	u3081
  2146  002AFE  EF84  F015         	goto	u3080
  2147  002B02                     u3081:
  2148  002B02  0E01               	movlw	1
  2149  002B04  EF85  F015         	goto	u3090
  2150  002B08                     u3080:
  2151  002B08  0E00               	movlw	0
  2152  002B0A                     u3090:
  2153  002B0A  6E02               	movwf	?_islower^0,c
  2154  002B0C  6A03               	clrf	(?_islower+1)^0,c
  2155  002B0E  0012               	return		;funcret
  2156  002B10                     __end_of_islower:
  2157                           	callstack 0
  2158                           
  2159 ;; *************** function _pad *****************
  2160 ;; Defined at:
  2161 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  2162 ;; Parameters:    Size  Location     Type
  2163 ;;  fp              2   17[COMRAM] PTR struct _IO_FILE
  2164 ;;		 -> sprintf@f(6), 
  2165 ;;  buf             2   19[COMRAM] PTR unsigned char 
  2166 ;;		 -> dbuf(32), 
  2167 ;;  p               2   21[COMRAM] int 
  2168 ;; Auto vars:     Size  Location     Type
  2169 ;;  w               2   26[COMRAM] int 
  2170 ;;  i               2   24[COMRAM] int 
  2171 ;; Return value:  Size  Location     Type
  2172 ;;                  2   17[COMRAM] int 
  2173 ;; Registers used:
  2174 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2175 ;; Tracked objects:
  2176 ;;		On entry : 0/0
  2177 ;;		On exit  : 0/0
  2178 ;;		Unchanged: 0/0
  2179 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2180 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2181 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2182 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2183 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2184 ;;Total ram usage:       11 bytes
  2185 ;; Hardware stack levels used:    1
  2186 ;; Hardware stack levels required when called:    4
  2187 ;; This function calls:
  2188 ;;		_fputc
  2189 ;;		_fputs
  2190 ;;		_strlen
  2191 ;; This function is called by:
  2192 ;;		_xtoa
  2193 ;; This function uses a non-reentrant model
  2194 ;;
  2195                           
  2196                           	psect	text7
  2197  002518                     __ptext7:
  2198                           	callstack 0
  2199  002518                     _pad:
  2200                           	callstack 22
  2201  002518                     
  2202                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  2203  002518  A05B               	btfss	_flags^0,0,c
  2204  00251A  EF91  F012         	goto	u3101
  2205  00251E  EF93  F012         	goto	u3100
  2206  002522                     u3101:
  2207  002522  EF9D  F012         	goto	l3076
  2208  002526                     u3100:
  2209  002526                     
  2210                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  2211  002526  C014  F00B         	movff	pad@buf,fputs@s
  2212  00252A  C015  F00C         	movff	pad@buf+1,fputs@s+1
  2213  00252E  C012  F00D         	movff	pad@fp,fputs@fp
  2214  002532  C013  F00E         	movff	pad@fp+1,fputs@fp+1
  2215  002536  EC2C  F015         	call	_fputs	;wreg free
  2216  00253A                     l3076:
  2217                           
  2218                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  2219  00253A  BE17               	btfsc	(pad@p+1)^0,7,c
  2220  00253C  EFA2  F012         	goto	u3111
  2221  002540  EFA4  F012         	goto	u3110
  2222  002544                     u3111:
  2223  002544  EFAA  F012         	goto	l3080
  2224  002548                     u3110:
  2225  002548  C016  F01B         	movff	pad@p,pad@w
  2226  00254C  C017  F01C         	movff	pad@p+1,pad@w+1
  2227  002550  EFAE  F012         	goto	l838
  2228  002554                     l3080:
  2229  002554  0E00               	movlw	0
  2230  002556  6E1C               	movwf	(pad@w+1)^0,c
  2231  002558  0E00               	movlw	0
  2232  00255A  6E1B               	movwf	pad@w^0,c
  2233  00255C                     l838:
  2234                           
  2235                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  2236  00255C  0E00               	movlw	0
  2237  00255E  6E1A               	movwf	(pad@i+1)^0,c
  2238  002560  0E00               	movlw	0
  2239  002562  6E19               	movwf	pad@i^0,c
  2240                           
  2241                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  2242  002564  EFC0  F012         	goto	l3086
  2243  002568                     l3082:
  2244                           
  2245                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  2246  002568  0E00               	movlw	0
  2247  00256A  6E03               	movwf	(fputc@c+1)^0,c
  2248  00256C  0E20               	movlw	32
  2249  00256E  6E02               	movwf	fputc@c^0,c
  2250  002570  C012  F004         	movff	pad@fp,fputc@fp
  2251  002574  C013  F005         	movff	pad@fp+1,fputc@fp+1
  2252  002578  EC27  F012         	call	_fputc	;wreg free
  2253  00257C                     
  2254                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 86:         ++i;
  2255  00257C  4A19               	infsnz	pad@i^0,f,c
  2256  00257E  2A1A               	incf	(pad@i+1)^0,f,c
  2257  002580                     l3086:
  2258                           
  2259                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  2260  002580  501B               	movf	pad@w^0,w,c
  2261  002582  5C19               	subwf	pad@i^0,w,c
  2262  002584  501A               	movf	(pad@i+1)^0,w,c
  2263  002586  0A80               	xorlw	128
  2264  002588  6E18               	movwf	??_pad^0,c
  2265  00258A  501C               	movf	(pad@w+1)^0,w,c
  2266  00258C  0A80               	xorlw	128
  2267  00258E  5818               	subwfb	??_pad^0,w,c
  2268  002590  A0D8               	btfss	status,0,c
  2269  002592  EFCD  F012         	goto	u3121
  2270  002596  EFCF  F012         	goto	u3120
  2271  00259A                     u3121:
  2272  00259A  EFB4  F012         	goto	l3082
  2273  00259E                     u3120:
  2274  00259E                     
  2275                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  2276  00259E  B05B               	btfsc	_flags^0,0,c
  2277  0025A0  EFD4  F012         	goto	u3131
  2278  0025A4  EFD6  F012         	goto	u3130
  2279  0025A8                     u3131:
  2280  0025A8  EFE0  F012         	goto	l3090
  2281  0025AC                     u3130:
  2282  0025AC                     
  2283                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  2284  0025AC  C014  F00B         	movff	pad@buf,fputs@s
  2285  0025B0  C015  F00C         	movff	pad@buf+1,fputs@s+1
  2286  0025B4  C012  F00D         	movff	pad@fp,fputs@fp
  2287  0025B8  C013  F00E         	movff	pad@fp+1,fputs@fp+1
  2288  0025BC  EC2C  F015         	call	_fputs	;wreg free
  2289  0025C0                     l3090:
  2290                           
  2291                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 94:     return st
      +                          rlen(buf) + w;
  2292  0025C0  C014  F002         	movff	pad@buf,strlen@s
  2293  0025C4  C015  F003         	movff	pad@buf+1,strlen@s+1
  2294  0025C8  ECC0  F015         	call	_strlen	;wreg free
  2295  0025CC  501B               	movf	pad@w^0,w,c
  2296  0025CE  2402               	addwf	?_strlen^0,w,c
  2297  0025D0  6E12               	movwf	?_pad^0,c
  2298  0025D2  501C               	movf	(pad@w+1)^0,w,c
  2299  0025D4  2003               	addwfc	(?_strlen+1)^0,w,c
  2300  0025D6  6E13               	movwf	(?_pad+1)^0,c
  2301  0025D8  0012               	return		;funcret
  2302  0025DA                     __end_of_pad:
  2303                           	callstack 0
  2304                           
  2305 ;; *************** function _strlen *****************
  2306 ;; Defined at:
  2307 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\strlen.c"
  2308 ;; Parameters:    Size  Location     Type
  2309 ;;  s               2    1[COMRAM] PTR const unsigned char 
  2310 ;;		 -> dbuf(32), 
  2311 ;; Auto vars:     Size  Location     Type
  2312 ;;  a               2    3[COMRAM] PTR const unsigned char 
  2313 ;;		 -> dbuf(32), 
  2314 ;; Return value:  Size  Location     Type
  2315 ;;                  2    1[COMRAM] unsigned int 
  2316 ;; Registers used:
  2317 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2318 ;; Tracked objects:
  2319 ;;		On entry : 0/0
  2320 ;;		On exit  : 0/0
  2321 ;;		Unchanged: 0/0
  2322 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2323 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2324 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2325 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2326 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2327 ;;Total ram usage:        4 bytes
  2328 ;; Hardware stack levels used:    1
  2329 ;; Hardware stack levels required when called:    1
  2330 ;; This function calls:
  2331 ;;		Nothing
  2332 ;; This function is called by:
  2333 ;;		_pad
  2334 ;; This function uses a non-reentrant model
  2335 ;;
  2336                           
  2337                           	psect	text8
  2338  002B80                     __ptext8:
  2339                           	callstack 0
  2340  002B80                     _strlen:
  2341                           	callstack 24
  2342  002B80  C002  F004         	movff	strlen@s,strlen@a
  2343  002B84  C003  F005         	movff	strlen@s+1,strlen@a+1
  2344  002B88  EFC8  F015         	goto	l3056
  2345  002B8C                     l3054:
  2346  002B8C  4A02               	infsnz	strlen@s^0,f,c
  2347  002B8E  2A03               	incf	(strlen@s+1)^0,f,c
  2348  002B90                     l3056:
  2349  002B90  C002  FFD9         	movff	strlen@s,fsr2l
  2350  002B94  C003  FFDA         	movff	strlen@s+1,fsr2h
  2351  002B98  50DF               	movf	indf2,w,c
  2352  002B9A  A4D8               	btfss	status,2,c
  2353  002B9C  EFD2  F015         	goto	u3071
  2354  002BA0  EFD4  F015         	goto	u3070
  2355  002BA4                     u3071:
  2356  002BA4  EFC6  F015         	goto	l3054
  2357  002BA8                     u3070:
  2358  002BA8  5004               	movf	strlen@a^0,w,c
  2359  002BAA  5C02               	subwf	strlen@s^0,w,c
  2360  002BAC  6E02               	movwf	?_strlen^0,c
  2361  002BAE  5005               	movf	(strlen@a+1)^0,w,c
  2362  002BB0  5803               	subwfb	(strlen@s+1)^0,w,c
  2363  002BB2  6E03               	movwf	(?_strlen+1)^0,c
  2364  002BB4  0012               	return		;funcret
  2365  002BB6                     __end_of_strlen:
  2366                           	callstack 0
  2367                           
  2368 ;; *************** function _fputs *****************
  2369 ;; Defined at:
  2370 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\nf_fputs.c"
  2371 ;; Parameters:    Size  Location     Type
  2372 ;;  s               2   10[COMRAM] PTR const unsigned char 
  2373 ;;		 -> dbuf(32), 
  2374 ;;  fp              2   12[COMRAM] PTR struct _IO_FILE
  2375 ;;		 -> sprintf@f(6), 
  2376 ;; Auto vars:     Size  Location     Type
  2377 ;;  i               2   15[COMRAM] int 
  2378 ;;  c               1   14[COMRAM] unsigned char 
  2379 ;; Return value:  Size  Location     Type
  2380 ;;                  2   10[COMRAM] int 
  2381 ;; Registers used:
  2382 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2383 ;; Tracked objects:
  2384 ;;		On entry : 0/0
  2385 ;;		On exit  : 0/0
  2386 ;;		Unchanged: 0/0
  2387 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2388 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2389 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2390 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2391 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2392 ;;Total ram usage:        7 bytes
  2393 ;; Hardware stack levels used:    1
  2394 ;; Hardware stack levels required when called:    3
  2395 ;; This function calls:
  2396 ;;		_fputc
  2397 ;; This function is called by:
  2398 ;;		_pad
  2399 ;; This function uses a non-reentrant model
  2400 ;;
  2401                           
  2402                           	psect	text9
  2403  002A58                     __ptext9:
  2404                           	callstack 0
  2405  002A58                     _fputs:
  2406                           	callstack 22
  2407  002A58  0E00               	movlw	0
  2408  002A5A  6E11               	movwf	(fputs@i+1)^0,c
  2409  002A5C  0E00               	movlw	0
  2410  002A5E  6E10               	movwf	fputs@i^0,c
  2411  002A60  EF3D  F015         	goto	l3050
  2412  002A64                     l3046:
  2413  002A64  C00F  F002         	movff	fputs@c,fputc@c
  2414  002A68  6A03               	clrf	(fputc@c+1)^0,c
  2415  002A6A  C00D  F004         	movff	fputs@fp,fputc@fp
  2416  002A6E  C00E  F005         	movff	fputs@fp+1,fputc@fp+1
  2417  002A72  EC27  F012         	call	_fputc	;wreg free
  2418  002A76  4A10               	infsnz	fputs@i^0,f,c
  2419  002A78  2A11               	incf	(fputs@i+1)^0,f,c
  2420  002A7A                     l3050:
  2421  002A7A  5010               	movf	fputs@i^0,w,c
  2422  002A7C  240B               	addwf	fputs@s^0,w,c
  2423  002A7E  6ED9               	movwf	fsr2l,c
  2424  002A80  5011               	movf	(fputs@i+1)^0,w,c
  2425  002A82  200C               	addwfc	(fputs@s+1)^0,w,c
  2426  002A84  6EDA               	movwf	fsr2h,c
  2427  002A86  50DF               	movf	indf2,w,c
  2428  002A88  6E0F               	movwf	fputs@c^0,c
  2429  002A8A  500F               	movf	fputs@c^0,w,c
  2430  002A8C  A4D8               	btfss	status,2,c
  2431  002A8E  EF4B  F015         	goto	u3061
  2432  002A92  EF4D  F015         	goto	u3060
  2433  002A96                     u3061:
  2434  002A96  EF32  F015         	goto	l3046
  2435  002A9A                     u3060:
  2436  002A9A  0012               	return		;funcret
  2437  002A9C                     __end_of_fputs:
  2438                           	callstack 0
  2439                           
  2440 ;; *************** function _fputc *****************
  2441 ;; Defined at:
  2442 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\nf_fputc.c"
  2443 ;; Parameters:    Size  Location     Type
  2444 ;;  c               2    1[COMRAM] int 
  2445 ;;  fp              2    3[COMRAM] PTR struct _IO_FILE
  2446 ;;		 -> sprintf@f(6), 
  2447 ;; Auto vars:     Size  Location     Type
  2448 ;;		None
  2449 ;; Return value:  Size  Location     Type
  2450 ;;                  2    1[COMRAM] int 
  2451 ;; Registers used:
  2452 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2453 ;; Tracked objects:
  2454 ;;		On entry : 0/0
  2455 ;;		On exit  : 0/0
  2456 ;;		Unchanged: 0/0
  2457 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2458 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2459 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2460 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2461 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2462 ;;Total ram usage:        9 bytes
  2463 ;; Hardware stack levels used:    1
  2464 ;; Hardware stack levels required when called:    2
  2465 ;; This function calls:
  2466 ;;		_putch
  2467 ;; This function is called by:
  2468 ;;		_pad
  2469 ;;		_vfpfcnvrt
  2470 ;;		_fputs
  2471 ;; This function uses a non-reentrant model
  2472 ;;
  2473                           
  2474                           	psect	text10
  2475  00244E                     __ptext10:
  2476                           	callstack 0
  2477  00244E                     _fputc:
  2478                           	callstack 22
  2479  00244E  5004               	movf	fputc@fp^0,w,c
  2480  002450  1005               	iorwf	(fputc@fp+1)^0,w,c
  2481  002452  B4D8               	btfsc	status,2,c
  2482  002454  EF2E  F012         	goto	u3021
  2483  002458  EF30  F012         	goto	u3020
  2484  00245C                     u3021:
  2485  00245C  EF39  F012         	goto	l3034
  2486  002460                     u3020:
  2487  002460  5004               	movf	fputc@fp^0,w,c
  2488  002462  1005               	iorwf	(fputc@fp+1)^0,w,c
  2489  002464  A4D8               	btfss	status,2,c
  2490  002466  EF37  F012         	goto	u3031
  2491  00246A  EF39  F012         	goto	u3030
  2492  00246E                     u3031:
  2493  00246E  EF3E  F012         	goto	l3036
  2494  002472                     u3030:
  2495  002472                     l3034:
  2496  002472  5002               	movf	fputc@c^0,w,c
  2497  002474  EC18  F016         	call	_putch
  2498  002478  EF8B  F012         	goto	l978
  2499  00247C                     l3036:
  2500  00247C  EE20 F004          	lfsr	2,4
  2501  002480  5004               	movf	fputc@fp^0,w,c
  2502  002482  26D9               	addwf	fsr2l,f,c
  2503  002484  5005               	movf	(fputc@fp+1)^0,w,c
  2504  002486  22DA               	addwfc	fsr2h,f,c
  2505  002488  50DE               	movf	postinc2,w,c
  2506  00248A  10DE               	iorwf	postinc2,w,c
  2507  00248C  B4D8               	btfsc	status,2,c
  2508  00248E  EF4B  F012         	goto	u3041
  2509  002492  EF4D  F012         	goto	u3040
  2510  002496                     u3041:
  2511  002496  EF68  F012         	goto	l3040
  2512  00249A                     u3040:
  2513  00249A  EE20 F004          	lfsr	2,4
  2514  00249E  5004               	movf	fputc@fp^0,w,c
  2515  0024A0  26D9               	addwf	fsr2l,f,c
  2516  0024A2  5005               	movf	(fputc@fp+1)^0,w,c
  2517  0024A4  22DA               	addwfc	fsr2h,f,c
  2518  0024A6  EE10 F002          	lfsr	1,2
  2519  0024AA  5004               	movf	fputc@fp^0,w,c
  2520  0024AC  26E1               	addwf	fsr1l,f,c
  2521  0024AE  5005               	movf	(fputc@fp+1)^0,w,c
  2522  0024B0  22E2               	addwfc	fsr1h,f,c
  2523  0024B2  50DE               	movf	postinc2,w,c
  2524  0024B4  5CE6               	subwf	postinc1,w,c
  2525  0024B6  50E6               	movf	postinc1,w,c
  2526  0024B8  0A80               	xorlw	128
  2527  0024BA  6E0A               	movwf	(??_fputc+4)^0,c
  2528  0024BC  50DE               	movf	postinc2,w,c
  2529  0024BE  0A80               	xorlw	128
  2530  0024C0  580A               	subwfb	(??_fputc+4)^0,w,c
  2531  0024C2  B0D8               	btfsc	status,0,c
  2532  0024C4  EF66  F012         	goto	u3051
  2533  0024C8  EF68  F012         	goto	u3050
  2534  0024CC                     u3051:
  2535  0024CC  EF8B  F012         	goto	l978
  2536  0024D0                     u3050:
  2537  0024D0                     l3040:
  2538  0024D0  EE20 F002          	lfsr	2,2
  2539  0024D4  5004               	movf	fputc@fp^0,w,c
  2540  0024D6  26D9               	addwf	fsr2l,f,c
  2541  0024D8  5005               	movf	(fputc@fp+1)^0,w,c
  2542  0024DA  22DA               	addwfc	fsr2h,f,c
  2543  0024DC  CFDE F006          	movff	postinc2,??_fputc
  2544  0024E0  CFDD F007          	movff	postdec2,??_fputc+1
  2545  0024E4  C004  FFD9         	movff	fputc@fp,fsr2l
  2546  0024E8  C005  FFDA         	movff	fputc@fp+1,fsr2h
  2547  0024EC  CFDE F008          	movff	postinc2,??_fputc+2
  2548  0024F0  CFDD F009          	movff	postdec2,??_fputc+3
  2549  0024F4  5006               	movf	??_fputc^0,w,c
  2550  0024F6  2408               	addwf	(??_fputc+2)^0,w,c
  2551  0024F8  6ED9               	movwf	fsr2l,c
  2552  0024FA  5007               	movf	(??_fputc+1)^0,w,c
  2553  0024FC  2009               	addwfc	(??_fputc+3)^0,w,c
  2554  0024FE  6EDA               	movwf	fsr2h,c
  2555  002500  C002  FFDF         	movff	fputc@c,indf2
  2556  002504  EE20 F002          	lfsr	2,2
  2557  002508  5004               	movf	fputc@fp^0,w,c
  2558  00250A  26D9               	addwf	fsr2l,f,c
  2559  00250C  5005               	movf	(fputc@fp+1)^0,w,c
  2560  00250E  22DA               	addwfc	fsr2h,f,c
  2561  002510  2ADE               	incf	postinc2,f,c
  2562  002512  0E00               	movlw	0
  2563  002514  22DD               	addwfc	postdec2,f,c
  2564  002516                     l978:
  2565  002516  0012               	return		;funcret
  2566  002518                     __end_of_fputc:
  2567                           	callstack 0
  2568                           
  2569 ;; *************** function _putch *****************
  2570 ;; Defined at:
  2571 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\putch.c"
  2572 ;; Parameters:    Size  Location     Type
  2573 ;;  c               1    wreg     unsigned char 
  2574 ;; Auto vars:     Size  Location     Type
  2575 ;;  c               1    0[COMRAM] unsigned char 
  2576 ;; Return value:  Size  Location     Type
  2577 ;;                  1    wreg      void 
  2578 ;; Registers used:
  2579 ;;		wreg
  2580 ;; Tracked objects:
  2581 ;;		On entry : 0/0
  2582 ;;		On exit  : 0/0
  2583 ;;		Unchanged: 0/0
  2584 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2585 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2586 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2587 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2588 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2589 ;;Total ram usage:        0 bytes
  2590 ;; Hardware stack levels used:    1
  2591 ;; Hardware stack levels required when called:    1
  2592 ;; This function calls:
  2593 ;;		Nothing
  2594 ;; This function is called by:
  2595 ;;		_fputc
  2596 ;; This function uses a non-reentrant model
  2597 ;;
  2598                           
  2599                           	psect	text11
  2600  002C30                     __ptext11:
  2601                           	callstack 0
  2602  002C30                     _putch:
  2603                           	callstack 22
  2604  002C30  0012               	return		;funcret
  2605  002C32                     __end_of_putch:
  2606                           	callstack 0
  2607                           
  2608 ;; *************** function _isupper *****************
  2609 ;; Defined at:
  2610 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\isupper.c"
  2611 ;; Parameters:    Size  Location     Type
  2612 ;;  c               2    1[COMRAM] int 
  2613 ;; Auto vars:     Size  Location     Type
  2614 ;;		None
  2615 ;; Return value:  Size  Location     Type
  2616 ;;                  2    1[COMRAM] int 
  2617 ;; Registers used:
  2618 ;;		wreg, status,2, status,0
  2619 ;; Tracked objects:
  2620 ;;		On entry : 0/0
  2621 ;;		On exit  : 0/0
  2622 ;;		Unchanged: 0/0
  2623 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2624 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2625 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2626 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2627 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2628 ;;Total ram usage:        6 bytes
  2629 ;; Hardware stack levels used:    1
  2630 ;; Hardware stack levels required when called:    1
  2631 ;; This function calls:
  2632 ;;		Nothing
  2633 ;; This function is called by:
  2634 ;;		_xtoa
  2635 ;; This function uses a non-reentrant model
  2636 ;;
  2637                           
  2638                           	psect	text12
  2639  002B10                     __ptext12:
  2640                           	callstack 0
  2641  002B10                     _isupper:
  2642                           	callstack 25
  2643  002B10  0EBF               	movlw	191
  2644  002B12  6E04               	movwf	??_isupper^0,c
  2645  002B14  0EFF               	movlw	255
  2646  002B16  6E05               	movwf	(??_isupper+1)^0,c
  2647  002B18  C002  F006         	movff	isupper@c,??_isupper+2
  2648  002B1C  C003  F007         	movff	isupper@c+1,??_isupper+3
  2649  002B20  5004               	movf	??_isupper^0,w,c
  2650  002B22  2606               	addwf	(??_isupper+2)^0,f,c
  2651  002B24  5005               	movf	(??_isupper+1)^0,w,c
  2652  002B26  2207               	addwfc	(??_isupper+3)^0,f,c
  2653  002B28  5007               	movf	(??_isupper+3)^0,w,c
  2654  002B2A  E10A               	bnz	u3140
  2655  002B2C  0E1A               	movlw	26
  2656  002B2E  5C06               	subwf	(??_isupper+2)^0,w,c
  2657  002B30  A0D8               	btfss	status,0,c
  2658  002B32  EF9D  F015         	goto	u3141
  2659  002B36  EFA0  F015         	goto	u3140
  2660  002B3A                     u3141:
  2661  002B3A  0E01               	movlw	1
  2662  002B3C  EFA1  F015         	goto	u3150
  2663  002B40                     u3140:
  2664  002B40  0E00               	movlw	0
  2665  002B42                     u3150:
  2666  002B42  6E02               	movwf	?_isupper^0,c
  2667  002B44  6A03               	clrf	(?_isupper+1)^0,c
  2668  002B46  0012               	return		;funcret
  2669  002B48                     __end_of_isupper:
  2670                           	callstack 0
  2671                           
  2672 ;; *************** function _isalpha *****************
  2673 ;; Defined at:
  2674 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\isalpha.c"
  2675 ;; Parameters:    Size  Location     Type
  2676 ;;  c               2    1[COMRAM] int 
  2677 ;; Auto vars:     Size  Location     Type
  2678 ;;		None
  2679 ;; Return value:  Size  Location     Type
  2680 ;;                  2    1[COMRAM] int 
  2681 ;; Registers used:
  2682 ;;		wreg, status,2, status,0
  2683 ;; Tracked objects:
  2684 ;;		On entry : 0/0
  2685 ;;		On exit  : 0/0
  2686 ;;		Unchanged: 0/0
  2687 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2688 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2689 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2690 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2691 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2692 ;;Total ram usage:        6 bytes
  2693 ;; Hardware stack levels used:    1
  2694 ;; Hardware stack levels required when called:    1
  2695 ;; This function calls:
  2696 ;;		Nothing
  2697 ;; This function is called by:
  2698 ;;		_xtoa
  2699 ;; This function uses a non-reentrant model
  2700 ;;
  2701                           
  2702                           	psect	text13
  2703  002A9C                     __ptext13:
  2704                           	callstack 0
  2705  002A9C                     _isalpha:
  2706                           	callstack 25
  2707  002A9C  0E9F               	movlw	159
  2708  002A9E  6E04               	movwf	??_isalpha^0,c
  2709  002AA0  0EFF               	movlw	255
  2710  002AA2  6E05               	movwf	(??_isalpha+1)^0,c
  2711  002AA4  0E20               	movlw	32
  2712  002AA6  1002               	iorwf	isalpha@c^0,w,c
  2713  002AA8  6E06               	movwf	(??_isalpha+2)^0,c
  2714  002AAA  0E00               	movlw	0
  2715  002AAC  1003               	iorwf	(isalpha@c+1)^0,w,c
  2716  002AAE  6E07               	movwf	(??_isalpha+3)^0,c
  2717  002AB0  5004               	movf	??_isalpha^0,w,c
  2718  002AB2  2606               	addwf	(??_isalpha+2)^0,f,c
  2719  002AB4  5005               	movf	(??_isalpha+1)^0,w,c
  2720  002AB6  2207               	addwfc	(??_isalpha+3)^0,f,c
  2721  002AB8  5007               	movf	(??_isalpha+3)^0,w,c
  2722  002ABA  E10A               	bnz	u3160
  2723  002ABC  0E1A               	movlw	26
  2724  002ABE  5C06               	subwf	(??_isalpha+2)^0,w,c
  2725  002AC0  A0D8               	btfss	status,0,c
  2726  002AC2  EF65  F015         	goto	u3161
  2727  002AC6  EF68  F015         	goto	u3160
  2728  002ACA                     u3161:
  2729  002ACA  0E01               	movlw	1
  2730  002ACC  EF69  F015         	goto	u3170
  2731  002AD0                     u3160:
  2732  002AD0  0E00               	movlw	0
  2733  002AD2                     u3170:
  2734  002AD2  6E02               	movwf	?_isalpha^0,c
  2735  002AD4  6A03               	clrf	(?_isalpha+1)^0,c
  2736  002AD6  0012               	return		;funcret
  2737  002AD8                     __end_of_isalpha:
  2738                           	callstack 0
  2739                           
  2740 ;; *************** function _atoi *****************
  2741 ;; Defined at:
  2742 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\atoi.c"
  2743 ;; Parameters:    Size  Location     Type
  2744 ;;  s               2    8[COMRAM] PTR const unsigned char 
  2745 ;;		 -> STR_1(7), 
  2746 ;; Auto vars:     Size  Location     Type
  2747 ;;  n               2   21[COMRAM] int 
  2748 ;;  neg             2   14[COMRAM] int 
  2749 ;; Return value:  Size  Location     Type
  2750 ;;                  2    8[COMRAM] int 
  2751 ;; Registers used:
  2752 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2753 ;; Tracked objects:
  2754 ;;		On entry : 0/0
  2755 ;;		On exit  : 0/0
  2756 ;;		Unchanged: 0/0
  2757 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2758 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2759 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2760 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2761 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2762 ;;Total ram usage:       15 bytes
  2763 ;; Hardware stack levels used:    1
  2764 ;; Hardware stack levels required when called:    2
  2765 ;; This function calls:
  2766 ;;		___wmul
  2767 ;;		_isdigit
  2768 ;;		_isspace
  2769 ;; This function is called by:
  2770 ;;		_vfpfcnvrt
  2771 ;; This function uses a non-reentrant model
  2772 ;;
  2773                           
  2774                           	psect	text14
  2775  002098                     __ptext14:
  2776                           	callstack 0
  2777  002098                     _atoi:
  2778                           	callstack 25
  2779  002098  0E00               	movlw	0
  2780  00209A  6E17               	movwf	(atoi@n+1)^0,c
  2781  00209C  0E00               	movlw	0
  2782  00209E  6E16               	movwf	atoi@n^0,c
  2783  0020A0  0E00               	movlw	0
  2784  0020A2  6E10               	movwf	(atoi@neg+1)^0,c
  2785  0020A4  0E00               	movlw	0
  2786  0020A6  6E0F               	movwf	atoi@neg^0,c
  2787  0020A8  EF58  F010         	goto	l3198
  2788  0020AC                     l3196:
  2789  0020AC  4A09               	infsnz	atoi@s^0,f,c
  2790  0020AE  2A0A               	incf	(atoi@s+1)^0,f,c
  2791  0020B0                     l3198:
  2792  0020B0  0E01               	movlw	1
  2793  0020B2  6E15               	movwf	_atoi$1290^0,c
  2794  0020B4  C009  FFF6         	movff	atoi@s,tblptrl
  2795  0020B8  C00A  FFF7         	movff	atoi@s+1,tblptrh
  2796  0020BC                     	if	0	;tblptru may be non-zero
  2797  0020BC                     	endif
  2798  0020BC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2799  0020BC  0E00               	movlw	low (__mediumconst shr (0+16))
  2800  0020BE  6EF8               	movwf	tblptru,c
  2801  0020C0                     	endif
  2802  0020C0  0008               	tblrd		*
  2803  0020C2  50F5               	movf	tablat,w,c
  2804  0020C4  0A20               	xorlw	32
  2805  0020C6  B4D8               	btfsc	status,2,c
  2806  0020C8  EF68  F010         	goto	u3421
  2807  0020CC  EF6A  F010         	goto	u3420
  2808  0020D0                     u3421:
  2809  0020D0  EF89  F010         	goto	l3206
  2810  0020D4                     u3420:
  2811  0020D4  0EF7               	movlw	247
  2812  0020D6  6E0B               	movwf	??_atoi^0,c
  2813  0020D8  0EFF               	movlw	255
  2814  0020DA  6E0C               	movwf	(??_atoi+1)^0,c
  2815  0020DC  C009  FFF6         	movff	atoi@s,tblptrl
  2816  0020E0  C00A  FFF7         	movff	atoi@s+1,tblptrh
  2817  0020E4                     	if	0	;tblptru may be non-zero
  2818  0020E4                     	endif
  2819  0020E4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2820  0020E4  0E00               	movlw	low (__mediumconst shr (0+16))
  2821  0020E6  6EF8               	movwf	tblptru,c
  2822  0020E8                     	endif
  2823  0020E8  0008               	tblrd		*
  2824  0020EA  50F5               	movf	tablat,w,c
  2825  0020EC  6E0D               	movwf	(??_atoi+2)^0,c
  2826  0020EE  6A0E               	clrf	(??_atoi+3)^0,c
  2827  0020F0  500B               	movf	??_atoi^0,w,c
  2828  0020F2  260D               	addwf	(??_atoi+2)^0,f,c
  2829  0020F4  500C               	movf	(??_atoi+1)^0,w,c
  2830  0020F6  220E               	addwfc	(??_atoi+3)^0,f,c
  2831  0020F8  500E               	movf	(??_atoi+3)^0,w,c
  2832  0020FA  E109               	bnz	u3430
  2833  0020FC  0E05               	movlw	5
  2834  0020FE  5C0D               	subwf	(??_atoi+2)^0,w,c
  2835  002100  A0D8               	btfss	status,0,c
  2836  002102  EF85  F010         	goto	u3431
  2837  002106  EF87  F010         	goto	u3430
  2838  00210A                     u3431:
  2839  00210A  EF89  F010         	goto	l3206
  2840  00210E                     u3430:
  2841  00210E  0E00               	movlw	0
  2842  002110  6E15               	movwf	_atoi$1290^0,c
  2843  002112                     l3206:
  2844  002112  C015  F011         	movff	_atoi$1290,_atoi$1289
  2845  002116  6A12               	clrf	(_atoi$1289+1)^0,c
  2846  002118  5011               	movf	_atoi$1289^0,w,c
  2847  00211A  1012               	iorwf	(_atoi$1289+1)^0,w,c
  2848  00211C  A4D8               	btfss	status,2,c
  2849  00211E  EF93  F010         	goto	u3441
  2850  002122  EF95  F010         	goto	u3440
  2851  002126                     u3441:
  2852  002126  EF56  F010         	goto	l3196
  2853  00212A                     u3440:
  2854  00212A  EF9F  F010         	goto	l3216
  2855  00212E                     l3212:
  2856  00212E  0E00               	movlw	0
  2857  002130  6E10               	movwf	(atoi@neg+1)^0,c
  2858  002132  0E01               	movlw	1
  2859  002134  6E0F               	movwf	atoi@neg^0,c
  2860  002136                     l3214:
  2861  002136  4A09               	infsnz	atoi@s^0,f,c
  2862  002138  2A0A               	incf	(atoi@s+1)^0,f,c
  2863  00213A  EFD8  F010         	goto	l3222
  2864  00213E                     l3216:
  2865  00213E  C009  FFF6         	movff	atoi@s,tblptrl
  2866  002142  C00A  FFF7         	movff	atoi@s+1,tblptrh
  2867  002146                     	if	0	;tblptru may be non-zero
  2868  002146                     	endif
  2869  002146                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2870  002146  0E00               	movlw	low (__mediumconst shr (0+16))
  2871  002148  6EF8               	movwf	tblptru,c
  2872  00214A                     	endif
  2873  00214A  0008               	tblrd		*
  2874  00214C  50F5               	movf	tablat,w,c
  2875  00214E  6E0B               	movwf	??_atoi^0,c
  2876  002150  6A0C               	clrf	(??_atoi+1)^0,c
  2877                           
  2878                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2879                           ; Switch size 1, requested type "simple"
  2880                           ; Number of cases is 1, Range of values is 0 to 0
  2881                           ; switch strategies available:
  2882                           ; Name         Instructions Cycles
  2883                           ; simple_byte            4     3 (average)
  2884                           ;	Chosen strategy is simple_byte
  2885  002152  500C               	movf	(??_atoi+1)^0,w,c
  2886  002154  0A00               	xorlw	0	; case 0
  2887  002156  B4D8               	btfsc	status,2,c
  2888  002158  EFB0  F010         	goto	l3430
  2889  00215C  EFD8  F010         	goto	l3222
  2890  002160                     l3430:
  2891                           
  2892                           ; Switch size 1, requested type "simple"
  2893                           ; Number of cases is 2, Range of values is 43 to 45
  2894                           ; switch strategies available:
  2895                           ; Name         Instructions Cycles
  2896                           ; simple_byte            7     4 (average)
  2897                           ;	Chosen strategy is simple_byte
  2898  002160  500B               	movf	??_atoi^0,w,c
  2899  002162  0A2B               	xorlw	43	; case 43
  2900  002164  B4D8               	btfsc	status,2,c
  2901  002166  EF9B  F010         	goto	l3214
  2902  00216A  0A06               	xorlw	6	; case 45
  2903  00216C  B4D8               	btfsc	status,2,c
  2904  00216E  EF97  F010         	goto	l3212
  2905  002172  EFD8  F010         	goto	l3222
  2906  002176                     l3218:
  2907  002176  C016  F002         	movff	atoi@n,___wmul@multiplier
  2908  00217A  C017  F003         	movff	atoi@n+1,___wmul@multiplier+1
  2909  00217E  0E00               	movlw	0
  2910  002180  6E05               	movwf	(___wmul@multiplicand+1)^0,c
  2911  002182  0E0A               	movlw	10
  2912  002184  6E04               	movwf	___wmul@multiplicand^0,c
  2913  002186  ECDB  F015         	call	___wmul	;wreg free
  2914  00218A  C009  FFF6         	movff	atoi@s,tblptrl
  2915  00218E  C00A  FFF7         	movff	atoi@s+1,tblptrh
  2916  002192                     	if	0	;tblptru may be non-zero
  2917  002192                     	endif
  2918  002192                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2919  002192  0E00               	movlw	low (__mediumconst shr (0+16))
  2920  002194  6EF8               	movwf	tblptru,c
  2921  002196                     	endif
  2922  002196  0008               	tblrd		*
  2923  002198  50F5               	movf	tablat,w,c
  2924  00219A  5E02               	subwf	?___wmul^0,f,c
  2925  00219C  0E00               	movlw	0
  2926  00219E  5A03               	subwfb	(?___wmul+1)^0,f,c
  2927  0021A0  0E30               	movlw	48
  2928  0021A2  2402               	addwf	?___wmul^0,w,c
  2929  0021A4  6E16               	movwf	atoi@n^0,c
  2930  0021A6  0E00               	movlw	0
  2931  0021A8  2003               	addwfc	(?___wmul+1)^0,w,c
  2932  0021AA  6E17               	movwf	(atoi@n+1)^0,c
  2933  0021AC  EF9B  F010         	goto	l3214
  2934  0021B0                     l3222:
  2935  0021B0  0ED0               	movlw	208
  2936  0021B2  6E0B               	movwf	??_atoi^0,c
  2937  0021B4  0EFF               	movlw	255
  2938  0021B6  6E0C               	movwf	(??_atoi+1)^0,c
  2939  0021B8  C009  FFF6         	movff	atoi@s,tblptrl
  2940  0021BC  C00A  FFF7         	movff	atoi@s+1,tblptrh
  2941  0021C0                     	if	0	;tblptru may be non-zero
  2942  0021C0                     	endif
  2943  0021C0                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2944  0021C0  0E00               	movlw	low (__mediumconst shr (0+16))
  2945  0021C2  6EF8               	movwf	tblptru,c
  2946  0021C4                     	endif
  2947  0021C4  0008               	tblrd		*
  2948  0021C6  50F5               	movf	tablat,w,c
  2949  0021C8  6E0D               	movwf	(??_atoi+2)^0,c
  2950  0021CA  6A0E               	clrf	(??_atoi+3)^0,c
  2951  0021CC  500B               	movf	??_atoi^0,w,c
  2952  0021CE  260D               	addwf	(??_atoi+2)^0,f,c
  2953  0021D0  500C               	movf	(??_atoi+1)^0,w,c
  2954  0021D2  220E               	addwfc	(??_atoi+3)^0,f,c
  2955  0021D4  500E               	movf	(??_atoi+3)^0,w,c
  2956  0021D6  E10A               	bnz	u3450
  2957  0021D8  0E0A               	movlw	10
  2958  0021DA  5C0D               	subwf	(??_atoi+2)^0,w,c
  2959  0021DC  A0D8               	btfss	status,0,c
  2960  0021DE  EFF3  F010         	goto	u3451
  2961  0021E2  EFF6  F010         	goto	u3450
  2962  0021E6                     u3451:
  2963  0021E6  0E01               	movlw	1
  2964  0021E8  EFF7  F010         	goto	u3460
  2965  0021EC                     u3450:
  2966  0021EC  0E00               	movlw	0
  2967  0021EE                     u3460:
  2968  0021EE  6E13               	movwf	_atoi$1291^0,c
  2969  0021F0  6A14               	clrf	(_atoi$1291+1)^0,c
  2970  0021F2  5013               	movf	_atoi$1291^0,w,c
  2971  0021F4  1014               	iorwf	(_atoi$1291+1)^0,w,c
  2972  0021F6  A4D8               	btfss	status,2,c
  2973  0021F8  EF00  F011         	goto	u3471
  2974  0021FC  EF02  F011         	goto	u3470
  2975  002200                     u3471:
  2976  002200  EFBB  F010         	goto	l3218
  2977  002204                     u3470:
  2978  002204  500F               	movf	atoi@neg^0,w,c
  2979  002206  1010               	iorwf	(atoi@neg+1)^0,w,c
  2980  002208  A4D8               	btfss	status,2,c
  2981  00220A  EF09  F011         	goto	u3481
  2982  00220E  EF0B  F011         	goto	u3480
  2983  002212                     u3481:
  2984  002212  EF19  F011         	goto	l937
  2985  002216                     u3480:
  2986  002216  C016  F00B         	movff	atoi@n,??_atoi
  2987  00221A  C017  F00C         	movff	atoi@n+1,??_atoi+1
  2988  00221E  1E0B               	comf	??_atoi^0,f,c
  2989  002220  1E0C               	comf	(??_atoi+1)^0,f,c
  2990  002222  4A0B               	infsnz	??_atoi^0,f,c
  2991  002224  2A0C               	incf	(??_atoi+1)^0,f,c
  2992  002226  C00B  F009         	movff	??_atoi,?_atoi
  2993  00222A  C00C  F00A         	movff	??_atoi+1,?_atoi+1
  2994  00222E  EF1D  F011         	goto	l940
  2995  002232                     l937:
  2996  002232  C016  F009         	movff	atoi@n,?_atoi
  2997  002236  C017  F00A         	movff	atoi@n+1,?_atoi+1
  2998  00223A                     l940:
  2999  00223A  0012               	return		;funcret
  3000  00223C                     __end_of_atoi:
  3001                           	callstack 0
  3002                           
  3003 ;; *************** function _isspace *****************
  3004 ;; Defined at:
  3005 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\isspace.c"
  3006 ;; Parameters:    Size  Location     Type
  3007 ;;  c               2    1[COMRAM] int 
  3008 ;; Auto vars:     Size  Location     Type
  3009 ;;		None
  3010 ;; Return value:  Size  Location     Type
  3011 ;;                  2    1[COMRAM] int 
  3012 ;; Registers used:
  3013 ;;		wreg, status,2, status,0
  3014 ;; Tracked objects:
  3015 ;;		On entry : 0/0
  3016 ;;		On exit  : 0/0
  3017 ;;		Unchanged: 0/0
  3018 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3019 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3020 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3021 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3022 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3023 ;;Total ram usage:        7 bytes
  3024 ;; Hardware stack levels used:    1
  3025 ;; Hardware stack levels required when called:    1
  3026 ;; This function calls:
  3027 ;;		Nothing
  3028 ;; This function is called by:
  3029 ;;		_atoi
  3030 ;; This function uses a non-reentrant model
  3031 ;;
  3032                           
  3033                           	psect	text15
  3034  00291E                     __ptext15:
  3035                           	callstack 0
  3036  00291E                     _isspace:
  3037                           	callstack 25
  3038  00291E  0E01               	movlw	1
  3039  002920  6E08               	movwf	_isspace$1316^0,c
  3040  002922  0E20               	movlw	32
  3041  002924  1802               	xorwf	isspace@c^0,w,c
  3042  002926  1003               	iorwf	(isspace@c+1)^0,w,c
  3043  002928  B4D8               	btfsc	status,2,c
  3044  00292A  EF99  F014         	goto	u3231
  3045  00292E  EF9B  F014         	goto	u3230
  3046  002932                     u3231:
  3047  002932  EFB4  F014         	goto	l3124
  3048  002936                     u3230:
  3049  002936  0EF7               	movlw	247
  3050  002938  6E04               	movwf	??_isspace^0,c
  3051  00293A  0EFF               	movlw	255
  3052  00293C  6E05               	movwf	(??_isspace+1)^0,c
  3053  00293E  C002  F006         	movff	isspace@c,??_isspace+2
  3054  002942  C003  F007         	movff	isspace@c+1,??_isspace+3
  3055  002946  5004               	movf	??_isspace^0,w,c
  3056  002948  2606               	addwf	(??_isspace+2)^0,f,c
  3057  00294A  5005               	movf	(??_isspace+1)^0,w,c
  3058  00294C  2207               	addwfc	(??_isspace+3)^0,f,c
  3059  00294E  5007               	movf	(??_isspace+3)^0,w,c
  3060  002950  E109               	bnz	u3240
  3061  002952  0E05               	movlw	5
  3062  002954  5C06               	subwf	(??_isspace+2)^0,w,c
  3063  002956  A0D8               	btfss	status,0,c
  3064  002958  EFB0  F014         	goto	u3241
  3065  00295C  EFB2  F014         	goto	u3240
  3066  002960                     u3241:
  3067  002960  EFB4  F014         	goto	l3124
  3068  002964                     u3240:
  3069  002964  0E00               	movlw	0
  3070  002966  6E08               	movwf	_isspace$1316^0,c
  3071  002968                     l3124:
  3072  002968  C008  F002         	movff	_isspace$1316,?_isspace
  3073  00296C  6A03               	clrf	(?_isspace+1)^0,c
  3074  00296E  0012               	return		;funcret
  3075  002970                     __end_of_isspace:
  3076                           	callstack 0
  3077                           
  3078 ;; *************** function _isdigit *****************
  3079 ;; Defined at:
  3080 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\isdigit.c"
  3081 ;; Parameters:    Size  Location     Type
  3082 ;;  c               2    1[COMRAM] int 
  3083 ;; Auto vars:     Size  Location     Type
  3084 ;;		None
  3085 ;; Return value:  Size  Location     Type
  3086 ;;                  2    1[COMRAM] int 
  3087 ;; Registers used:
  3088 ;;		wreg, status,2, status,0
  3089 ;; Tracked objects:
  3090 ;;		On entry : 0/0
  3091 ;;		On exit  : 0/0
  3092 ;;		Unchanged: 0/0
  3093 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3094 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3095 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3096 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3097 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3098 ;;Total ram usage:        6 bytes
  3099 ;; Hardware stack levels used:    1
  3100 ;; Hardware stack levels required when called:    1
  3101 ;; This function calls:
  3102 ;;		Nothing
  3103 ;; This function is called by:
  3104 ;;		_vfpfcnvrt
  3105 ;;		_atoi
  3106 ;; This function uses a non-reentrant model
  3107 ;;
  3108                           
  3109                           	psect	text16
  3110  002B48                     __ptext16:
  3111                           	callstack 0
  3112  002B48                     _isdigit:
  3113                           	callstack 26
  3114  002B48  0ED0               	movlw	208
  3115  002B4A  6E04               	movwf	??_isdigit^0,c
  3116  002B4C  0EFF               	movlw	255
  3117  002B4E  6E05               	movwf	(??_isdigit+1)^0,c
  3118  002B50  C002  F006         	movff	isdigit@c,??_isdigit+2
  3119  002B54  C003  F007         	movff	isdigit@c+1,??_isdigit+3
  3120  002B58  5004               	movf	??_isdigit^0,w,c
  3121  002B5A  2606               	addwf	(??_isdigit+2)^0,f,c
  3122  002B5C  5005               	movf	(??_isdigit+1)^0,w,c
  3123  002B5E  2207               	addwfc	(??_isdigit+3)^0,f,c
  3124  002B60  5007               	movf	(??_isdigit+3)^0,w,c
  3125  002B62  E10A               	bnz	u3210
  3126  002B64  0E0A               	movlw	10
  3127  002B66  5C06               	subwf	(??_isdigit+2)^0,w,c
  3128  002B68  A0D8               	btfss	status,0,c
  3129  002B6A  EFB9  F015         	goto	u3211
  3130  002B6E  EFBC  F015         	goto	u3210
  3131  002B72                     u3211:
  3132  002B72  0E01               	movlw	1
  3133  002B74  EFBD  F015         	goto	u3220
  3134  002B78                     u3210:
  3135  002B78  0E00               	movlw	0
  3136  002B7A                     u3220:
  3137  002B7A  6E02               	movwf	?_isdigit^0,c
  3138  002B7C  6A03               	clrf	(?_isdigit+1)^0,c
  3139  002B7E  0012               	return		;funcret
  3140  002B80                     __end_of_isdigit:
  3141                           	callstack 0
  3142                           
  3143 ;; *************** function ___wmul *****************
  3144 ;; Defined at:
  3145 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\Umul16.c"
  3146 ;; Parameters:    Size  Location     Type
  3147 ;;  multiplier      2    1[COMRAM] unsigned int 
  3148 ;;  multiplicand    2    3[COMRAM] unsigned int 
  3149 ;; Auto vars:     Size  Location     Type
  3150 ;;  product         2    5[COMRAM] unsigned int 
  3151 ;; Return value:  Size  Location     Type
  3152 ;;                  2    1[COMRAM] unsigned int 
  3153 ;; Registers used:
  3154 ;;		wreg, status,2, status,0, prodl, prodh
  3155 ;; Tracked objects:
  3156 ;;		On entry : 0/0
  3157 ;;		On exit  : 0/0
  3158 ;;		Unchanged: 0/0
  3159 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3160 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3161 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3162 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3163 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3164 ;;Total ram usage:        6 bytes
  3165 ;; Hardware stack levels used:    1
  3166 ;; Hardware stack levels required when called:    1
  3167 ;; This function calls:
  3168 ;;		Nothing
  3169 ;; This function is called by:
  3170 ;;		_atoi
  3171 ;; This function uses a non-reentrant model
  3172 ;;
  3173                           
  3174                           	psect	text17
  3175  002BB6                     __ptext17:
  3176                           	callstack 0
  3177  002BB6                     ___wmul:
  3178                           	callstack 25
  3179  002BB6  5002               	movf	___wmul@multiplier^0,w,c
  3180  002BB8  0204               	mulwf	___wmul@multiplicand^0,c
  3181  002BBA  CFF3 F006          	movff	prodl,___wmul@product
  3182  002BBE  CFF4 F007          	movff	prodh,___wmul@product+1
  3183  002BC2  5002               	movf	___wmul@multiplier^0,w,c
  3184  002BC4  0205               	mulwf	(___wmul@multiplicand+1)^0,c
  3185  002BC6  50F3               	movf	243,w,c
  3186  002BC8  2607               	addwf	(___wmul@product+1)^0,f,c
  3187  002BCA  5003               	movf	(___wmul@multiplier+1)^0,w,c
  3188  002BCC  0204               	mulwf	___wmul@multiplicand^0,c
  3189  002BCE  50F3               	movf	243,w,c
  3190  002BD0  2607               	addwf	(___wmul@product+1)^0,f,c
  3191  002BD2  C006  F002         	movff	___wmul@product,?___wmul
  3192  002BD6  C007  F003         	movff	___wmul@product+1,?___wmul+1
  3193  002BDA  0012               	return		;funcret
  3194  002BDC                     __end_of___wmul:
  3195                           	callstack 0
  3196                           
  3197 ;; *************** function _freqCalc *****************
  3198 ;; Defined at:
  3199 ;;		line 69 in file "main.c"
  3200 ;; Parameters:    Size  Location     Type
  3201 ;;  f               2   15[COMRAM] int 
  3202 ;; Auto vars:     Size  Location     Type
  3203 ;;  cal             2   23[COMRAM] int 
  3204 ;;  t               2   21[COMRAM] int 
  3205 ;;  temp            2   19[COMRAM] int 
  3206 ;; Return value:  Size  Location     Type
  3207 ;;                  2   15[COMRAM] unsigned short 
  3208 ;; Registers used:
  3209 ;;		wreg, status,2, status,0, cstack
  3210 ;; Tracked objects:
  3211 ;;		On entry : 0/0
  3212 ;;		On exit  : 0/0
  3213 ;;		Unchanged: 0/0
  3214 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3215 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3216 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3217 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3218 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3219 ;;Total ram usage:       10 bytes
  3220 ;; Hardware stack levels used:    1
  3221 ;; Hardware stack levels required when called:    2
  3222 ;; This function calls:
  3223 ;;		___aldiv
  3224 ;; This function is called by:
  3225 ;;		_main
  3226 ;; This function uses a non-reentrant model
  3227 ;;
  3228                           
  3229                           	psect	text18
  3230  00286E                     __ptext18:
  3231                           	callstack 0
  3232  00286E                     _freqCalc:
  3233                           	callstack 28
  3234  00286E                     
  3235                           ;main.c: 70:     flash_l = TABLAT;
  3236  00286E  90D8               	bcf	status,0,c
  3237  002870  3410               	rlcf	freqCalc@f^0,w,c
  3238  002872  6E14               	movwf	freqCalc@temp^0,c
  3239  002874  3411               	rlcf	(freqCalc@f+1)^0,w,c
  3240  002876  6E15               	movwf	(freqCalc@temp+1)^0,c
  3241  002878                     
  3242                           ;main.c: 71:     return (flash_h << 8) | flash_l;
  3243  002878  0E00               	movlw	0
  3244  00287A  6E02               	movwf	___aldiv@dividend^0,c
  3245  00287C  0E12               	movlw	18
  3246  00287E  6E03               	movwf	(___aldiv@dividend+1)^0,c
  3247  002880  0E7A               	movlw	122
  3248  002882  6E04               	movwf	(___aldiv@dividend+2)^0,c
  3249  002884  0E00               	movlw	0
  3250  002886  6E05               	movwf	(___aldiv@dividend+3)^0,c
  3251  002888  C014  F012         	movff	freqCalc@temp,??_freqCalc
  3252  00288C  C015  F013         	movff	freqCalc@temp+1,??_freqCalc+1
  3253  002890  90D8               	bcf	status,0,c
  3254  002892  3612               	rlcf	??_freqCalc^0,f,c
  3255  002894  3613               	rlcf	(??_freqCalc+1)^0,f,c
  3256  002896  90D8               	bcf	status,0,c
  3257  002898  3612               	rlcf	??_freqCalc^0,f,c
  3258  00289A  3613               	rlcf	(??_freqCalc+1)^0,f,c
  3259  00289C  C012  F006         	movff	??_freqCalc,___aldiv@divisor
  3260  0028A0  C013  F007         	movff	??_freqCalc+1,___aldiv@divisor+1
  3261  0028A4  0E00               	movlw	0
  3262  0028A6  BE07               	btfsc	(___aldiv@divisor+1)^0,7,c
  3263  0028A8  0EFF               	movlw	-1
  3264  0028AA  6E08               	movwf	(___aldiv@divisor+2)^0,c
  3265  0028AC  6E09               	movwf	(___aldiv@divisor+3)^0,c
  3266  0028AE  EC1E  F011         	call	___aldiv	;wreg free
  3267  0028B2  C002  F016         	movff	?___aldiv,freqCalc@t
  3268  0028B6  C003  F017         	movff	?___aldiv+1,freqCalc@t+1
  3269  0028BA                     
  3270                           ;main.c: 72: }
  3271  0028BA  1C16               	comf	freqCalc@t^0,w,c
  3272  0028BC  6E18               	movwf	freqCalc@cal^0,c
  3273  0028BE  1C17               	comf	(freqCalc@t+1)^0,w,c
  3274  0028C0  6E19               	movwf	(freqCalc@cal+1)^0,c
  3275  0028C2                     
  3276                           ;main.c: 73: 
  3277  0028C2  C018  F010         	movff	freqCalc@cal,?_freqCalc
  3278  0028C6  C019  F011         	movff	freqCalc@cal+1,?_freqCalc+1
  3279  0028CA  0012               	return		;funcret
  3280  0028CC                     __end_of_freqCalc:
  3281                           	callstack 0
  3282                           
  3283 ;; *************** function ___aldiv *****************
  3284 ;; Defined at:
  3285 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\aldiv.c"
  3286 ;; Parameters:    Size  Location     Type
  3287 ;;  dividend        4    1[COMRAM] long 
  3288 ;;  divisor         4    5[COMRAM] long 
  3289 ;; Auto vars:     Size  Location     Type
  3290 ;;  quotient        4   11[COMRAM] long 
  3291 ;;  sign            1   10[COMRAM] unsigned char 
  3292 ;;  counter         1    9[COMRAM] unsigned char 
  3293 ;; Return value:  Size  Location     Type
  3294 ;;                  4    1[COMRAM] long 
  3295 ;; Registers used:
  3296 ;;		wreg, status,2, status,0
  3297 ;; Tracked objects:
  3298 ;;		On entry : 0/0
  3299 ;;		On exit  : 0/0
  3300 ;;		Unchanged: 0/0
  3301 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3302 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3303 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3304 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3305 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3306 ;;Total ram usage:       14 bytes
  3307 ;; Hardware stack levels used:    1
  3308 ;; Hardware stack levels required when called:    1
  3309 ;; This function calls:
  3310 ;;		Nothing
  3311 ;; This function is called by:
  3312 ;;		_freqCalc
  3313 ;; This function uses a non-reentrant model
  3314 ;;
  3315                           
  3316                           	psect	text19
  3317  00223C                     __ptext19:
  3318                           	callstack 0
  3319  00223C                     ___aldiv:
  3320                           	callstack 28
  3321  00223C  0E00               	movlw	0
  3322  00223E  6E0B               	movwf	___aldiv@sign^0,c
  3323  002240  BE09               	btfsc	(___aldiv@divisor+3)^0,7,c
  3324  002242  EF27  F011         	goto	u2110
  3325  002246  EF25  F011         	goto	u2111
  3326  00224A                     u2111:
  3327  00224A  EF31  F011         	goto	l2372
  3328  00224E                     u2110:
  3329  00224E  1E09               	comf	(___aldiv@divisor+3)^0,f,c
  3330  002250  1E08               	comf	(___aldiv@divisor+2)^0,f,c
  3331  002252  1E07               	comf	(___aldiv@divisor+1)^0,f,c
  3332  002254  6C06               	negf	___aldiv@divisor^0,c
  3333  002256  0E00               	movlw	0
  3334  002258  2207               	addwfc	(___aldiv@divisor+1)^0,f,c
  3335  00225A  2208               	addwfc	(___aldiv@divisor+2)^0,f,c
  3336  00225C  2209               	addwfc	(___aldiv@divisor+3)^0,f,c
  3337  00225E  0E01               	movlw	1
  3338  002260  6E0B               	movwf	___aldiv@sign^0,c
  3339  002262                     l2372:
  3340  002262  BE05               	btfsc	(___aldiv@dividend+3)^0,7,c
  3341  002264  EF38  F011         	goto	u2120
  3342  002268  EF36  F011         	goto	u2121
  3343  00226C                     u2121:
  3344  00226C  EF42  F011         	goto	l2378
  3345  002270                     u2120:
  3346  002270  1E05               	comf	(___aldiv@dividend+3)^0,f,c
  3347  002272  1E04               	comf	(___aldiv@dividend+2)^0,f,c
  3348  002274  1E03               	comf	(___aldiv@dividend+1)^0,f,c
  3349  002276  6C02               	negf	___aldiv@dividend^0,c
  3350  002278  0E00               	movlw	0
  3351  00227A  2203               	addwfc	(___aldiv@dividend+1)^0,f,c
  3352  00227C  2204               	addwfc	(___aldiv@dividend+2)^0,f,c
  3353  00227E  2205               	addwfc	(___aldiv@dividend+3)^0,f,c
  3354  002280  0E01               	movlw	1
  3355  002282  1A0B               	xorwf	___aldiv@sign^0,f,c
  3356  002284                     l2378:
  3357  002284  0E00               	movlw	0
  3358  002286  6E0C               	movwf	___aldiv@quotient^0,c
  3359  002288  0E00               	movlw	0
  3360  00228A  6E0D               	movwf	(___aldiv@quotient+1)^0,c
  3361  00228C  0E00               	movlw	0
  3362  00228E  6E0E               	movwf	(___aldiv@quotient+2)^0,c
  3363  002290  0E00               	movlw	0
  3364  002292  6E0F               	movwf	(___aldiv@quotient+3)^0,c
  3365  002294  5006               	movf	___aldiv@divisor^0,w,c
  3366  002296  1007               	iorwf	(___aldiv@divisor+1)^0,w,c
  3367  002298  1008               	iorwf	(___aldiv@divisor+2)^0,w,c
  3368  00229A  1009               	iorwf	(___aldiv@divisor+3)^0,w,c
  3369  00229C  B4D8               	btfsc	status,2,c
  3370  00229E  EF53  F011         	goto	u2131
  3371  0022A2  EF55  F011         	goto	u2130
  3372  0022A6                     u2131:
  3373  0022A6  EF8B  F011         	goto	l2400
  3374  0022AA                     u2130:
  3375  0022AA  0E01               	movlw	1
  3376  0022AC  6E0A               	movwf	___aldiv@counter^0,c
  3377  0022AE  EF5F  F011         	goto	l2386
  3378  0022B2                     l2384:
  3379  0022B2  90D8               	bcf	status,0,c
  3380  0022B4  3606               	rlcf	___aldiv@divisor^0,f,c
  3381  0022B6  3607               	rlcf	(___aldiv@divisor+1)^0,f,c
  3382  0022B8  3608               	rlcf	(___aldiv@divisor+2)^0,f,c
  3383  0022BA  3609               	rlcf	(___aldiv@divisor+3)^0,f,c
  3384  0022BC  2A0A               	incf	___aldiv@counter^0,f,c
  3385  0022BE                     l2386:
  3386  0022BE  AE09               	btfss	(___aldiv@divisor+3)^0,7,c
  3387  0022C0  EF64  F011         	goto	u2141
  3388  0022C4  EF66  F011         	goto	u2140
  3389  0022C8                     u2141:
  3390  0022C8  EF59  F011         	goto	l2384
  3391  0022CC                     u2140:
  3392  0022CC                     l2388:
  3393  0022CC  90D8               	bcf	status,0,c
  3394  0022CE  360C               	rlcf	___aldiv@quotient^0,f,c
  3395  0022D0  360D               	rlcf	(___aldiv@quotient+1)^0,f,c
  3396  0022D2  360E               	rlcf	(___aldiv@quotient+2)^0,f,c
  3397  0022D4  360F               	rlcf	(___aldiv@quotient+3)^0,f,c
  3398  0022D6  5006               	movf	___aldiv@divisor^0,w,c
  3399  0022D8  5C02               	subwf	___aldiv@dividend^0,w,c
  3400  0022DA  5007               	movf	(___aldiv@divisor+1)^0,w,c
  3401  0022DC  5803               	subwfb	(___aldiv@dividend+1)^0,w,c
  3402  0022DE  5008               	movf	(___aldiv@divisor+2)^0,w,c
  3403  0022E0  5804               	subwfb	(___aldiv@dividend+2)^0,w,c
  3404  0022E2  5009               	movf	(___aldiv@divisor+3)^0,w,c
  3405  0022E4  5805               	subwfb	(___aldiv@dividend+3)^0,w,c
  3406  0022E6  A0D8               	btfss	status,0,c
  3407  0022E8  EF78  F011         	goto	u2151
  3408  0022EC  EF7A  F011         	goto	u2150
  3409  0022F0                     u2151:
  3410  0022F0  EF83  F011         	goto	l2396
  3411  0022F4                     u2150:
  3412  0022F4  5006               	movf	___aldiv@divisor^0,w,c
  3413  0022F6  5E02               	subwf	___aldiv@dividend^0,f,c
  3414  0022F8  5007               	movf	(___aldiv@divisor+1)^0,w,c
  3415  0022FA  5A03               	subwfb	(___aldiv@dividend+1)^0,f,c
  3416  0022FC  5008               	movf	(___aldiv@divisor+2)^0,w,c
  3417  0022FE  5A04               	subwfb	(___aldiv@dividend+2)^0,f,c
  3418  002300  5009               	movf	(___aldiv@divisor+3)^0,w,c
  3419  002302  5A05               	subwfb	(___aldiv@dividend+3)^0,f,c
  3420  002304  800C               	bsf	___aldiv@quotient^0,0,c
  3421  002306                     l2396:
  3422  002306  90D8               	bcf	status,0,c
  3423  002308  3209               	rrcf	(___aldiv@divisor+3)^0,f,c
  3424  00230A  3208               	rrcf	(___aldiv@divisor+2)^0,f,c
  3425  00230C  3207               	rrcf	(___aldiv@divisor+1)^0,f,c
  3426  00230E  3206               	rrcf	___aldiv@divisor^0,f,c
  3427  002310  2E0A               	decfsz	___aldiv@counter^0,f,c
  3428  002312  EF66  F011         	goto	l2388
  3429  002316                     l2400:
  3430  002316  500B               	movf	___aldiv@sign^0,w,c
  3431  002318  B4D8               	btfsc	status,2,c
  3432  00231A  EF91  F011         	goto	u2161
  3433  00231E  EF93  F011         	goto	u2160
  3434  002322                     u2161:
  3435  002322  EF9B  F011         	goto	l2404
  3436  002326                     u2160:
  3437  002326  1E0F               	comf	(___aldiv@quotient+3)^0,f,c
  3438  002328  1E0E               	comf	(___aldiv@quotient+2)^0,f,c
  3439  00232A  1E0D               	comf	(___aldiv@quotient+1)^0,f,c
  3440  00232C  6C0C               	negf	___aldiv@quotient^0,c
  3441  00232E  0E00               	movlw	0
  3442  002330  220D               	addwfc	(___aldiv@quotient+1)^0,f,c
  3443  002332  220E               	addwfc	(___aldiv@quotient+2)^0,f,c
  3444  002334  220F               	addwfc	(___aldiv@quotient+3)^0,f,c
  3445  002336                     l2404:
  3446  002336  C00C  F002         	movff	___aldiv@quotient,?___aldiv
  3447  00233A  C00D  F003         	movff	___aldiv@quotient+1,?___aldiv+1
  3448  00233E  C00E  F004         	movff	___aldiv@quotient+2,?___aldiv+2
  3449  002342  C00F  F005         	movff	___aldiv@quotient+3,?___aldiv+3
  3450  002346  0012               	return		;funcret
  3451  002348                     __end_of___aldiv:
  3452                           	callstack 0
  3453                           
  3454 ;; *************** function _flash_read *****************
  3455 ;; Defined at:
  3456 ;;		line 76 in file "main.c"
  3457 ;; Parameters:    Size  Location     Type
  3458 ;;  flash_addr      2    1[COMRAM] unsigned short 
  3459 ;; Auto vars:     Size  Location     Type
  3460 ;;  flash_l         2    7[COMRAM] unsigned short 
  3461 ;;  flash_h         2    5[COMRAM] unsigned short 
  3462 ;; Return value:  Size  Location     Type
  3463 ;;                  2    1[COMRAM] unsigned short 
  3464 ;; Registers used:
  3465 ;;		wreg, status,2, status,0
  3466 ;; Tracked objects:
  3467 ;;		On entry : 0/0
  3468 ;;		On exit  : 0/0
  3469 ;;		Unchanged: 0/0
  3470 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3471 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3472 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3473 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3474 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3475 ;;Total ram usage:        8 bytes
  3476 ;; Hardware stack levels used:    1
  3477 ;; Hardware stack levels required when called:    1
  3478 ;; This function calls:
  3479 ;;		Nothing
  3480 ;; This function is called by:
  3481 ;;		_main
  3482 ;; This function uses a non-reentrant model
  3483 ;;
  3484                           
  3485                           	psect	text20
  3486  002A0C                     __ptext20:
  3487                           	callstack 0
  3488  002A0C                     _flash_read:
  3489                           	callstack 29
  3490  002A0C                     
  3491                           ;main.c: 79:     EECON1bits.WREN = 1;
  3492  002A0C  0E00               	movlw	0
  3493  002A0E  6E09               	movwf	(flash_read@flash_l+1)^0,c
  3494  002A10  0E00               	movlw	0
  3495  002A12  6E08               	movwf	flash_read@flash_l^0,c
  3496  002A14                     
  3497                           ;main.c: 81: 
  3498  002A14  0E01               	movlw	1
  3499  002A16  2402               	addwf	flash_read@flash_addr^0,w,c
  3500  002A18  6E04               	movwf	??_flash_read^0,c
  3501  002A1A  0E00               	movlw	0
  3502  002A1C  2003               	addwfc	(flash_read@flash_addr+1)^0,w,c
  3503  002A1E  6E05               	movwf	(??_flash_read+1)^0,c
  3504  002A20  C004  FFF6         	movff	??_flash_read,tblptrl	;volatile
  3505  002A24  C005  FFF7         	movff	??_flash_read+1,tblptrh	;volatile
  3506  002A28  6AF8               	clrf	248,c	;volatile
  3507  002A2A  0008               	tblrd		*	;# 
  3508  002A2C                     
  3509                           ;main.c: 83: 
  3510  002A2C  CFF5 F006          	movff	tablat,flash_read@flash_h	;volatile
  3511  002A30  6A07               	clrf	(flash_read@flash_h+1)^0,c
  3512  002A32                     
  3513                           ;main.c: 85:     EECON2 = 0xAA;
  3514  002A32  C002  FFF6         	movff	flash_read@flash_addr,tblptrl	;volatile
  3515  002A36  C003  FFF7         	movff	flash_read@flash_addr+1,tblptrh	;volatile
  3516  002A3A  6AF8               	clrf	248,c	;volatile
  3517  002A3C  0008               	tblrd		*	;# 
  3518  002A3E                     
  3519                           ;main.c: 87:     EECON1bits.WR = 1;
  3520  002A3E  CFF5 F008          	movff	tablat,flash_read@flash_l	;volatile
  3521  002A42  6A09               	clrf	(flash_read@flash_l+1)^0,c
  3522  002A44                     
  3523                           ;main.c: 88: 
  3524  002A44  5006               	movf	flash_read@flash_h^0,w,c
  3525  002A46  6E05               	movwf	(??_flash_read+1)^0,c
  3526  002A48  6A04               	clrf	??_flash_read^0,c
  3527  002A4A  5008               	movf	flash_read@flash_l^0,w,c
  3528  002A4C  1004               	iorwf	??_flash_read^0,w,c
  3529  002A4E  6E02               	movwf	?_flash_read^0,c
  3530  002A50  5009               	movf	(flash_read@flash_l+1)^0,w,c
  3531  002A52  1005               	iorwf	(??_flash_read+1)^0,w,c
  3532  002A54  6E03               	movwf	(?_flash_read+1)^0,c
  3533  002A56  0012               	return		;funcret
  3534  002A58                     __end_of_flash_read:
  3535                           	callstack 0
  3536                           
  3537 ;; *************** function _flash_block_write *****************
  3538 ;; Defined at:
  3539 ;;		line 126 in file "main.c"
  3540 ;; Parameters:    Size  Location     Type
  3541 ;;  addr            2    3[COMRAM] unsigned short 
  3542 ;;  flash_data_b    2    5[COMRAM] unsigned short 
  3543 ;; Auto vars:     Size  Location     Type
  3544 ;;  flash_store_   64    7[COMRAM] unsigned char [64]
  3545 ;;  flash_ptr       2   71[COMRAM] unsigned short 
  3546 ;;  i               1   73[COMRAM] char 
  3547 ;; Return value:  Size  Location     Type
  3548 ;;                  1    wreg      void 
  3549 ;; Registers used:
  3550 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3551 ;; Tracked objects:
  3552 ;;		On entry : 0/0
  3553 ;;		On exit  : 0/0
  3554 ;;		Unchanged: 0/0
  3555 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3556 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3557 ;;      Locals:        67       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3558 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3559 ;;      Totals:        71       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3560 ;;Total ram usage:       71 bytes
  3561 ;; Hardware stack levels used:    1
  3562 ;; Hardware stack levels required when called:    2
  3563 ;; This function calls:
  3564 ;;		_flash_block_commit
  3565 ;;		_flash_block_delete
  3566 ;; This function is called by:
  3567 ;;		_main
  3568 ;; This function uses a non-reentrant model
  3569 ;;
  3570                           
  3571                           	psect	text21
  3572  00271E                     __ptext21:
  3573                           	callstack 0
  3574  00271E                     _flash_block_write:
  3575                           	callstack 28
  3576  00271E                     
  3577                           ;main.c: 128:     TBLPTR = flash_ptr;
  3578  00271E  EE20  F008         	lfsr	2,flash_block_write@flash_store_buff
  3579  002722  0E3F               	movlw	63
  3580  002724                     u2981:
  3581  002724  6ADE               	clrf	postinc2,c
  3582  002726  06E8               	decf	wreg,f,c
  3583  002728  E2FD               	bc	u2981
  3584  00272A                     
  3585                           ;main.c: 129:     TABLAT = (flash_data_buff & 0x00FF);
  3586  00272A  C004  F048         	movff	flash_block_write@addr,flash_block_write@flash_ptr
  3587  00272E  C005  F049         	movff	flash_block_write@addr+1,flash_block_write@flash_ptr+1
  3588  002732                     
  3589                           ;main.c: 132:     TBLPTR = flash_ptr;
  3590  002732  0E00               	movlw	0
  3591  002734  6E4A               	movwf	flash_block_write@i^0,c
  3592  002736                     l2914:
  3593                           
  3594                           ;main.c: 133:     TABLAT = (flash_data_buff & 0xFF00) >> 8;
  3595  002736  C048  FFF6         	movff	flash_block_write@flash_ptr,tblptrl	;volatile
  3596  00273A  C049  FFF7         	movff	flash_block_write@flash_ptr+1,tblptrh	;volatile
  3597  00273E  6AF8               	clrf	248,c	;volatile
  3598  002740  0008               	tblrd		*	;# 
  3599  002742                     
  3600                           ;main.c: 135: 
  3601  002742  0E08               	movlw	low flash_block_write@flash_store_buff
  3602  002744  244A               	addwf	flash_block_write@i^0,w,c
  3603  002746  6ED9               	movwf	fsr2l,c
  3604  002748  6ADA               	clrf	fsr2h,c
  3605  00274A  0E00               	movlw	high flash_block_write@flash_store_buff
  3606  00274C  22DA               	addwfc	fsr2h,f,c
  3607  00274E  CFF5 FFDF          	movff	tablat,indf2	;volatile
  3608  002752                     
  3609                           ;main.c: 136: 
  3610  002752  4A48               	infsnz	flash_block_write@flash_ptr^0,f,c
  3611  002754  2A49               	incf	(flash_block_write@flash_ptr+1)^0,f,c
  3612  002756                     
  3613                           ;main.c: 137:     flash_block_commit();
  3614  002756  2A4A               	incf	flash_block_write@i^0,f,c
  3615  002758  504A               	movf	flash_block_write@i^0,w,c
  3616  00275A  0A80               	xorlw	128
  3617  00275C  0F40               	addlw	-192
  3618  00275E  A0D8               	btfss	status,0,c
  3619  002760  EFB4  F013         	goto	u2991
  3620  002764  EFB6  F013         	goto	u2990
  3621  002768                     u2991:
  3622  002768  EF9B  F013         	goto	l2914
  3623  00276C                     u2990:
  3624  00276C  C004  F002         	movff	flash_block_write@addr,flash_block_delete@addr
  3625  002770  C005  F003         	movff	flash_block_write@addr+1,flash_block_delete@addr+1
  3626  002774  ECEE  F015         	call	_flash_block_delete	;wreg free
  3627  002778  C004  F048         	movff	flash_block_write@addr,flash_block_write@flash_ptr
  3628  00277C  C005  F049         	movff	flash_block_write@addr+1,flash_block_write@flash_ptr+1
  3629  002780  C048  FFF6         	movff	flash_block_write@flash_ptr,tblptrl	;volatile
  3630  002784  C049  FFF7         	movff	flash_block_write@flash_ptr+1,tblptrh	;volatile
  3631  002788  6AF8               	clrf	248,c	;volatile
  3632  00278A  C006  FFF5         	movff	flash_block_write@flash_data_buff,tablat	;volatile
  3633  00278E  000C               	tblwt		*	;# 
  3634  002790  4A48               	infsnz	flash_block_write@flash_ptr^0,f,c
  3635  002792  2A49               	incf	(flash_block_write@flash_ptr+1)^0,f,c
  3636  002794  C048  FFF6         	movff	flash_block_write@flash_ptr,tblptrl	;volatile
  3637  002798  C049  FFF7         	movff	flash_block_write@flash_ptr+1,tblptrh	;volatile
  3638  00279C  6AF8               	clrf	248,c	;volatile
  3639  00279E  5007               	movf	(flash_block_write@flash_data_buff+1)^0,w,c
  3640  0027A0  6EF5               	movwf	245,c	;volatile
  3641  0027A2  000C               	tblwt		*	;# 
  3642  0027A4  ECFF  F015         	call	_flash_block_commit	;wreg free
  3643  0027A8  0012               	return		;funcret
  3644  0027AA                     __end_of_flash_block_write:
  3645                           	callstack 0
  3646                           
  3647 ;; *************** function _flash_block_delete *****************
  3648 ;; Defined at:
  3649 ;;		line 91 in file "main.c"
  3650 ;; Parameters:    Size  Location     Type
  3651 ;;  addr            2    1[COMRAM] unsigned short 
  3652 ;; Auto vars:     Size  Location     Type
  3653 ;;		None
  3654 ;; Return value:  Size  Location     Type
  3655 ;;                  1    wreg      void 
  3656 ;; Registers used:
  3657 ;;		wreg, status,2
  3658 ;; Tracked objects:
  3659 ;;		On entry : 0/0
  3660 ;;		On exit  : 0/0
  3661 ;;		Unchanged: 0/0
  3662 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3663 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3664 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3665 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3666 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3667 ;;Total ram usage:        2 bytes
  3668 ;; Hardware stack levels used:    1
  3669 ;; Hardware stack levels required when called:    1
  3670 ;; This function calls:
  3671 ;;		Nothing
  3672 ;; This function is called by:
  3673 ;;		_flash_block_write
  3674 ;; This function uses a non-reentrant model
  3675 ;;
  3676                           
  3677                           	psect	text22
  3678  002BDC                     __ptext22:
  3679                           	callstack 0
  3680  002BDC                     _flash_block_delete:
  3681                           	callstack 28
  3682  002BDC                     
  3683                           ;main.c: 93: void flash_block_commit(void){
  3684  002BDC  C002  FFF6         	movff	flash_block_delete@addr,tblptrl	;volatile
  3685  002BE0  C003  FFF7         	movff	flash_block_delete@addr+1,tblptrh	;volatile
  3686  002BE4  6AF8               	clrf	248,c	;volatile
  3687  002BE6                     
  3688                           ;main.c: 95:     EECON1bits.FREE = 0;
  3689  002BE6  8AA6               	bsf	166,5,c	;volsfr
  3690  002BE8                     
  3691                           ;main.c: 96:     EECON1bits.WPROG=1;
  3692  002BE8  84A6               	bsf	166,2,c	;volsfr
  3693  002BEA                     
  3694                           ;main.c: 97: 
  3695  002BEA  88A6               	bsf	166,4,c	;volsfr
  3696  002BEC                     
  3697                           ;main.c: 99: 
  3698  002BEC  9EF2               	bcf	242,7,c	;volatile
  3699  002BEE                     
  3700                           ;main.c: 101:     EECON2 = 0xAA;
  3701  002BEE  0E55               	movlw	85
  3702  002BF0  6EA7               	movwf	167,c	;volsfr
  3703  002BF2                     
  3704                           ;main.c: 102: 
  3705  002BF2  0EAA               	movlw	170
  3706  002BF4  6EA7               	movwf	167,c	;volsfr
  3707  002BF6                     
  3708                           ;main.c: 104: 
  3709  002BF6  82A6               	bsf	166,1,c	;volsfr
  3710  002BF8                     
  3711                           ;main.c: 106:     INTCONbits.GIEH = 1;
  3712  002BF8  94A6               	bcf	166,2,c	;volsfr
  3713  002BFA                     
  3714                           ;main.c: 107: }
  3715  002BFA  8EF2               	bsf	242,7,c	;volatile
  3716  002BFC  0012               	return		;funcret
  3717  002BFE                     __end_of_flash_block_delete:
  3718                           	callstack 0
  3719                           
  3720 ;; *************** function _flash_block_commit *****************
  3721 ;; Defined at:
  3722 ;;		line 110 in file "main.c"
  3723 ;; Parameters:    Size  Location     Type
  3724 ;;		None
  3725 ;; Auto vars:     Size  Location     Type
  3726 ;;		None
  3727 ;; Return value:  Size  Location     Type
  3728 ;;                  1    wreg      void 
  3729 ;; Registers used:
  3730 ;;		wreg, status,2
  3731 ;; Tracked objects:
  3732 ;;		On entry : 0/0
  3733 ;;		On exit  : 0/0
  3734 ;;		Unchanged: 0/0
  3735 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3736 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3737 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3738 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3739 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3740 ;;Total ram usage:        0 bytes
  3741 ;; Hardware stack levels used:    1
  3742 ;; Hardware stack levels required when called:    1
  3743 ;; This function calls:
  3744 ;;		Nothing
  3745 ;; This function is called by:
  3746 ;;		_flash_block_write
  3747 ;; This function uses a non-reentrant model
  3748 ;;
  3749                           
  3750                           	psect	text23
  3751  002BFE                     __ptext23:
  3752                           	callstack 0
  3753  002BFE                     _flash_block_commit:
  3754                           	callstack 28
  3755  002BFE                     
  3756                           ;main.c: 111:     uint8_t flash_store_buff[64] = {0};
  3757  002BFE  84A6               	bsf	166,2,c	;volsfr
  3758                           
  3759                           ;main.c: 112:     uint16_t flash_ptr = addr;
  3760  002C00  98A6               	bcf	166,4,c	;volsfr
  3761                           
  3762                           ;main.c: 113: 
  3763  002C02  8AA6               	bsf	166,5,c	;volsfr
  3764                           
  3765                           ;main.c: 115:     for(i = 0; i<64 ;i++){
  3766  002C04  9EF2               	bcf	242,7,c	;volatile
  3767  002C06                     
  3768                           ;main.c: 117:         __asm(" TBLRD*");
  3769  002C06  0E55               	movlw	85
  3770  002C08  6EA7               	movwf	167,c	;volsfr
  3771                           
  3772                           ;main.c: 118:         flash_store_buff[i] = TABLAT;
  3773  002C0A  0EAA               	movlw	170
  3774  002C0C  6EA7               	movwf	167,c	;volsfr
  3775  002C0E                     
  3776                           ;main.c: 120:     }
  3777  002C0E  82A6               	bsf	166,1,c	;volsfr
  3778  002C10                     
  3779                           ;main.c: 122: 
  3780  002C10  94A6               	bcf	166,2,c	;volsfr
  3781  002C12                     
  3782                           ;main.c: 123: 
  3783  002C12  8EF2               	bsf	242,7,c	;volatile
  3784  002C14  0012               	return		;funcret
  3785  002C16                     __end_of_flash_block_commit:
  3786                           	callstack 0
  3787                           
  3788 ;; *************** function _UART_send_string *****************
  3789 ;; Defined at:
  3790 ;;		line 54 in file "main.c"
  3791 ;; Parameters:    Size  Location     Type
  3792 ;;  str             2    2[COMRAM] PTR unsigned char 
  3793 ;;		 -> print_buffer(256), 
  3794 ;; Auto vars:     Size  Location     Type
  3795 ;;  i               2    5[COMRAM] int 
  3796 ;; Return value:  Size  Location     Type
  3797 ;;                  1    wreg      void 
  3798 ;; Registers used:
  3799 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3800 ;; Tracked objects:
  3801 ;;		On entry : 0/0
  3802 ;;		On exit  : 0/0
  3803 ;;		Unchanged: 0/0
  3804 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3805 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3806 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3807 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3808 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3809 ;;Total ram usage:        5 bytes
  3810 ;; Hardware stack levels used:    1
  3811 ;; Hardware stack levels required when called:    2
  3812 ;; This function calls:
  3813 ;;		_UART_Write
  3814 ;; This function is called by:
  3815 ;;		_main
  3816 ;; This function uses a non-reentrant model
  3817 ;;
  3818                           
  3819                           	psect	text24
  3820  0029BE                     __ptext24:
  3821                           	callstack 0
  3822  0029BE                     _UART_send_string:
  3823                           	callstack 28
  3824  0029BE                     
  3825                           ;main.c: 54:     int t = (int)(8000000/(4*temp));;main.c: 55:     int cal = 0xFFFF - t;;
      +                          main.c: 56:     return cal;
  3826  0029BE  0E00               	movlw	0
  3827  0029C0  6E07               	movwf	(UART_send_string@i+1)^0,c
  3828  0029C2  0E00               	movlw	0
  3829  0029C4  6E06               	movwf	UART_send_string@i^0,c
  3830  0029C6  EFF7  F014         	goto	l2876
  3831  0029CA                     l2870:
  3832                           
  3833                           ;main.c: 57: }
  3834  0029CA  5006               	movf	UART_send_string@i^0,w,c
  3835  0029CC  2403               	addwf	UART_send_string@str^0,w,c
  3836  0029CE  6ED9               	movwf	fsr2l,c
  3837  0029D0  5007               	movf	(UART_send_string@i+1)^0,w,c
  3838  0029D2  2004               	addwfc	(UART_send_string@str+1)^0,w,c
  3839  0029D4  6EDA               	movwf	fsr2h,c
  3840  0029D6  50DF               	movf	indf2,w,c
  3841  0029D8  EC0B  F016         	call	_UART_Write
  3842  0029DC                     
  3843                           ;main.c: 58: 
  3844  0029DC  0E0D               	movlw	13
  3845  0029DE  6E05               	movwf	??_UART_send_string^0,c
  3846  0029E0  0EFC               	movlw	252
  3847  0029E2                     u3617:
  3848  0029E2  2EE8               	decfsz	wreg,f,c
  3849  0029E4  D7FE               	bra	u3617
  3850  0029E6  2E05               	decfsz	??_UART_send_string^0,f,c
  3851  0029E8  D7FC               	bra	u3617
  3852  0029EA                     
  3853                           ;main.c: 59: uint16_t flash_read(uint16_t flash_addr)
  3854  0029EA  4A06               	infsnz	UART_send_string@i^0,f,c
  3855  0029EC  2A07               	incf	(UART_send_string@i+1)^0,f,c
  3856  0029EE                     l2876:
  3857  0029EE  5006               	movf	UART_send_string@i^0,w,c
  3858  0029F0  2403               	addwf	UART_send_string@str^0,w,c
  3859  0029F2  6ED9               	movwf	fsr2l,c
  3860  0029F4  5007               	movf	(UART_send_string@i+1)^0,w,c
  3861  0029F6  2004               	addwfc	(UART_send_string@str+1)^0,w,c
  3862  0029F8  6EDA               	movwf	fsr2h,c
  3863  0029FA  50DF               	movf	indf2,w,c
  3864  0029FC  A4D8               	btfss	status,2,c
  3865  0029FE  EF03  F015         	goto	u2971
  3866  002A02  EF05  F015         	goto	u2970
  3867  002A06                     u2971:
  3868  002A06  EFE5  F014         	goto	l2870
  3869  002A0A                     u2970:
  3870  002A0A  0012               	return		;funcret
  3871  002A0C                     __end_of_UART_send_string:
  3872                           	callstack 0
  3873                           
  3874 ;; *************** function _UART_Write *****************
  3875 ;; Defined at:
  3876 ;;		line 48 in file "main.c"
  3877 ;; Parameters:    Size  Location     Type
  3878 ;;  data            1    wreg     unsigned char 
  3879 ;; Auto vars:     Size  Location     Type
  3880 ;;  data            1    1[COMRAM] unsigned char 
  3881 ;; Return value:  Size  Location     Type
  3882 ;;                  1    wreg      void 
  3883 ;; Registers used:
  3884 ;;		wreg
  3885 ;; Tracked objects:
  3886 ;;		On entry : 0/0
  3887 ;;		On exit  : 0/0
  3888 ;;		Unchanged: 0/0
  3889 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3890 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3891 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3892 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3893 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3894 ;;Total ram usage:        1 bytes
  3895 ;; Hardware stack levels used:    1
  3896 ;; Hardware stack levels required when called:    1
  3897 ;; This function calls:
  3898 ;;		Nothing
  3899 ;; This function is called by:
  3900 ;;		_UART_send_string
  3901 ;; This function uses a non-reentrant model
  3902 ;;
  3903                           
  3904                           	psect	text25
  3905  002C16                     __ptext25:
  3906                           	callstack 0
  3907  002C16                     _UART_Write:
  3908                           	callstack 28
  3909                           
  3910                           ;incstack = 0
  3911                           ;UART_Write@data stored from wreg
  3912  002C16  6E02               	movwf	UART_Write@data^0,c
  3913  002C18                     
  3914                           ;main.c: 48:     while(RC1IF==0);;main.c: 49:     return(RCREG1);;main.c: 50: }
  3915  002C18  C002  FFAD         	movff	UART_Write@data,4013	;volatile
  3916  002C1C                     l74:
  3917  002C1C  A2AC               	btfss	4012,1,c	;volatile
  3918  002C1E  EF13  F016         	goto	u2101
  3919  002C22  EF15  F016         	goto	u2100
  3920  002C26                     u2101:
  3921  002C26  EF0E  F016         	goto	l74
  3922  002C2A                     u2100:
  3923  002C2A  0012               	return		;funcret
  3924  002C2C                     __end_of_UART_Write:
  3925                           	callstack 0
  3926                           
  3927 ;; *************** function _UART_Initial *****************
  3928 ;; Defined at:
  3929 ;;		line 28 in file "main.c"
  3930 ;; Parameters:    Size  Location     Type
  3931 ;;  baud_rate       4   56[COMRAM] long 
  3932 ;; Auto vars:     Size  Location     Type
  3933 ;;  bps             4   60[COMRAM] float 
  3934 ;; Return value:  Size  Location     Type
  3935 ;;                  1    wreg      void 
  3936 ;; Registers used:
  3937 ;;		wreg, status,2, status,0, cstack
  3938 ;; Tracked objects:
  3939 ;;		On entry : 0/0
  3940 ;;		On exit  : 0/0
  3941 ;;		Unchanged: 0/0
  3942 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3943 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3944 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3945 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3946 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3947 ;;Total ram usage:        8 bytes
  3948 ;; Hardware stack levels used:    1
  3949 ;; Hardware stack levels required when called:    2
  3950 ;; This function calls:
  3951 ;;		___fladd
  3952 ;;		___fldiv
  3953 ;;		___fltol
  3954 ;;		___xxtofl
  3955 ;; This function is called by:
  3956 ;;		_main
  3957 ;; This function uses a non-reentrant model
  3958 ;;
  3959                           
  3960                           	psect	text26
  3961  00267E                     __ptext26:
  3962                           	callstack 0
  3963  00267E                     _UART_Initial:
  3964                           	callstack 28
  3965  00267E                     
  3966                           ;main.c: 28: ;main.c: 29: };main.c: 30: ;main.c: 31: void UART_Write( char data )
  3967  00267E  9C94               	bcf	148,6,c	;volatile
  3968                           
  3969                           ;main.c: 32: {
  3970  002680  8E94               	bsf	148,7,c	;volatile
  3971  002682                     
  3972                           ;main.c: 33: TXREG1 = data;
  3973  002682  C039  F002         	movff	UART_Initial@baud_rate,___xxtofl@val
  3974  002686  C03A  F003         	movff	UART_Initial@baud_rate+1,___xxtofl@val+1
  3975  00268A  C03B  F004         	movff	UART_Initial@baud_rate+2,___xxtofl@val+2
  3976  00268E  C03C  F005         	movff	UART_Initial@baud_rate+3,___xxtofl@val+3
  3977  002692  0E01               	movlw	1
  3978  002694  EC72  F00F         	call	___xxtofl
  3979  002698  C002  F014         	movff	?___xxtofl,___fldiv@a
  3980  00269C  C003  F015         	movff	?___xxtofl+1,___fldiv@a+1
  3981  0026A0  C004  F016         	movff	?___xxtofl+2,___fldiv@a+2
  3982  0026A4  C005  F017         	movff	?___xxtofl+3,___fldiv@a+3
  3983  0026A8  0E00               	movlw	0
  3984  0026AA  6E10               	movwf	___fldiv@b^0,c
  3985  0026AC  0E24               	movlw	36
  3986  0026AE  6E11               	movwf	(___fldiv@b+1)^0,c
  3987  0026B0  0EF4               	movlw	244
  3988  0026B2  6E12               	movwf	(___fldiv@b+2)^0,c
  3989  0026B4  0E47               	movlw	71
  3990  0026B6  6E13               	movwf	(___fldiv@b+3)^0,c
  3991  0026B8  EC3B  F00C         	call	___fldiv	;wreg free
  3992  0026BC  C010  F029         	movff	?___fldiv,___fladd@b
  3993  0026C0  C011  F02A         	movff	?___fldiv+1,___fladd@b+1
  3994  0026C4  C012  F02B         	movff	?___fldiv+2,___fladd@b+2
  3995  0026C8  C013  F02C         	movff	?___fldiv+3,___fladd@b+3
  3996  0026CC  0E00               	movlw	0
  3997  0026CE  6E2D               	movwf	___fladd@a^0,c
  3998  0026D0  0E00               	movlw	0
  3999  0026D2  6E2E               	movwf	(___fladd@a+1)^0,c
  4000  0026D4  0E80               	movlw	128
  4001  0026D6  6E2F               	movwf	(___fladd@a+2)^0,c
  4002  0026D8  0EBF               	movlw	191
  4003  0026DA  6E30               	movwf	(___fladd@a+3)^0,c
  4004  0026DC  EC05  F008         	call	___fladd	;wreg free
  4005  0026E0  C029  F03D         	movff	?___fladd,UART_Initial@bps
  4006  0026E4  C02A  F03E         	movff	?___fladd+1,UART_Initial@bps+1
  4007  0026E8  C02B  F03F         	movff	?___fladd+2,UART_Initial@bps+2
  4008  0026EC  C02C  F040         	movff	?___fladd+3,UART_Initial@bps+3
  4009                           
  4010                           ;main.c: 34: while(TRMT==0);
  4011  0026F0  C03D  F002         	movff	UART_Initial@bps,___fltol@f1
  4012  0026F4  C03E  F003         	movff	UART_Initial@bps+1,___fltol@f1+1
  4013  0026F8  C03F  F004         	movff	UART_Initial@bps+2,___fltol@f1+2
  4014  0026FC  C040  F005         	movff	UART_Initial@bps+3,___fltol@f1+3
  4015  002700  ECA4  F011         	call	___fltol	;wreg free
  4016  002704  5002               	movf	?___fltol^0,w,c
  4017  002706  6EAF               	movwf	175,c	;volatile
  4018  002708                     
  4019                           ;main.c: 35: }
  4020  002708  9EAC               	bcf	172,7,c	;volatile
  4021  00270A                     
  4022                           ;main.c: 36: 
  4023  00270A  9CAC               	bcf	172,6,c	;volatile
  4024  00270C                     
  4025                           ;main.c: 37: void UART_send_string(char str[])
  4026  00270C  8AAC               	bsf	172,5,c	;volatile
  4027  00270E                     
  4028                           ;main.c: 38: {
  4029  00270E  98AC               	bcf	172,4,c	;volatile
  4030  002710                     
  4031                           ;main.c: 39:     for(int i=0; str[i]!='\0'; i++){
  4032  002710  94AC               	bcf	172,2,c	;volatile
  4033  002712                     
  4034                           ;main.c: 40:         UART_Write(str[i]);
  4035  002712  967E               	bcf	126,3,c	;volatile
  4036  002714                     
  4037                           ;main.c: 41:         _delay((unsigned long)((5)*(8000000/4000.0)));
  4038  002714  0E90               	movlw	144
  4039  002716  6EAB               	movwf	171,c	;volatile
  4040  002718                     
  4041                           ;main.c: 42:     }
  4042  002718  8A9F               	bsf	159,5,c	;volatile
  4043  00271A                     
  4044                           ;main.c: 43: }
  4045  00271A  8A9D               	bsf	157,5,c	;volatile
  4046  00271C  0012               	return		;funcret
  4047  00271E                     __end_of_UART_Initial:
  4048                           	callstack 0
  4049                           
  4050 ;; *************** function ___xxtofl *****************
  4051 ;; Defined at:
  4052 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\xxtofl.c"
  4053 ;; Parameters:    Size  Location     Type
  4054 ;;  sign            1    wreg     unsigned char 
  4055 ;;  val             4    1[COMRAM] long 
  4056 ;; Auto vars:     Size  Location     Type
  4057 ;;  sign            1    9[COMRAM] unsigned char 
  4058 ;;  arg             4   11[COMRAM] unsigned long 
  4059 ;;  exp             1   10[COMRAM] unsigned char 
  4060 ;; Return value:  Size  Location     Type
  4061 ;;                  4    1[COMRAM] unsigned char 
  4062 ;; Registers used:
  4063 ;;		wreg, status,2, status,0
  4064 ;; Tracked objects:
  4065 ;;		On entry : 0/0
  4066 ;;		On exit  : 0/0
  4067 ;;		Unchanged: 0/0
  4068 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4069 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4070 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4071 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4072 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4073 ;;Total ram usage:       14 bytes
  4074 ;; Hardware stack levels used:    1
  4075 ;; Hardware stack levels required when called:    1
  4076 ;; This function calls:
  4077 ;;		Nothing
  4078 ;; This function is called by:
  4079 ;;		_UART_Initial
  4080 ;; This function uses a non-reentrant model
  4081 ;;
  4082                           
  4083                           	psect	text27
  4084  001EE4                     __ptext27:
  4085                           	callstack 0
  4086  001EE4                     ___xxtofl:
  4087                           	callstack 28
  4088                           
  4089                           ;incstack = 0
  4090                           ;___xxtofl@sign stored from wreg
  4091  001EE4  6E0A               	movwf	___xxtofl@sign^0,c
  4092  001EE6  500A               	movf	___xxtofl@sign^0,w,c
  4093  001EE8  B4D8               	btfsc	status,2,c
  4094  001EEA  EF79  F00F         	goto	u2861
  4095  001EEE  EF7B  F00F         	goto	u2860
  4096  001EF2                     u2861:
  4097  001EF2  EF9D  F00F         	goto	l780
  4098  001EF6                     u2860:
  4099  001EF6  BE05               	btfsc	(___xxtofl@val+3)^0,7,c
  4100  001EF8  EF82  F00F         	goto	u2870
  4101  001EFC  EF80  F00F         	goto	u2871
  4102  001F00                     u2871:
  4103  001F00  EF9D  F00F         	goto	l780
  4104  001F04                     u2870:
  4105  001F04  C002  F006         	movff	___xxtofl@val,??___xxtofl
  4106  001F08  C003  F007         	movff	___xxtofl@val+1,??___xxtofl+1
  4107  001F0C  C004  F008         	movff	___xxtofl@val+2,??___xxtofl+2
  4108  001F10  C005  F009         	movff	___xxtofl@val+3,??___xxtofl+3
  4109  001F14  1E06               	comf	??___xxtofl^0,f,c
  4110  001F16  1E07               	comf	(??___xxtofl+1)^0,f,c
  4111  001F18  1E08               	comf	(??___xxtofl+2)^0,f,c
  4112  001F1A  1E09               	comf	(??___xxtofl+3)^0,f,c
  4113  001F1C  2A06               	incf	??___xxtofl^0,f,c
  4114  001F1E  0E00               	movlw	0
  4115  001F20  2207               	addwfc	(??___xxtofl+1)^0,f,c
  4116  001F22  2208               	addwfc	(??___xxtofl+2)^0,f,c
  4117  001F24  2209               	addwfc	(??___xxtofl+3)^0,f,c
  4118  001F26  C006  F00C         	movff	??___xxtofl,___xxtofl@arg
  4119  001F2A  C007  F00D         	movff	??___xxtofl+1,___xxtofl@arg+1
  4120  001F2E  C008  F00E         	movff	??___xxtofl+2,___xxtofl@arg+2
  4121  001F32  C009  F00F         	movff	??___xxtofl+3,___xxtofl@arg+3
  4122  001F36  EFA5  F00F         	goto	l2798
  4123  001F3A                     l780:
  4124  001F3A  C002  F00C         	movff	___xxtofl@val,___xxtofl@arg
  4125  001F3E  C003  F00D         	movff	___xxtofl@val+1,___xxtofl@arg+1
  4126  001F42  C004  F00E         	movff	___xxtofl@val+2,___xxtofl@arg+2
  4127  001F46  C005  F00F         	movff	___xxtofl@val+3,___xxtofl@arg+3
  4128  001F4A                     l2798:
  4129  001F4A  5002               	movf	___xxtofl@val^0,w,c
  4130  001F4C  1003               	iorwf	(___xxtofl@val+1)^0,w,c
  4131  001F4E  1004               	iorwf	(___xxtofl@val+2)^0,w,c
  4132  001F50  1005               	iorwf	(___xxtofl@val+3)^0,w,c
  4133  001F52  A4D8               	btfss	status,2,c
  4134  001F54  EFAE  F00F         	goto	u2881
  4135  001F58  EFB0  F00F         	goto	u2880
  4136  001F5C                     u2881:
  4137  001F5C  EFBA  F00F         	goto	l2804
  4138  001F60                     u2880:
  4139  001F60  0E00               	movlw	0
  4140  001F62  6E02               	movwf	?___xxtofl^0,c
  4141  001F64  0E00               	movlw	0
  4142  001F66  6E03               	movwf	(?___xxtofl+1)^0,c
  4143  001F68  0E00               	movlw	0
  4144  001F6A  6E04               	movwf	(?___xxtofl+2)^0,c
  4145  001F6C  0E00               	movlw	0
  4146  001F6E  6E05               	movwf	(?___xxtofl+3)^0,c
  4147  001F70  EF4B  F010         	goto	l783
  4148  001F74                     l2804:
  4149  001F74  0E96               	movlw	150
  4150  001F76  6E0B               	movwf	___xxtofl@exp^0,c
  4151  001F78  EFC4  F00F         	goto	l2808
  4152  001F7C                     l2806:
  4153  001F7C  2A0B               	incf	___xxtofl@exp^0,f,c
  4154  001F7E  90D8               	bcf	status,0,c
  4155  001F80  320F               	rrcf	(___xxtofl@arg+3)^0,f,c
  4156  001F82  320E               	rrcf	(___xxtofl@arg+2)^0,f,c
  4157  001F84  320D               	rrcf	(___xxtofl@arg+1)^0,f,c
  4158  001F86  320C               	rrcf	___xxtofl@arg^0,f,c
  4159  001F88                     l2808:
  4160  001F88  0E00               	movlw	0
  4161  001F8A  140C               	andwf	___xxtofl@arg^0,w,c
  4162  001F8C  6E06               	movwf	??___xxtofl^0,c
  4163  001F8E  0E00               	movlw	0
  4164  001F90  140D               	andwf	(___xxtofl@arg+1)^0,w,c
  4165  001F92  6E07               	movwf	(??___xxtofl+1)^0,c
  4166  001F94  0E00               	movlw	0
  4167  001F96  140E               	andwf	(___xxtofl@arg+2)^0,w,c
  4168  001F98  6E08               	movwf	(??___xxtofl+2)^0,c
  4169  001F9A  0EFE               	movlw	254
  4170  001F9C  140F               	andwf	(___xxtofl@arg+3)^0,w,c
  4171  001F9E  6E09               	movwf	(??___xxtofl+3)^0,c
  4172  001FA0  5006               	movf	??___xxtofl^0,w,c
  4173  001FA2  1007               	iorwf	(??___xxtofl+1)^0,w,c
  4174  001FA4  1008               	iorwf	(??___xxtofl+2)^0,w,c
  4175  001FA6  1009               	iorwf	(??___xxtofl+3)^0,w,c
  4176  001FA8  A4D8               	btfss	status,2,c
  4177  001FAA  EFD9  F00F         	goto	u2891
  4178  001FAE  EFDB  F00F         	goto	u2890
  4179  001FB2                     u2891:
  4180  001FB2  EFBE  F00F         	goto	l2806
  4181  001FB6                     u2890:
  4182  001FB6  EFE9  F00F         	goto	l787
  4183  001FBA                     l2810:
  4184  001FBA  2A0B               	incf	___xxtofl@exp^0,f,c
  4185  001FBC  0E01               	movlw	1
  4186  001FBE  260C               	addwf	___xxtofl@arg^0,f,c
  4187  001FC0  0E00               	movlw	0
  4188  001FC2  220D               	addwfc	(___xxtofl@arg+1)^0,f,c
  4189  001FC4  220E               	addwfc	(___xxtofl@arg+2)^0,f,c
  4190  001FC6  220F               	addwfc	(___xxtofl@arg+3)^0,f,c
  4191  001FC8  90D8               	bcf	status,0,c
  4192  001FCA  320F               	rrcf	(___xxtofl@arg+3)^0,f,c
  4193  001FCC  320E               	rrcf	(___xxtofl@arg+2)^0,f,c
  4194  001FCE  320D               	rrcf	(___xxtofl@arg+1)^0,f,c
  4195  001FD0  320C               	rrcf	___xxtofl@arg^0,f,c
  4196  001FD2                     l787:
  4197  001FD2  0E00               	movlw	0
  4198  001FD4  140C               	andwf	___xxtofl@arg^0,w,c
  4199  001FD6  6E06               	movwf	??___xxtofl^0,c
  4200  001FD8  0E00               	movlw	0
  4201  001FDA  140D               	andwf	(___xxtofl@arg+1)^0,w,c
  4202  001FDC  6E07               	movwf	(??___xxtofl+1)^0,c
  4203  001FDE  0E00               	movlw	0
  4204  001FE0  140E               	andwf	(___xxtofl@arg+2)^0,w,c
  4205  001FE2  6E08               	movwf	(??___xxtofl+2)^0,c
  4206  001FE4  0EFF               	movlw	255
  4207  001FE6  140F               	andwf	(___xxtofl@arg+3)^0,w,c
  4208  001FE8  6E09               	movwf	(??___xxtofl+3)^0,c
  4209  001FEA  5006               	movf	??___xxtofl^0,w,c
  4210  001FEC  1007               	iorwf	(??___xxtofl+1)^0,w,c
  4211  001FEE  1008               	iorwf	(??___xxtofl+2)^0,w,c
  4212  001FF0  1009               	iorwf	(??___xxtofl+3)^0,w,c
  4213  001FF2  A4D8               	btfss	status,2,c
  4214  001FF4  EFFE  F00F         	goto	u2901
  4215  001FF8  EF00  F010         	goto	u2900
  4216  001FFC                     u2901:
  4217  001FFC  EFDD  F00F         	goto	l2810
  4218  002000                     u2900:
  4219  002000  EF08  F010         	goto	l2818
  4220  002004                     l2816:
  4221  002004  060B               	decf	___xxtofl@exp^0,f,c
  4222  002006  90D8               	bcf	status,0,c
  4223  002008  360C               	rlcf	___xxtofl@arg^0,f,c
  4224  00200A  360D               	rlcf	(___xxtofl@arg+1)^0,f,c
  4225  00200C  360E               	rlcf	(___xxtofl@arg+2)^0,f,c
  4226  00200E  360F               	rlcf	(___xxtofl@arg+3)^0,f,c
  4227  002010                     l2818:
  4228  002010  BE0E               	btfsc	(___xxtofl@arg+2)^0,7,c
  4229  002012  EF0D  F010         	goto	u2911
  4230  002016  EF0F  F010         	goto	u2910
  4231  00201A                     u2911:
  4232  00201A  EF17  F010         	goto	l794
  4233  00201E                     u2910:
  4234  00201E  0E02               	movlw	2
  4235  002020  600B               	cpfslt	___xxtofl@exp^0,c
  4236  002022  EF15  F010         	goto	u2921
  4237  002026  EF17  F010         	goto	u2920
  4238  00202A                     u2921:
  4239  00202A  EF02  F010         	goto	l2816
  4240  00202E                     u2920:
  4241  00202E                     l794:
  4242  00202E  B00B               	btfsc	___xxtofl@exp^0,0,c
  4243  002030  EF1C  F010         	goto	u2931
  4244  002034  EF1E  F010         	goto	u2930
  4245  002038                     u2931:
  4246  002038  EF1F  F010         	goto	l2824
  4247  00203C                     u2930:
  4248  00203C  9E0E               	bcf	(___xxtofl@arg+2)^0,7,c
  4249  00203E                     l2824:
  4250  00203E  90D8               	bcf	status,0,c
  4251  002040  320B               	rrcf	___xxtofl@exp^0,f,c
  4252  002042  C00B  F006         	movff	___xxtofl@exp,??___xxtofl
  4253  002046  6A07               	clrf	(??___xxtofl+1)^0,c
  4254  002048  6A08               	clrf	(??___xxtofl+2)^0,c
  4255  00204A  6A09               	clrf	(??___xxtofl+3)^0,c
  4256  00204C  C006  F009         	movff	??___xxtofl,??___xxtofl+3
  4257  002050  6A08               	clrf	(??___xxtofl+2)^0,c
  4258  002052  6A07               	clrf	(??___xxtofl+1)^0,c
  4259  002054  6A06               	clrf	??___xxtofl^0,c
  4260  002056  5006               	movf	??___xxtofl^0,w,c
  4261  002058  120C               	iorwf	___xxtofl@arg^0,f,c
  4262  00205A  5007               	movf	(??___xxtofl+1)^0,w,c
  4263  00205C  120D               	iorwf	(___xxtofl@arg+1)^0,f,c
  4264  00205E  5008               	movf	(??___xxtofl+2)^0,w,c
  4265  002060  120E               	iorwf	(___xxtofl@arg+2)^0,f,c
  4266  002062  5009               	movf	(??___xxtofl+3)^0,w,c
  4267  002064  120F               	iorwf	(___xxtofl@arg+3)^0,f,c
  4268  002066  500A               	movf	___xxtofl@sign^0,w,c
  4269  002068  B4D8               	btfsc	status,2,c
  4270  00206A  EF39  F010         	goto	u2941
  4271  00206E  EF3B  F010         	goto	u2940
  4272  002072                     u2941:
  4273  002072  EF43  F010         	goto	l2834
  4274  002076                     u2940:
  4275  002076  BE05               	btfsc	(___xxtofl@val+3)^0,7,c
  4276  002078  EF42  F010         	goto	u2950
  4277  00207C  EF40  F010         	goto	u2951
  4278  002080                     u2951:
  4279  002080  EF43  F010         	goto	l2834
  4280  002084                     u2950:
  4281  002084  8E0F               	bsf	(___xxtofl@arg+3)^0,7,c
  4282  002086                     l2834:
  4283  002086  C00C  F002         	movff	___xxtofl@arg,?___xxtofl
  4284  00208A  C00D  F003         	movff	___xxtofl@arg+1,?___xxtofl+1
  4285  00208E  C00E  F004         	movff	___xxtofl@arg+2,?___xxtofl+2
  4286  002092  C00F  F005         	movff	___xxtofl@arg+3,?___xxtofl+3
  4287  002096                     l783:
  4288  002096  0012               	return		;funcret
  4289  002098                     __end_of___xxtofl:
  4290                           	callstack 0
  4291                           
  4292 ;; *************** function ___fltol *****************
  4293 ;; Defined at:
  4294 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\fltol.c"
  4295 ;; Parameters:    Size  Location     Type
  4296 ;;  f1              4    1[COMRAM] unsigned char 
  4297 ;; Auto vars:     Size  Location     Type
  4298 ;;  exp1            1   10[COMRAM] unsigned char 
  4299 ;;  sign1           1    9[COMRAM] unsigned char 
  4300 ;; Return value:  Size  Location     Type
  4301 ;;                  4    1[COMRAM] long 
  4302 ;; Registers used:
  4303 ;;		wreg, status,2, status,0
  4304 ;; Tracked objects:
  4305 ;;		On entry : 0/0
  4306 ;;		On exit  : 0/0
  4307 ;;		Unchanged: 0/0
  4308 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4309 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4310 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4311 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4312 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4313 ;;Total ram usage:       10 bytes
  4314 ;; Hardware stack levels used:    1
  4315 ;; Hardware stack levels required when called:    1
  4316 ;; This function calls:
  4317 ;;		Nothing
  4318 ;; This function is called by:
  4319 ;;		_UART_Initial
  4320 ;; This function uses a non-reentrant model
  4321 ;;
  4322                           
  4323                           	psect	text28
  4324  002348                     __ptext28:
  4325                           	callstack 0
  4326  002348                     ___fltol:
  4327                           	callstack 28
  4328  002348  3404               	rlcf	(___fltol@f1+2)^0,w,c
  4329  00234A  3405               	rlcf	(___fltol@f1+3)^0,w,c
  4330  00234C  6E0B               	movwf	___fltol@exp1^0,c
  4331  00234E  500B               	movf	___fltol@exp1^0,w,c
  4332  002350  A4D8               	btfss	status,2,c
  4333  002352  EFAD  F011         	goto	u2791
  4334  002356  EFAF  F011         	goto	u2790
  4335  00235A                     u2791:
  4336  00235A  EFB9  F011         	goto	l2754
  4337  00235E                     u2790:
  4338  00235E                     l2750:
  4339  00235E  0E00               	movlw	0
  4340  002360  6E02               	movwf	?___fltol^0,c
  4341  002362  0E00               	movlw	0
  4342  002364  6E03               	movwf	(?___fltol+1)^0,c
  4343  002366  0E00               	movlw	0
  4344  002368  6E04               	movwf	(?___fltol+2)^0,c
  4345  00236A  0E00               	movlw	0
  4346  00236C  6E05               	movwf	(?___fltol+3)^0,c
  4347  00236E  EF26  F012         	goto	l422
  4348  002372                     l2754:
  4349  002372  C002  F006         	movff	___fltol@f1,??___fltol
  4350  002376  C003  F007         	movff	___fltol@f1+1,??___fltol+1
  4351  00237A  C004  F008         	movff	___fltol@f1+2,??___fltol+2
  4352  00237E  C005  F009         	movff	___fltol@f1+3,??___fltol+3
  4353  002382  0E20               	movlw	32
  4354  002384  EFC9  F011         	goto	u2800
  4355  002388                     u2805:
  4356  002388  90D8               	bcf	status,0,c
  4357  00238A  3209               	rrcf	(??___fltol+3)^0,f,c
  4358  00238C  3208               	rrcf	(??___fltol+2)^0,f,c
  4359  00238E  3207               	rrcf	(??___fltol+1)^0,f,c
  4360  002390  3206               	rrcf	??___fltol^0,f,c
  4361  002392                     u2800:
  4362  002392  2EE8               	decfsz	wreg,f,c
  4363  002394  EFC4  F011         	goto	u2805
  4364  002398  5006               	movf	??___fltol^0,w,c
  4365  00239A  6E0A               	movwf	___fltol@sign1^0,c
  4366  00239C  8E04               	bsf	(___fltol@f1+2)^0,7,c
  4367  00239E  0EFF               	movlw	255
  4368  0023A0  1602               	andwf	___fltol@f1^0,f,c
  4369  0023A2  0EFF               	movlw	255
  4370  0023A4  1603               	andwf	(___fltol@f1+1)^0,f,c
  4371  0023A6  0EFF               	movlw	255
  4372  0023A8  1604               	andwf	(___fltol@f1+2)^0,f,c
  4373  0023AA  0E00               	movlw	0
  4374  0023AC  1605               	andwf	(___fltol@f1+3)^0,f,c
  4375  0023AE  0E96               	movlw	150
  4376  0023B0  5E0B               	subwf	___fltol@exp1^0,f,c
  4377  0023B2  BE0B               	btfsc	___fltol@exp1^0,7,c
  4378  0023B4  EFE0  F011         	goto	u2810
  4379  0023B8  EFDE  F011         	goto	u2811
  4380  0023BC                     u2811:
  4381  0023BC  EFF6  F011         	goto	l2774
  4382  0023C0                     u2810:
  4383  0023C0  500B               	movf	___fltol@exp1^0,w,c
  4384  0023C2  0A80               	xorlw	128
  4385  0023C4  0F97               	addlw	151
  4386  0023C6  B0D8               	btfsc	status,0,c
  4387  0023C8  EFE8  F011         	goto	u2821
  4388  0023CC  EFEA  F011         	goto	u2820
  4389  0023D0                     u2821:
  4390  0023D0  EFEC  F011         	goto	l2770
  4391  0023D4                     u2820:
  4392  0023D4  EFAF  F011         	goto	l2750
  4393  0023D8                     l2770:
  4394  0023D8  90D8               	bcf	status,0,c
  4395  0023DA  3205               	rrcf	(___fltol@f1+3)^0,f,c
  4396  0023DC  3204               	rrcf	(___fltol@f1+2)^0,f,c
  4397  0023DE  3203               	rrcf	(___fltol@f1+1)^0,f,c
  4398  0023E0  3202               	rrcf	___fltol@f1^0,f,c
  4399  0023E2  3E0B               	incfsz	___fltol@exp1^0,f,c
  4400  0023E4  EFEC  F011         	goto	l2770
  4401  0023E8  EF0E  F012         	goto	l2784
  4402  0023EC                     l2774:
  4403  0023EC  0E1F               	movlw	31
  4404  0023EE  640B               	cpfsgt	___fltol@exp1^0,c
  4405  0023F0  EFFC  F011         	goto	u2831
  4406  0023F4  EFFE  F011         	goto	u2830
  4407  0023F8                     u2831:
  4408  0023F8  EF06  F012         	goto	l2782
  4409  0023FC                     u2830:
  4410  0023FC  EFAF  F011         	goto	l2750
  4411  002400                     l2780:
  4412  002400  90D8               	bcf	status,0,c
  4413  002402  3602               	rlcf	___fltol@f1^0,f,c
  4414  002404  3603               	rlcf	(___fltol@f1+1)^0,f,c
  4415  002406  3604               	rlcf	(___fltol@f1+2)^0,f,c
  4416  002408  3605               	rlcf	(___fltol@f1+3)^0,f,c
  4417  00240A  060B               	decf	___fltol@exp1^0,f,c
  4418  00240C                     l2782:
  4419  00240C  500B               	movf	___fltol@exp1^0,w,c
  4420  00240E  A4D8               	btfss	status,2,c
  4421  002410  EF0C  F012         	goto	u2841
  4422  002414  EF0E  F012         	goto	u2840
  4423  002418                     u2841:
  4424  002418  EF00  F012         	goto	l2780
  4425  00241C                     u2840:
  4426  00241C                     l2784:
  4427  00241C  500A               	movf	___fltol@sign1^0,w,c
  4428  00241E  B4D8               	btfsc	status,2,c
  4429  002420  EF14  F012         	goto	u2851
  4430  002424  EF16  F012         	goto	u2850
  4431  002428                     u2851:
  4432  002428  EF1E  F012         	goto	l2788
  4433  00242C                     u2850:
  4434  00242C  1E05               	comf	(___fltol@f1+3)^0,f,c
  4435  00242E  1E04               	comf	(___fltol@f1+2)^0,f,c
  4436  002430  1E03               	comf	(___fltol@f1+1)^0,f,c
  4437  002432  6C02               	negf	___fltol@f1^0,c
  4438  002434  0E00               	movlw	0
  4439  002436  2203               	addwfc	(___fltol@f1+1)^0,f,c
  4440  002438  2204               	addwfc	(___fltol@f1+2)^0,f,c
  4441  00243A  2205               	addwfc	(___fltol@f1+3)^0,f,c
  4442  00243C                     l2788:
  4443  00243C  C002  F002         	movff	___fltol@f1,?___fltol
  4444  002440  C003  F003         	movff	___fltol@f1+1,?___fltol+1
  4445  002444  C004  F004         	movff	___fltol@f1+2,?___fltol+2
  4446  002448  C005  F005         	movff	___fltol@f1+3,?___fltol+3
  4447  00244C                     l422:
  4448  00244C  0012               	return		;funcret
  4449  00244E                     __end_of___fltol:
  4450                           	callstack 0
  4451                           
  4452 ;; *************** function ___fldiv *****************
  4453 ;; Defined at:
  4454 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\sprcdiv.c"
  4455 ;; Parameters:    Size  Location     Type
  4456 ;;  b               4   15[COMRAM] long 
  4457 ;;  a               4   19[COMRAM] long 
  4458 ;; Auto vars:     Size  Location     Type
  4459 ;;  grs             4   34[COMRAM] unsigned long 
  4460 ;;  rem             4   27[COMRAM] unsigned long 
  4461 ;;  new_exp         2   32[COMRAM] short 
  4462 ;;  aexp            1   39[COMRAM] unsigned char 
  4463 ;;  bexp            1   38[COMRAM] unsigned char 
  4464 ;;  sign            1   31[COMRAM] unsigned char 
  4465 ;; Return value:  Size  Location     Type
  4466 ;;                  4   15[COMRAM] unsigned char 
  4467 ;; Registers used:
  4468 ;;		wreg, status,2, status,0
  4469 ;; Tracked objects:
  4470 ;;		On entry : 0/0
  4471 ;;		On exit  : 0/0
  4472 ;;		Unchanged: 0/0
  4473 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4474 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4475 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4476 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4477 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4478 ;;Total ram usage:       25 bytes
  4479 ;; Hardware stack levels used:    1
  4480 ;; Hardware stack levels required when called:    1
  4481 ;; This function calls:
  4482 ;;		Nothing
  4483 ;; This function is called by:
  4484 ;;		_UART_Initial
  4485 ;; This function uses a non-reentrant model
  4486 ;;
  4487                           
  4488                           	psect	text29
  4489  001876                     __ptext29:
  4490                           	callstack 0
  4491  001876                     ___fldiv:
  4492                           	callstack 28
  4493  001876  5013               	movf	(___fldiv@b+3)^0,w,c
  4494  001878  0B80               	andlw	128
  4495  00187A  6E20               	movwf	___fldiv@sign^0,c
  4496  00187C  5013               	movf	(___fldiv@b+3)^0,w,c
  4497  00187E  2413               	addwf	(___fldiv@b+3)^0,w,c
  4498  001880  6E27               	movwf	___fldiv@bexp^0,c
  4499  001882  AE12               	btfss	(___fldiv@b+2)^0,7,c
  4500  001884  EF46  F00C         	goto	u2561
  4501  001888  EF48  F00C         	goto	u2560
  4502  00188C                     u2561:
  4503  00188C  EF49  F00C         	goto	l2616
  4504  001890                     u2560:
  4505  001890  8027               	bsf	___fldiv@bexp^0,0,c
  4506  001892                     l2616:
  4507  001892  5027               	movf	___fldiv@bexp^0,w,c
  4508  001894  B4D8               	btfsc	status,2,c
  4509  001896  EF4F  F00C         	goto	u2571
  4510  00189A  EF51  F00C         	goto	u2570
  4511  00189E                     u2571:
  4512  00189E  EF66  F00C         	goto	l2626
  4513  0018A2                     u2570:
  4514  0018A2  2827               	incf	___fldiv@bexp^0,w,c
  4515  0018A4  A4D8               	btfss	status,2,c
  4516  0018A6  EF57  F00C         	goto	u2581
  4517  0018AA  EF59  F00C         	goto	u2580
  4518  0018AE                     u2581:
  4519  0018AE  EF61  F00C         	goto	l2622
  4520  0018B2                     u2580:
  4521  0018B2  0E00               	movlw	0
  4522  0018B4  6E10               	movwf	___fldiv@b^0,c
  4523  0018B6  0E00               	movlw	0
  4524  0018B8  6E11               	movwf	(___fldiv@b+1)^0,c
  4525  0018BA  0E00               	movlw	0
  4526  0018BC  6E12               	movwf	(___fldiv@b+2)^0,c
  4527  0018BE  0E00               	movlw	0
  4528  0018C0  6E13               	movwf	(___fldiv@b+3)^0,c
  4529  0018C2                     l2622:
  4530  0018C2  8E12               	bsf	(___fldiv@b+2)^0,7,c
  4531  0018C4  0E00               	movlw	0
  4532  0018C6  6E13               	movwf	(___fldiv@b+3)^0,c
  4533  0018C8  EF6E  F00C         	goto	l2628
  4534  0018CC                     l2626:
  4535  0018CC  0E00               	movlw	0
  4536  0018CE  6E10               	movwf	___fldiv@b^0,c
  4537  0018D0  0E00               	movlw	0
  4538  0018D2  6E11               	movwf	(___fldiv@b+1)^0,c
  4539  0018D4  0E00               	movlw	0
  4540  0018D6  6E12               	movwf	(___fldiv@b+2)^0,c
  4541  0018D8  0E00               	movlw	0
  4542  0018DA  6E13               	movwf	(___fldiv@b+3)^0,c
  4543  0018DC                     l2628:
  4544  0018DC  5017               	movf	(___fldiv@a+3)^0,w,c
  4545  0018DE  0B80               	andlw	128
  4546  0018E0  1A20               	xorwf	___fldiv@sign^0,f,c
  4547  0018E2  5017               	movf	(___fldiv@a+3)^0,w,c
  4548  0018E4  2417               	addwf	(___fldiv@a+3)^0,w,c
  4549  0018E6  6E28               	movwf	___fldiv@aexp^0,c
  4550  0018E8  AE16               	btfss	(___fldiv@a+2)^0,7,c
  4551  0018EA  EF79  F00C         	goto	u2591
  4552  0018EE  EF7B  F00C         	goto	u2590
  4553  0018F2                     u2591:
  4554  0018F2  EF7C  F00C         	goto	l2636
  4555  0018F6                     u2590:
  4556  0018F6  8028               	bsf	___fldiv@aexp^0,0,c
  4557  0018F8                     l2636:
  4558  0018F8  5028               	movf	___fldiv@aexp^0,w,c
  4559  0018FA  B4D8               	btfsc	status,2,c
  4560  0018FC  EF82  F00C         	goto	u2601
  4561  001900  EF84  F00C         	goto	u2600
  4562  001904                     u2601:
  4563  001904  EF99  F00C         	goto	l2646
  4564  001908                     u2600:
  4565  001908  2828               	incf	___fldiv@aexp^0,w,c
  4566  00190A  A4D8               	btfss	status,2,c
  4567  00190C  EF8A  F00C         	goto	u2611
  4568  001910  EF8C  F00C         	goto	u2610
  4569  001914                     u2611:
  4570  001914  EF94  F00C         	goto	l2642
  4571  001918                     u2610:
  4572  001918  0E00               	movlw	0
  4573  00191A  6E14               	movwf	___fldiv@a^0,c
  4574  00191C  0E00               	movlw	0
  4575  00191E  6E15               	movwf	(___fldiv@a+1)^0,c
  4576  001920  0E00               	movlw	0
  4577  001922  6E16               	movwf	(___fldiv@a+2)^0,c
  4578  001924  0E00               	movlw	0
  4579  001926  6E17               	movwf	(___fldiv@a+3)^0,c
  4580  001928                     l2642:
  4581  001928  8E16               	bsf	(___fldiv@a+2)^0,7,c
  4582  00192A  0E00               	movlw	0
  4583  00192C  6E17               	movwf	(___fldiv@a+3)^0,c
  4584  00192E  EFA1  F00C         	goto	l2648
  4585  001932                     l2646:
  4586  001932  0E00               	movlw	0
  4587  001934  6E14               	movwf	___fldiv@a^0,c
  4588  001936  0E00               	movlw	0
  4589  001938  6E15               	movwf	(___fldiv@a+1)^0,c
  4590  00193A  0E00               	movlw	0
  4591  00193C  6E16               	movwf	(___fldiv@a+2)^0,c
  4592  00193E  0E00               	movlw	0
  4593  001940  6E17               	movwf	(___fldiv@a+3)^0,c
  4594  001942                     l2648:
  4595  001942  5014               	movf	___fldiv@a^0,w,c
  4596  001944  1015               	iorwf	(___fldiv@a+1)^0,w,c
  4597  001946  1016               	iorwf	(___fldiv@a+2)^0,w,c
  4598  001948  1017               	iorwf	(___fldiv@a+3)^0,w,c
  4599  00194A  A4D8               	btfss	status,2,c
  4600  00194C  EFAA  F00C         	goto	u2621
  4601  001950  EFAC  F00C         	goto	u2620
  4602  001954                     u2621:
  4603  001954  EFC4  F00C         	goto	l2660
  4604  001958                     u2620:
  4605  001958  0E00               	movlw	0
  4606  00195A  6E10               	movwf	___fldiv@b^0,c
  4607  00195C  0E00               	movlw	0
  4608  00195E  6E11               	movwf	(___fldiv@b+1)^0,c
  4609  001960  0E00               	movlw	0
  4610  001962  6E12               	movwf	(___fldiv@b+2)^0,c
  4611  001964  0E00               	movlw	0
  4612  001966  6E13               	movwf	(___fldiv@b+3)^0,c
  4613  001968  0E80               	movlw	128
  4614  00196A  1212               	iorwf	(___fldiv@b+2)^0,f,c
  4615  00196C  0E7F               	movlw	127
  4616  00196E  1213               	iorwf	(___fldiv@b+3)^0,f,c
  4617  001970                     l2654:
  4618  001970  5020               	movf	___fldiv@sign^0,w,c
  4619  001972  1213               	iorwf	(___fldiv@b+3)^0,f,c
  4620  001974  C010  F010         	movff	___fldiv@b,?___fldiv
  4621  001978  C011  F011         	movff	___fldiv@b+1,?___fldiv+1
  4622  00197C  C012  F012         	movff	___fldiv@b+2,?___fldiv+2
  4623  001980  C013  F013         	movff	___fldiv@b+3,?___fldiv+3
  4624  001984  EF07  F00E         	goto	l707
  4625  001988                     l2660:
  4626  001988  5027               	movf	___fldiv@bexp^0,w,c
  4627  00198A  A4D8               	btfss	status,2,c
  4628  00198C  EFCA  F00C         	goto	u2631
  4629  001990  EFCC  F00C         	goto	u2630
  4630  001994                     u2631:
  4631  001994  EFD6  F00C         	goto	l2668
  4632  001998                     u2630:
  4633  001998  0E00               	movlw	0
  4634  00199A  6E10               	movwf	?___fldiv^0,c
  4635  00199C  0E00               	movlw	0
  4636  00199E  6E11               	movwf	(?___fldiv+1)^0,c
  4637  0019A0  0E00               	movlw	0
  4638  0019A2  6E12               	movwf	(?___fldiv+2)^0,c
  4639  0019A4  0E00               	movlw	0
  4640  0019A6  6E13               	movwf	(?___fldiv+3)^0,c
  4641  0019A8  EF07  F00E         	goto	l707
  4642  0019AC                     l2668:
  4643  0019AC  5028               	movf	___fldiv@aexp^0,w,c
  4644  0019AE  C027  F018         	movff	___fldiv@bexp,??___fldiv
  4645  0019B2  6A19               	clrf	(??___fldiv+1)^0,c
  4646  0019B4  5E18               	subwf	??___fldiv^0,f,c
  4647  0019B6  0E00               	movlw	0
  4648  0019B8  5A19               	subwfb	(??___fldiv+1)^0,f,c
  4649  0019BA  0E7F               	movlw	127
  4650  0019BC  2418               	addwf	??___fldiv^0,w,c
  4651  0019BE  6E21               	movwf	___fldiv@new_exp^0,c
  4652  0019C0  0E00               	movlw	0
  4653  0019C2  2019               	addwfc	(??___fldiv+1)^0,w,c
  4654  0019C4  6E22               	movwf	(___fldiv@new_exp+1)^0,c
  4655  0019C6  C010  F01C         	movff	___fldiv@b,___fldiv@rem
  4656  0019CA  C011  F01D         	movff	___fldiv@b+1,___fldiv@rem+1
  4657  0019CE  C012  F01E         	movff	___fldiv@b+2,___fldiv@rem+2
  4658  0019D2  C013  F01F         	movff	___fldiv@b+3,___fldiv@rem+3
  4659  0019D6  0E00               	movlw	0
  4660  0019D8  6E10               	movwf	___fldiv@b^0,c
  4661  0019DA  0E00               	movlw	0
  4662  0019DC  6E11               	movwf	(___fldiv@b+1)^0,c
  4663  0019DE  0E00               	movlw	0
  4664  0019E0  6E12               	movwf	(___fldiv@b+2)^0,c
  4665  0019E2  0E00               	movlw	0
  4666  0019E4  6E13               	movwf	(___fldiv@b+3)^0,c
  4667  0019E6  0E00               	movlw	0
  4668  0019E8  6E23               	movwf	___fldiv@grs^0,c
  4669  0019EA  0E00               	movlw	0
  4670  0019EC  6E24               	movwf	(___fldiv@grs+1)^0,c
  4671  0019EE  0E00               	movlw	0
  4672  0019F0  6E25               	movwf	(___fldiv@grs+2)^0,c
  4673  0019F2  0E00               	movlw	0
  4674  0019F4  6E26               	movwf	(___fldiv@grs+3)^0,c
  4675  0019F6  0E00               	movlw	0
  4676  0019F8  6E28               	movwf	___fldiv@aexp^0,c
  4677  0019FA  EF37  F00D         	goto	l709
  4678  0019FE                     l2678:
  4679  0019FE  5028               	movf	___fldiv@aexp^0,w,c
  4680  001A00  B4D8               	btfsc	status,2,c
  4681  001A02  EF05  F00D         	goto	u2641
  4682  001A06  EF07  F00D         	goto	u2640
  4683  001A0A                     u2641:
  4684  001A0A  EF1E  F00D         	goto	l2686
  4685  001A0E                     u2640:
  4686  001A0E  90D8               	bcf	status,0,c
  4687  001A10  361C               	rlcf	___fldiv@rem^0,f,c
  4688  001A12  361D               	rlcf	(___fldiv@rem+1)^0,f,c
  4689  001A14  361E               	rlcf	(___fldiv@rem+2)^0,f,c
  4690  001A16  361F               	rlcf	(___fldiv@rem+3)^0,f,c
  4691  001A18  90D8               	bcf	status,0,c
  4692  001A1A  3610               	rlcf	___fldiv@b^0,f,c
  4693  001A1C  3611               	rlcf	(___fldiv@b+1)^0,f,c
  4694  001A1E  3612               	rlcf	(___fldiv@b+2)^0,f,c
  4695  001A20  3613               	rlcf	(___fldiv@b+3)^0,f,c
  4696  001A22  AE26               	btfss	(___fldiv@grs+3)^0,7,c
  4697  001A24  EF16  F00D         	goto	u2651
  4698  001A28  EF18  F00D         	goto	u2650
  4699  001A2C                     u2651:
  4700  001A2C  EF19  F00D         	goto	l712
  4701  001A30                     u2650:
  4702  001A30  8010               	bsf	___fldiv@b^0,0,c
  4703  001A32                     l712:
  4704  001A32  90D8               	bcf	status,0,c
  4705  001A34  3623               	rlcf	___fldiv@grs^0,f,c
  4706  001A36  3624               	rlcf	(___fldiv@grs+1)^0,f,c
  4707  001A38  3625               	rlcf	(___fldiv@grs+2)^0,f,c
  4708  001A3A  3626               	rlcf	(___fldiv@grs+3)^0,f,c
  4709  001A3C                     l2686:
  4710  001A3C  5014               	movf	___fldiv@a^0,w,c
  4711  001A3E  5C1C               	subwf	___fldiv@rem^0,w,c
  4712  001A40  5015               	movf	(___fldiv@a+1)^0,w,c
  4713  001A42  581D               	subwfb	(___fldiv@rem+1)^0,w,c
  4714  001A44  5016               	movf	(___fldiv@a+2)^0,w,c
  4715  001A46  581E               	subwfb	(___fldiv@rem+2)^0,w,c
  4716  001A48  5017               	movf	(___fldiv@a+3)^0,w,c
  4717  001A4A  581F               	subwfb	(___fldiv@rem+3)^0,w,c
  4718  001A4C  A0D8               	btfss	status,0,c
  4719  001A4E  EF2B  F00D         	goto	u2661
  4720  001A52  EF2D  F00D         	goto	u2660
  4721  001A56                     u2661:
  4722  001A56  EF36  F00D         	goto	l2692
  4723  001A5A                     u2660:
  4724  001A5A  8C26               	bsf	(___fldiv@grs+3)^0,6,c
  4725  001A5C  5014               	movf	___fldiv@a^0,w,c
  4726  001A5E  5E1C               	subwf	___fldiv@rem^0,f,c
  4727  001A60  5015               	movf	(___fldiv@a+1)^0,w,c
  4728  001A62  5A1D               	subwfb	(___fldiv@rem+1)^0,f,c
  4729  001A64  5016               	movf	(___fldiv@a+2)^0,w,c
  4730  001A66  5A1E               	subwfb	(___fldiv@rem+2)^0,f,c
  4731  001A68  5017               	movf	(___fldiv@a+3)^0,w,c
  4732  001A6A  5A1F               	subwfb	(___fldiv@rem+3)^0,f,c
  4733  001A6C                     l2692:
  4734  001A6C  2A28               	incf	___fldiv@aexp^0,f,c
  4735  001A6E                     l709:
  4736  001A6E  0E19               	movlw	25
  4737  001A70  6428               	cpfsgt	___fldiv@aexp^0,c
  4738  001A72  EF3D  F00D         	goto	u2671
  4739  001A76  EF3F  F00D         	goto	u2670
  4740  001A7A                     u2671:
  4741  001A7A  EFFF  F00C         	goto	l2678
  4742  001A7E                     u2670:
  4743  001A7E  501C               	movf	___fldiv@rem^0,w,c
  4744  001A80  101D               	iorwf	(___fldiv@rem+1)^0,w,c
  4745  001A82  101E               	iorwf	(___fldiv@rem+2)^0,w,c
  4746  001A84  101F               	iorwf	(___fldiv@rem+3)^0,w,c
  4747  001A86  B4D8               	btfsc	status,2,c
  4748  001A88  EF48  F00D         	goto	u2681
  4749  001A8C  EF4A  F00D         	goto	u2680
  4750  001A90                     u2681:
  4751  001A90  EF62  F00D         	goto	l2704
  4752  001A94                     u2680:
  4753  001A94  8023               	bsf	___fldiv@grs^0,0,c
  4754  001A96  EF62  F00D         	goto	l2704
  4755  001A9A                     l2698:
  4756  001A9A  90D8               	bcf	status,0,c
  4757  001A9C  3610               	rlcf	___fldiv@b^0,f,c
  4758  001A9E  3611               	rlcf	(___fldiv@b+1)^0,f,c
  4759  001AA0  3612               	rlcf	(___fldiv@b+2)^0,f,c
  4760  001AA2  3613               	rlcf	(___fldiv@b+3)^0,f,c
  4761  001AA4  AE26               	btfss	(___fldiv@grs+3)^0,7,c
  4762  001AA6  EF57  F00D         	goto	u2691
  4763  001AAA  EF59  F00D         	goto	u2690
  4764  001AAE                     u2691:
  4765  001AAE  EF5A  F00D         	goto	l718
  4766  001AB2                     u2690:
  4767  001AB2  8010               	bsf	___fldiv@b^0,0,c
  4768  001AB4                     l718:
  4769  001AB4  90D8               	bcf	status,0,c
  4770  001AB6  3623               	rlcf	___fldiv@grs^0,f,c
  4771  001AB8  3624               	rlcf	(___fldiv@grs+1)^0,f,c
  4772  001ABA  3625               	rlcf	(___fldiv@grs+2)^0,f,c
  4773  001ABC  3626               	rlcf	(___fldiv@grs+3)^0,f,c
  4774  001ABE  0621               	decf	___fldiv@new_exp^0,f,c
  4775  001AC0  A0D8               	btfss	status,0,c
  4776  001AC2  0622               	decf	(___fldiv@new_exp+1)^0,f,c
  4777  001AC4                     l2704:
  4778  001AC4  AE12               	btfss	(___fldiv@b+2)^0,7,c
  4779  001AC6  EF67  F00D         	goto	u2701
  4780  001ACA  EF69  F00D         	goto	u2700
  4781  001ACE                     u2701:
  4782  001ACE  EF4D  F00D         	goto	l2698
  4783  001AD2                     u2700:
  4784  001AD2  0E00               	movlw	0
  4785  001AD4  6E28               	movwf	___fldiv@aexp^0,c
  4786  001AD6  AE26               	btfss	(___fldiv@grs+3)^0,7,c
  4787  001AD8  EF70  F00D         	goto	u2711
  4788  001ADC  EF72  F00D         	goto	u2710
  4789  001AE0                     u2711:
  4790  001AE0  EF96  F00D         	goto	l720
  4791  001AE4                     u2710:
  4792  001AE4  0EFF               	movlw	255
  4793  001AE6  1423               	andwf	___fldiv@grs^0,w,c
  4794  001AE8  6E18               	movwf	??___fldiv^0,c
  4795  001AEA  0EFF               	movlw	255
  4796  001AEC  1424               	andwf	(___fldiv@grs+1)^0,w,c
  4797  001AEE  6E19               	movwf	(??___fldiv+1)^0,c
  4798  001AF0  0EFF               	movlw	255
  4799  001AF2  1425               	andwf	(___fldiv@grs+2)^0,w,c
  4800  001AF4  6E1A               	movwf	(??___fldiv+2)^0,c
  4801  001AF6  0E7F               	movlw	127
  4802  001AF8  1426               	andwf	(___fldiv@grs+3)^0,w,c
  4803  001AFA  6E1B               	movwf	(??___fldiv+3)^0,c
  4804  001AFC  5018               	movf	??___fldiv^0,w,c
  4805  001AFE  1019               	iorwf	(??___fldiv+1)^0,w,c
  4806  001B00  101A               	iorwf	(??___fldiv+2)^0,w,c
  4807  001B02  101B               	iorwf	(??___fldiv+3)^0,w,c
  4808  001B04  B4D8               	btfsc	status,2,c
  4809  001B06  EF87  F00D         	goto	u2721
  4810  001B0A  EF89  F00D         	goto	u2720
  4811  001B0E                     u2721:
  4812  001B0E  EF8D  F00D         	goto	l721
  4813  001B12                     u2720:
  4814  001B12                     l2712:
  4815  001B12  0E01               	movlw	1
  4816  001B14  6E28               	movwf	___fldiv@aexp^0,c
  4817  001B16  EF96  F00D         	goto	l720
  4818  001B1A                     l721:
  4819  001B1A  A010               	btfss	___fldiv@b^0,0,c
  4820  001B1C  EF92  F00D         	goto	u2731
  4821  001B20  EF94  F00D         	goto	u2730
  4822  001B24                     u2731:
  4823  001B24  EF96  F00D         	goto	l720
  4824  001B28                     u2730:
  4825  001B28  EF89  F00D         	goto	l2712
  4826  001B2C                     l720:
  4827  001B2C  5028               	movf	___fldiv@aexp^0,w,c
  4828  001B2E  B4D8               	btfsc	status,2,c
  4829  001B30  EF9C  F00D         	goto	u2741
  4830  001B34  EF9E  F00D         	goto	u2740
  4831  001B38                     u2741:
  4832  001B38  EFC2  F00D         	goto	l2724
  4833  001B3C                     u2740:
  4834  001B3C  0E01               	movlw	1
  4835  001B3E  2610               	addwf	___fldiv@b^0,f,c
  4836  001B40  0E00               	movlw	0
  4837  001B42  2211               	addwfc	(___fldiv@b+1)^0,f,c
  4838  001B44  2212               	addwfc	(___fldiv@b+2)^0,f,c
  4839  001B46  2213               	addwfc	(___fldiv@b+3)^0,f,c
  4840  001B48  A013               	btfss	(___fldiv@b+3)^0,0,c
  4841  001B4A  EFA9  F00D         	goto	u2751
  4842  001B4E  EFAB  F00D         	goto	u2750
  4843  001B52                     u2751:
  4844  001B52  EFC2  F00D         	goto	l2724
  4845  001B56                     u2750:
  4846  001B56  C010  F018         	movff	___fldiv@b,??___fldiv
  4847  001B5A  C011  F019         	movff	___fldiv@b+1,??___fldiv+1
  4848  001B5E  C012  F01A         	movff	___fldiv@b+2,??___fldiv+2
  4849  001B62  C013  F01B         	movff	___fldiv@b+3,??___fldiv+3
  4850  001B66  341B               	rlcf	(??___fldiv+3)^0,w,c
  4851  001B68  321B               	rrcf	(??___fldiv+3)^0,f,c
  4852  001B6A  321A               	rrcf	(??___fldiv+2)^0,f,c
  4853  001B6C  3219               	rrcf	(??___fldiv+1)^0,f,c
  4854  001B6E  3218               	rrcf	??___fldiv^0,f,c
  4855  001B70  C018  F010         	movff	??___fldiv,___fldiv@b
  4856  001B74  C019  F011         	movff	??___fldiv+1,___fldiv@b+1
  4857  001B78  C01A  F012         	movff	??___fldiv+2,___fldiv@b+2
  4858  001B7C  C01B  F013         	movff	??___fldiv+3,___fldiv@b+3
  4859  001B80  4A21               	infsnz	___fldiv@new_exp^0,f,c
  4860  001B82  2A22               	incf	(___fldiv@new_exp+1)^0,f,c
  4861  001B84                     l2724:
  4862  001B84  BE22               	btfsc	(___fldiv@new_exp+1)^0,7,c
  4863  001B86  EFCD  F00D         	goto	u2761
  4864  001B8A  5022               	movf	(___fldiv@new_exp+1)^0,w,c
  4865  001B8C  E108               	bnz	u2760
  4866  001B8E  2821               	incf	___fldiv@new_exp^0,w,c
  4867  001B90  A0D8               	btfss	status,0,c
  4868  001B92  EFCD  F00D         	goto	u2761
  4869  001B96  EFCF  F00D         	goto	u2760
  4870  001B9A                     u2761:
  4871  001B9A  EFDA  F00D         	goto	l2728
  4872  001B9E                     u2760:
  4873  001B9E  0E00               	movlw	0
  4874  001BA0  6E22               	movwf	(___fldiv@new_exp+1)^0,c
  4875  001BA2  6821               	setf	___fldiv@new_exp^0,c
  4876  001BA4  0E00               	movlw	0
  4877  001BA6  6E10               	movwf	___fldiv@b^0,c
  4878  001BA8  0E00               	movlw	0
  4879  001BAA  6E11               	movwf	(___fldiv@b+1)^0,c
  4880  001BAC  0E00               	movlw	0
  4881  001BAE  6E12               	movwf	(___fldiv@b+2)^0,c
  4882  001BB0  0E00               	movlw	0
  4883  001BB2  6E13               	movwf	(___fldiv@b+3)^0,c
  4884  001BB4                     l2728:
  4885  001BB4  BE22               	btfsc	(___fldiv@new_exp+1)^0,7,c
  4886  001BB6  EFE7  F00D         	goto	u2770
  4887  001BBA  5022               	movf	(___fldiv@new_exp+1)^0,w,c
  4888  001BBC  E106               	bnz	u2771
  4889  001BBE  0421               	decf	___fldiv@new_exp^0,w,c
  4890  001BC0  B0D8               	btfsc	status,0,c
  4891  001BC2  EFE5  F00D         	goto	u2771
  4892  001BC6  EFE7  F00D         	goto	u2770
  4893  001BCA                     u2771:
  4894  001BCA  EFF5  F00D         	goto	l2732
  4895  001BCE                     u2770:
  4896  001BCE  0E00               	movlw	0
  4897  001BD0  6E22               	movwf	(___fldiv@new_exp+1)^0,c
  4898  001BD2  0E00               	movlw	0
  4899  001BD4  6E21               	movwf	___fldiv@new_exp^0,c
  4900  001BD6  0E00               	movlw	0
  4901  001BD8  6E10               	movwf	___fldiv@b^0,c
  4902  001BDA  0E00               	movlw	0
  4903  001BDC  6E11               	movwf	(___fldiv@b+1)^0,c
  4904  001BDE  0E00               	movlw	0
  4905  001BE0  6E12               	movwf	(___fldiv@b+2)^0,c
  4906  001BE2  0E00               	movlw	0
  4907  001BE4  6E13               	movwf	(___fldiv@b+3)^0,c
  4908  001BE6  0E00               	movlw	0
  4909  001BE8  6E20               	movwf	___fldiv@sign^0,c
  4910  001BEA                     l2732:
  4911  001BEA  C021  F027         	movff	___fldiv@new_exp,___fldiv@bexp
  4912  001BEE  A027               	btfss	___fldiv@bexp^0,0,c
  4913  001BF0  EFFC  F00D         	goto	u2781
  4914  001BF4  EFFE  F00D         	goto	u2780
  4915  001BF8                     u2781:
  4916  001BF8  EF01  F00E         	goto	l2738
  4917  001BFC                     u2780:
  4918  001BFC  8E12               	bsf	(___fldiv@b+2)^0,7,c
  4919  001BFE  EF02  F00E         	goto	l2740
  4920  001C02                     l2738:
  4921  001C02  9E12               	bcf	(___fldiv@b+2)^0,7,c
  4922  001C04                     l2740:
  4923  001C04  90D8               	bcf	status,0,c
  4924  001C06  3027               	rrcf	___fldiv@bexp^0,w,c
  4925  001C08  6E13               	movwf	(___fldiv@b+3)^0,c
  4926  001C0A  EFB8  F00C         	goto	l2654
  4927  001C0E                     l707:
  4928  001C0E  0012               	return		;funcret
  4929  001C10                     __end_of___fldiv:
  4930                           	callstack 0
  4931                           
  4932 ;; *************** function ___fladd *****************
  4933 ;; Defined at:
  4934 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\sprcadd.c"
  4935 ;; Parameters:    Size  Location     Type
  4936 ;;  b               4   40[COMRAM] unsigned char 
  4937 ;;  a               4   44[COMRAM] unsigned char 
  4938 ;; Auto vars:     Size  Location     Type
  4939 ;;  grs             1   55[COMRAM] unsigned char 
  4940 ;;  bexp            1   54[COMRAM] unsigned char 
  4941 ;;  aexp            1   53[COMRAM] unsigned char 
  4942 ;;  signs           1   52[COMRAM] unsigned char 
  4943 ;; Return value:  Size  Location     Type
  4944 ;;                  4   40[COMRAM] unsigned char 
  4945 ;; Registers used:
  4946 ;;		wreg, status,2, status,0
  4947 ;; Tracked objects:
  4948 ;;		On entry : 0/0
  4949 ;;		On exit  : 0/0
  4950 ;;		Unchanged: 0/0
  4951 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4952 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4953 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4954 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4955 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4956 ;;Total ram usage:       16 bytes
  4957 ;; Hardware stack levels used:    1
  4958 ;; Hardware stack levels required when called:    1
  4959 ;; This function calls:
  4960 ;;		Nothing
  4961 ;; This function is called by:
  4962 ;;		_UART_Initial
  4963 ;; This function uses a non-reentrant model
  4964 ;;
  4965                           
  4966                           	psect	text30
  4967  00100A                     __ptext30:
  4968                           	callstack 0
  4969  00100A                     ___fladd:
  4970                           	callstack 28
  4971  00100A  502C               	movf	(___fladd@b+3)^0,w,c
  4972  00100C  0B80               	andlw	128
  4973  00100E  6E35               	movwf	___fladd@signs^0,c
  4974  001010  502C               	movf	(___fladd@b+3)^0,w,c
  4975  001012  242C               	addwf	(___fladd@b+3)^0,w,c
  4976  001014  6E37               	movwf	___fladd@bexp^0,c
  4977  001016  AE2B               	btfss	(___fladd@b+2)^0,7,c
  4978  001018  EF10  F008         	goto	u2171
  4979  00101C  EF12  F008         	goto	u2170
  4980  001020                     u2171:
  4981  001020  EF13  F008         	goto	l2414
  4982  001024                     u2170:
  4983  001024  8037               	bsf	___fladd@bexp^0,0,c
  4984  001026                     l2414:
  4985  001026  5037               	movf	___fladd@bexp^0,w,c
  4986  001028  B4D8               	btfsc	status,2,c
  4987  00102A  EF19  F008         	goto	u2181
  4988  00102E  EF1B  F008         	goto	u2180
  4989  001032                     u2181:
  4990  001032  EF30  F008         	goto	l2424
  4991  001036                     u2180:
  4992  001036  2837               	incf	___fladd@bexp^0,w,c
  4993  001038  A4D8               	btfss	status,2,c
  4994  00103A  EF21  F008         	goto	u2191
  4995  00103E  EF23  F008         	goto	u2190
  4996  001042                     u2191:
  4997  001042  EF2B  F008         	goto	l2420
  4998  001046                     u2190:
  4999  001046  0E00               	movlw	0
  5000  001048  6E29               	movwf	___fladd@b^0,c
  5001  00104A  0E00               	movlw	0
  5002  00104C  6E2A               	movwf	(___fladd@b+1)^0,c
  5003  00104E  0E00               	movlw	0
  5004  001050  6E2B               	movwf	(___fladd@b+2)^0,c
  5005  001052  0E00               	movlw	0
  5006  001054  6E2C               	movwf	(___fladd@b+3)^0,c
  5007  001056                     l2420:
  5008  001056  8E2B               	bsf	(___fladd@b+2)^0,7,c
  5009  001058  0E00               	movlw	0
  5010  00105A  6E2C               	movwf	(___fladd@b+3)^0,c
  5011  00105C  EF38  F008         	goto	l2426
  5012  001060                     l2424:
  5013  001060  0E00               	movlw	0
  5014  001062  6E29               	movwf	___fladd@b^0,c
  5015  001064  0E00               	movlw	0
  5016  001066  6E2A               	movwf	(___fladd@b+1)^0,c
  5017  001068  0E00               	movlw	0
  5018  00106A  6E2B               	movwf	(___fladd@b+2)^0,c
  5019  00106C  0E00               	movlw	0
  5020  00106E  6E2C               	movwf	(___fladd@b+3)^0,c
  5021  001070                     l2426:
  5022  001070  5030               	movf	(___fladd@a+3)^0,w,c
  5023  001072  0B80               	andlw	128
  5024  001074  6E36               	movwf	___fladd@aexp^0,c
  5025  001076  5035               	movf	___fladd@signs^0,w,c
  5026  001078  1836               	xorwf	___fladd@aexp^0,w,c
  5027  00107A  B4D8               	btfsc	status,2,c
  5028  00107C  EF42  F008         	goto	u2201
  5029  001080  EF44  F008         	goto	u2200
  5030  001084                     u2201:
  5031  001084  EF45  F008         	goto	l2432
  5032  001088                     u2200:
  5033  001088  8C35               	bsf	___fladd@signs^0,6,c
  5034  00108A                     l2432:
  5035  00108A  5030               	movf	(___fladd@a+3)^0,w,c
  5036  00108C  2430               	addwf	(___fladd@a+3)^0,w,c
  5037  00108E  6E36               	movwf	___fladd@aexp^0,c
  5038  001090  AE2F               	btfss	(___fladd@a+2)^0,7,c
  5039  001092  EF4D  F008         	goto	u2211
  5040  001096  EF4F  F008         	goto	u2210
  5041  00109A                     u2211:
  5042  00109A  EF50  F008         	goto	l2438
  5043  00109E                     u2210:
  5044  00109E  8036               	bsf	___fladd@aexp^0,0,c
  5045  0010A0                     l2438:
  5046  0010A0  5036               	movf	___fladd@aexp^0,w,c
  5047  0010A2  B4D8               	btfsc	status,2,c
  5048  0010A4  EF56  F008         	goto	u2221
  5049  0010A8  EF58  F008         	goto	u2220
  5050  0010AC                     u2221:
  5051  0010AC  EF6D  F008         	goto	l2448
  5052  0010B0                     u2220:
  5053  0010B0  2836               	incf	___fladd@aexp^0,w,c
  5054  0010B2  A4D8               	btfss	status,2,c
  5055  0010B4  EF5E  F008         	goto	u2231
  5056  0010B8  EF60  F008         	goto	u2230
  5057  0010BC                     u2231:
  5058  0010BC  EF68  F008         	goto	l2444
  5059  0010C0                     u2230:
  5060  0010C0  0E00               	movlw	0
  5061  0010C2  6E2D               	movwf	___fladd@a^0,c
  5062  0010C4  0E00               	movlw	0
  5063  0010C6  6E2E               	movwf	(___fladd@a+1)^0,c
  5064  0010C8  0E00               	movlw	0
  5065  0010CA  6E2F               	movwf	(___fladd@a+2)^0,c
  5066  0010CC  0E00               	movlw	0
  5067  0010CE  6E30               	movwf	(___fladd@a+3)^0,c
  5068  0010D0                     l2444:
  5069  0010D0  8E2F               	bsf	(___fladd@a+2)^0,7,c
  5070  0010D2  0E00               	movlw	0
  5071  0010D4  6E30               	movwf	(___fladd@a+3)^0,c
  5072  0010D6  EF75  F008         	goto	l2450
  5073  0010DA                     l2448:
  5074  0010DA  0E00               	movlw	0
  5075  0010DC  6E2D               	movwf	___fladd@a^0,c
  5076  0010DE  0E00               	movlw	0
  5077  0010E0  6E2E               	movwf	(___fladd@a+1)^0,c
  5078  0010E2  0E00               	movlw	0
  5079  0010E4  6E2F               	movwf	(___fladd@a+2)^0,c
  5080  0010E6  0E00               	movlw	0
  5081  0010E8  6E30               	movwf	(___fladd@a+3)^0,c
  5082  0010EA                     l2450:
  5083  0010EA  5037               	movf	___fladd@bexp^0,w,c
  5084  0010EC  5C36               	subwf	___fladd@aexp^0,w,c
  5085  0010EE  B0D8               	btfsc	status,0,c
  5086  0010F0  EF7C  F008         	goto	u2241
  5087  0010F4  EF7E  F008         	goto	u2240
  5088  0010F8                     u2241:
  5089  0010F8  EFA5  F008         	goto	l2486
  5090  0010FC                     u2240:
  5091  0010FC  AC35               	btfss	___fladd@signs^0,6,c
  5092  0010FE  EF83  F008         	goto	u2251
  5093  001102  EF85  F008         	goto	u2250
  5094  001106                     u2251:
  5095  001106  EF87  F008         	goto	l2456
  5096  00110A                     u2250:
  5097  00110A  0E80               	movlw	128
  5098  00110C  1A35               	xorwf	___fladd@signs^0,f,c
  5099  00110E                     l2456:
  5100  00110E  C037  F038         	movff	___fladd@bexp,___fladd@grs
  5101  001112  C036  F037         	movff	___fladd@aexp,___fladd@bexp
  5102  001116  C038  F036         	movff	___fladd@grs,___fladd@aexp
  5103  00111A  C029  F038         	movff	___fladd@b,___fladd@grs
  5104  00111E  C02D  F029         	movff	___fladd@a,___fladd@b
  5105  001122  C038  F02D         	movff	___fladd@grs,___fladd@a
  5106  001126  C02A  F038         	movff	___fladd@b+1,___fladd@grs
  5107  00112A  C02E  F02A         	movff	___fladd@a+1,___fladd@b+1
  5108  00112E  C038  F02E         	movff	___fladd@grs,___fladd@a+1
  5109  001132  C02B  F038         	movff	___fladd@b+2,___fladd@grs
  5110  001136  C02F  F02B         	movff	___fladd@a+2,___fladd@b+2
  5111  00113A  C038  F02F         	movff	___fladd@grs,___fladd@a+2
  5112  00113E  C02C  F038         	movff	___fladd@b+3,___fladd@grs
  5113  001142  C030  F02C         	movff	___fladd@a+3,___fladd@b+3
  5114  001146  C038  F030         	movff	___fladd@grs,___fladd@a+3
  5115  00114A                     l2486:
  5116  00114A  0E00               	movlw	0
  5117  00114C  6E38               	movwf	___fladd@grs^0,c
  5118  00114E  5037               	movf	___fladd@bexp^0,w,c
  5119  001150  C036  F031         	movff	___fladd@aexp,??___fladd
  5120  001154  6A32               	clrf	(??___fladd+1)^0,c
  5121  001156  5E31               	subwf	??___fladd^0,f,c
  5122  001158  0E00               	movlw	0
  5123  00115A  5A32               	subwfb	(??___fladd+1)^0,f,c
  5124  00115C  BE32               	btfsc	(??___fladd+1)^0,7,c
  5125  00115E  EFBA  F008         	goto	u2261
  5126  001162  5032               	movf	(??___fladd+1)^0,w,c
  5127  001164  E109               	bnz	u2260
  5128  001166  0E1A               	movlw	26
  5129  001168  5C31               	subwf	??___fladd^0,w,c
  5130  00116A  A0D8               	btfss	status,0,c
  5131  00116C  EFBA  F008         	goto	u2261
  5132  001170  EFBC  F008         	goto	u2260
  5133  001174                     u2261:
  5134  001174  EFF3  F008         	goto	l654
  5135  001178                     u2260:
  5136  001178  5029               	movf	___fladd@b^0,w,c
  5137  00117A  102A               	iorwf	(___fladd@b+1)^0,w,c
  5138  00117C  102B               	iorwf	(___fladd@b+2)^0,w,c
  5139  00117E  102C               	iorwf	(___fladd@b+3)^0,w,c
  5140  001180  A4D8               	btfss	status,2,c
  5141  001182  EFC5  F008         	goto	u2271
  5142  001186  EFC8  F008         	goto	u2270
  5143  00118A                     u2271:
  5144  00118A  0E01               	movlw	1
  5145  00118C  EFC9  F008         	goto	u2280
  5146  001190                     u2270:
  5147  001190  0E00               	movlw	0
  5148  001192                     u2280:
  5149  001192  6E38               	movwf	___fladd@grs^0,c
  5150  001194  0E00               	movlw	0
  5151  001196  6E29               	movwf	___fladd@b^0,c
  5152  001198  0E00               	movlw	0
  5153  00119A  6E2A               	movwf	(___fladd@b+1)^0,c
  5154  00119C  0E00               	movlw	0
  5155  00119E  6E2B               	movwf	(___fladd@b+2)^0,c
  5156  0011A0  0E00               	movlw	0
  5157  0011A2  6E2C               	movwf	(___fladd@b+3)^0,c
  5158  0011A4  C036  F037         	movff	___fladd@aexp,___fladd@bexp
  5159  0011A8  EFFC  F008         	goto	l653
  5160  0011AC                     l655:
  5161  0011AC  A038               	btfss	___fladd@grs^0,0,c
  5162  0011AE  EFDB  F008         	goto	u2291
  5163  0011B2  EFDD  F008         	goto	u2290
  5164  0011B6                     u2291:
  5165  0011B6  EFE3  F008         	goto	l2498
  5166  0011BA                     u2290:
  5167  0011BA  90D8               	bcf	status,0,c
  5168  0011BC  3038               	rrcf	___fladd@grs^0,w,c
  5169  0011BE  0901               	iorlw	1
  5170  0011C0  6E38               	movwf	___fladd@grs^0,c
  5171  0011C2  EFE5  F008         	goto	l2500
  5172  0011C6                     l2498:
  5173  0011C6  90D8               	bcf	status,0,c
  5174  0011C8  3238               	rrcf	___fladd@grs^0,f,c
  5175  0011CA                     l2500:
  5176  0011CA  A029               	btfss	___fladd@b^0,0,c
  5177  0011CC  EFEA  F008         	goto	u2301
  5178  0011D0  EFEC  F008         	goto	u2300
  5179  0011D4                     u2301:
  5180  0011D4  EFED  F008         	goto	l2504
  5181  0011D8                     u2300:
  5182  0011D8  8E38               	bsf	___fladd@grs^0,7,c
  5183  0011DA                     l2504:
  5184  0011DA  342C               	rlcf	(___fladd@b+3)^0,w,c
  5185  0011DC  322C               	rrcf	(___fladd@b+3)^0,f,c
  5186  0011DE  322B               	rrcf	(___fladd@b+2)^0,f,c
  5187  0011E0  322A               	rrcf	(___fladd@b+1)^0,f,c
  5188  0011E2  3229               	rrcf	___fladd@b^0,f,c
  5189  0011E4  2A37               	incf	___fladd@bexp^0,f,c
  5190  0011E6                     l654:
  5191  0011E6  5036               	movf	___fladd@aexp^0,w,c
  5192  0011E8  5C37               	subwf	___fladd@bexp^0,w,c
  5193  0011EA  A0D8               	btfss	status,0,c
  5194  0011EC  EFFA  F008         	goto	u2311
  5195  0011F0  EFFC  F008         	goto	u2310
  5196  0011F4                     u2311:
  5197  0011F4  EFD6  F008         	goto	l655
  5198  0011F8                     u2310:
  5199  0011F8                     l653:
  5200  0011F8  BC35               	btfsc	___fladd@signs^0,6,c
  5201  0011FA  EF01  F009         	goto	u2321
  5202  0011FE  EF03  F009         	goto	u2320
  5203  001202                     u2321:
  5204  001202  EF43  F009         	goto	l2532
  5205  001206                     u2320:
  5206  001206  5037               	movf	___fladd@bexp^0,w,c
  5207  001208  A4D8               	btfss	status,2,c
  5208  00120A  EF09  F009         	goto	u2331
  5209  00120E  EF0B  F009         	goto	u2330
  5210  001212                     u2331:
  5211  001212  EF15  F009         	goto	l2514
  5212  001216                     u2330:
  5213  001216  0E00               	movlw	0
  5214  001218  6E29               	movwf	?___fladd^0,c
  5215  00121A  0E00               	movlw	0
  5216  00121C  6E2A               	movwf	(?___fladd+1)^0,c
  5217  00121E  0E00               	movlw	0
  5218  001220  6E2B               	movwf	(?___fladd+2)^0,c
  5219  001222  0E00               	movlw	0
  5220  001224  6E2C               	movwf	(?___fladd+3)^0,c
  5221  001226  EF64  F00A         	goto	l662
  5222  00122A                     l2514:
  5223  00122A  502D               	movf	___fladd@a^0,w,c
  5224  00122C  2629               	addwf	___fladd@b^0,f,c
  5225  00122E  502E               	movf	(___fladd@a+1)^0,w,c
  5226  001230  222A               	addwfc	(___fladd@b+1)^0,f,c
  5227  001232  502F               	movf	(___fladd@a+2)^0,w,c
  5228  001234  222B               	addwfc	(___fladd@b+2)^0,f,c
  5229  001236  5030               	movf	(___fladd@a+3)^0,w,c
  5230  001238  222C               	addwfc	(___fladd@b+3)^0,f,c
  5231  00123A  A02C               	btfss	(___fladd@b+3)^0,0,c
  5232  00123C  EF22  F009         	goto	u2341
  5233  001240  EF24  F009         	goto	u2340
  5234  001244                     u2341:
  5235  001244  EFD0  F009         	goto	l2568
  5236  001248                     u2340:
  5237  001248  A038               	btfss	___fladd@grs^0,0,c
  5238  00124A  EF29  F009         	goto	u2351
  5239  00124E  EF2B  F009         	goto	u2350
  5240  001252                     u2351:
  5241  001252  EF31  F009         	goto	l2522
  5242  001256                     u2350:
  5243  001256  90D8               	bcf	status,0,c
  5244  001258  3038               	rrcf	___fladd@grs^0,w,c
  5245  00125A  0901               	iorlw	1
  5246  00125C  6E38               	movwf	___fladd@grs^0,c
  5247  00125E  EF33  F009         	goto	l2524
  5248  001262                     l2522:
  5249  001262  90D8               	bcf	status,0,c
  5250  001264  3238               	rrcf	___fladd@grs^0,f,c
  5251  001266                     l2524:
  5252  001266  A029               	btfss	___fladd@b^0,0,c
  5253  001268  EF38  F009         	goto	u2361
  5254  00126C  EF3A  F009         	goto	u2360
  5255  001270                     u2361:
  5256  001270  EF3B  F009         	goto	l2528
  5257  001274                     u2360:
  5258  001274  8E38               	bsf	___fladd@grs^0,7,c
  5259  001276                     l2528:
  5260  001276  342C               	rlcf	(___fladd@b+3)^0,w,c
  5261  001278  322C               	rrcf	(___fladd@b+3)^0,f,c
  5262  00127A  322B               	rrcf	(___fladd@b+2)^0,f,c
  5263  00127C  322A               	rrcf	(___fladd@b+1)^0,f,c
  5264  00127E  3229               	rrcf	___fladd@b^0,f,c
  5265  001280  2A37               	incf	___fladd@bexp^0,f,c
  5266  001282  EFD0  F009         	goto	l2568
  5267  001286                     l2532:
  5268  001286  502D               	movf	___fladd@a^0,w,c
  5269  001288  5C29               	subwf	___fladd@b^0,w,c
  5270  00128A  502E               	movf	(___fladd@a+1)^0,w,c
  5271  00128C  582A               	subwfb	(___fladd@b+1)^0,w,c
  5272  00128E  502F               	movf	(___fladd@a+2)^0,w,c
  5273  001290  582B               	subwfb	(___fladd@b+2)^0,w,c
  5274  001292  502C               	movf	(___fladd@b+3)^0,w,c
  5275  001294  0A80               	xorlw	128
  5276  001296  6E31               	movwf	??___fladd^0,c
  5277  001298  5030               	movf	(___fladd@a+3)^0,w,c
  5278  00129A  0A80               	xorlw	128
  5279  00129C  5831               	subwfb	??___fladd^0,w,c
  5280  00129E  B0D8               	btfsc	status,0,c
  5281  0012A0  EF54  F009         	goto	u2371
  5282  0012A4  EF56  F009         	goto	u2370
  5283  0012A8                     u2371:
  5284  0012A8  EF81  F009         	goto	l2542
  5285  0012AC                     u2370:
  5286  0012AC  5029               	movf	___fladd@b^0,w,c
  5287  0012AE  5C2D               	subwf	___fladd@a^0,w,c
  5288  0012B0  6E31               	movwf	??___fladd^0,c
  5289  0012B2  502A               	movf	(___fladd@b+1)^0,w,c
  5290  0012B4  582E               	subwfb	(___fladd@a+1)^0,w,c
  5291  0012B6  6E32               	movwf	(??___fladd+1)^0,c
  5292  0012B8  502B               	movf	(___fladd@b+2)^0,w,c
  5293  0012BA  582F               	subwfb	(___fladd@a+2)^0,w,c
  5294  0012BC  6E33               	movwf	(??___fladd+2)^0,c
  5295  0012BE  502C               	movf	(___fladd@b+3)^0,w,c
  5296  0012C0  5830               	subwfb	(___fladd@a+3)^0,w,c
  5297  0012C2  6E34               	movwf	(??___fladd+3)^0,c
  5298  0012C4  0EFF               	movlw	255
  5299  0012C6  2431               	addwf	??___fladd^0,w,c
  5300  0012C8  6E29               	movwf	___fladd@b^0,c
  5301  0012CA  0EFF               	movlw	255
  5302  0012CC  2032               	addwfc	(??___fladd+1)^0,w,c
  5303  0012CE  6E2A               	movwf	(___fladd@b+1)^0,c
  5304  0012D0  0EFF               	movlw	255
  5305  0012D2  2033               	addwfc	(??___fladd+2)^0,w,c
  5306  0012D4  6E2B               	movwf	(___fladd@b+2)^0,c
  5307  0012D6  0EFF               	movlw	255
  5308  0012D8  2034               	addwfc	(??___fladd+3)^0,w,c
  5309  0012DA  6E2C               	movwf	(___fladd@b+3)^0,c
  5310  0012DC  0E80               	movlw	128
  5311  0012DE  1A35               	xorwf	___fladd@signs^0,f,c
  5312  0012E0  6C38               	negf	___fladd@grs^0,c
  5313  0012E2  5038               	movf	___fladd@grs^0,w,c
  5314  0012E4  A4D8               	btfss	status,2,c
  5315  0012E6  EF77  F009         	goto	u2381
  5316  0012EA  EF79  F009         	goto	u2380
  5317  0012EE                     u2381:
  5318  0012EE  EF89  F009         	goto	l670
  5319  0012F2                     u2380:
  5320  0012F2  0E01               	movlw	1
  5321  0012F4  2629               	addwf	___fladd@b^0,f,c
  5322  0012F6  0E00               	movlw	0
  5323  0012F8  222A               	addwfc	(___fladd@b+1)^0,f,c
  5324  0012FA  222B               	addwfc	(___fladd@b+2)^0,f,c
  5325  0012FC  222C               	addwfc	(___fladd@b+3)^0,f,c
  5326  0012FE  EF89  F009         	goto	l670
  5327  001302                     l2542:
  5328  001302  502D               	movf	___fladd@a^0,w,c
  5329  001304  5E29               	subwf	___fladd@b^0,f,c
  5330  001306  502E               	movf	(___fladd@a+1)^0,w,c
  5331  001308  5A2A               	subwfb	(___fladd@b+1)^0,f,c
  5332  00130A  502F               	movf	(___fladd@a+2)^0,w,c
  5333  00130C  5A2B               	subwfb	(___fladd@b+2)^0,f,c
  5334  00130E  5030               	movf	(___fladd@a+3)^0,w,c
  5335  001310  5A2C               	subwfb	(___fladd@b+3)^0,f,c
  5336  001312                     l670:
  5337  001312  5029               	movf	___fladd@b^0,w,c
  5338  001314  102A               	iorwf	(___fladd@b+1)^0,w,c
  5339  001316  102B               	iorwf	(___fladd@b+2)^0,w,c
  5340  001318  102C               	iorwf	(___fladd@b+3)^0,w,c
  5341  00131A  A4D8               	btfss	status,2,c
  5342  00131C  EF92  F009         	goto	u2391
  5343  001320  EF94  F009         	goto	u2390
  5344  001324                     u2391:
  5345  001324  EFC9  F009         	goto	l2566
  5346  001328                     u2390:
  5347  001328  5038               	movf	___fladd@grs^0,w,c
  5348  00132A  A4D8               	btfss	status,2,c
  5349  00132C  EF9A  F009         	goto	u2401
  5350  001330  EF9C  F009         	goto	u2400
  5351  001334                     u2401:
  5352  001334  EFC9  F009         	goto	l2566
  5353  001338                     u2400:
  5354  001338  0E00               	movlw	0
  5355  00133A  6E29               	movwf	?___fladd^0,c
  5356  00133C  0E00               	movlw	0
  5357  00133E  6E2A               	movwf	(?___fladd+1)^0,c
  5358  001340  0E00               	movlw	0
  5359  001342  6E2B               	movwf	(?___fladd+2)^0,c
  5360  001344  0E00               	movlw	0
  5361  001346  6E2C               	movwf	(?___fladd+3)^0,c
  5362  001348  EF64  F00A         	goto	l662
  5363  00134C                     l2550:
  5364  00134C  90D8               	bcf	status,0,c
  5365  00134E  3629               	rlcf	___fladd@b^0,f,c
  5366  001350  362A               	rlcf	(___fladd@b+1)^0,f,c
  5367  001352  362B               	rlcf	(___fladd@b+2)^0,f,c
  5368  001354  362C               	rlcf	(___fladd@b+3)^0,f,c
  5369  001356  AE38               	btfss	___fladd@grs^0,7,c
  5370  001358  EFB0  F009         	goto	u2411
  5371  00135C  EFB2  F009         	goto	u2410
  5372  001360                     u2411:
  5373  001360  EFB3  F009         	goto	l2556
  5374  001364                     u2410:
  5375  001364  8029               	bsf	___fladd@b^0,0,c
  5376  001366                     l2556:
  5377  001366  A038               	btfss	___fladd@grs^0,0,c
  5378  001368  EFB8  F009         	goto	u2421
  5379  00136C  EFBA  F009         	goto	u2420
  5380  001370                     u2421:
  5381  001370  EFBE  F009         	goto	l2560
  5382  001374                     u2420:
  5383  001374  80D8               	bsf	status,0,c
  5384  001376  3638               	rlcf	___fladd@grs^0,f,c
  5385  001378  EFC0  F009         	goto	l2562
  5386  00137C                     l2560:
  5387  00137C  90D8               	bcf	status,0,c
  5388  00137E  3638               	rlcf	___fladd@grs^0,f,c
  5389  001380                     l2562:
  5390  001380  5037               	movf	___fladd@bexp^0,w,c
  5391  001382  B4D8               	btfsc	status,2,c
  5392  001384  EFC6  F009         	goto	u2431
  5393  001388  EFC8  F009         	goto	u2430
  5394  00138C                     u2431:
  5395  00138C  EFC9  F009         	goto	l2566
  5396  001390                     u2430:
  5397  001390  0637               	decf	___fladd@bexp^0,f,c
  5398  001392                     l2566:
  5399  001392  AE2B               	btfss	(___fladd@b+2)^0,7,c
  5400  001394  EFCE  F009         	goto	u2441
  5401  001398  EFD0  F009         	goto	u2440
  5402  00139C                     u2441:
  5403  00139C  EFA6  F009         	goto	l2550
  5404  0013A0                     u2440:
  5405  0013A0                     l2568:
  5406  0013A0  0E00               	movlw	0
  5407  0013A2  6E36               	movwf	___fladd@aexp^0,c
  5408  0013A4  AE38               	btfss	___fladd@grs^0,7,c
  5409  0013A6  EFD7  F009         	goto	u2451
  5410  0013AA  EFD9  F009         	goto	u2450
  5411  0013AE                     u2451:
  5412  0013AE  EFF1  F009         	goto	l679
  5413  0013B2                     u2450:
  5414  0013B2  C038  F031         	movff	___fladd@grs,??___fladd
  5415  0013B6  0E7F               	movlw	127
  5416  0013B8  1631               	andwf	??___fladd^0,f,c
  5417  0013BA  B4D8               	btfsc	status,2,c
  5418  0013BC  EFE2  F009         	goto	u2461
  5419  0013C0  EFE4  F009         	goto	u2460
  5420  0013C4                     u2461:
  5421  0013C4  EFE8  F009         	goto	l680
  5422  0013C8                     u2460:
  5423  0013C8                     l2574:
  5424  0013C8  0E01               	movlw	1
  5425  0013CA  6E36               	movwf	___fladd@aexp^0,c
  5426  0013CC  EFF1  F009         	goto	l679
  5427  0013D0                     l680:
  5428  0013D0  A029               	btfss	___fladd@b^0,0,c
  5429  0013D2  EFED  F009         	goto	u2471
  5430  0013D6  EFEF  F009         	goto	u2470
  5431  0013DA                     u2471:
  5432  0013DA  EFF1  F009         	goto	l679
  5433  0013DE                     u2470:
  5434  0013DE  EFE4  F009         	goto	l2574
  5435  0013E2                     l679:
  5436  0013E2  5036               	movf	___fladd@aexp^0,w,c
  5437  0013E4  B4D8               	btfsc	status,2,c
  5438  0013E6  EFF7  F009         	goto	u2481
  5439  0013EA  EFF9  F009         	goto	u2480
  5440  0013EE                     u2481:
  5441  0013EE  EF24  F00A         	goto	l2586
  5442  0013F2                     u2480:
  5443  0013F2  0E01               	movlw	1
  5444  0013F4  2629               	addwf	___fladd@b^0,f,c
  5445  0013F6  0E00               	movlw	0
  5446  0013F8  222A               	addwfc	(___fladd@b+1)^0,f,c
  5447  0013FA  222B               	addwfc	(___fladd@b+2)^0,f,c
  5448  0013FC  222C               	addwfc	(___fladd@b+3)^0,f,c
  5449  0013FE  A02C               	btfss	(___fladd@b+3)^0,0,c
  5450  001400  EF04  F00A         	goto	u2491
  5451  001404  EF06  F00A         	goto	u2490
  5452  001408                     u2491:
  5453  001408  EF24  F00A         	goto	l2586
  5454  00140C                     u2490:
  5455  00140C  C029  F031         	movff	___fladd@b,??___fladd
  5456  001410  C02A  F032         	movff	___fladd@b+1,??___fladd+1
  5457  001414  C02B  F033         	movff	___fladd@b+2,??___fladd+2
  5458  001418  C02C  F034         	movff	___fladd@b+3,??___fladd+3
  5459  00141C  3434               	rlcf	(??___fladd+3)^0,w,c
  5460  00141E  3234               	rrcf	(??___fladd+3)^0,f,c
  5461  001420  3233               	rrcf	(??___fladd+2)^0,f,c
  5462  001422  3232               	rrcf	(??___fladd+1)^0,f,c
  5463  001424  3231               	rrcf	??___fladd^0,f,c
  5464  001426  C031  F029         	movff	??___fladd,___fladd@b
  5465  00142A  C032  F02A         	movff	??___fladd+1,___fladd@b+1
  5466  00142E  C033  F02B         	movff	??___fladd+2,___fladd@b+2
  5467  001432  C034  F02C         	movff	??___fladd+3,___fladd@b+3
  5468  001436  2837               	incf	___fladd@bexp^0,w,c
  5469  001438  B4D8               	btfsc	status,2,c
  5470  00143A  EF21  F00A         	goto	u2501
  5471  00143E  EF23  F00A         	goto	u2500
  5472  001442                     u2501:
  5473  001442  EF24  F00A         	goto	l2586
  5474  001446                     u2500:
  5475  001446  2A37               	incf	___fladd@bexp^0,f,c
  5476  001448                     l2586:
  5477  001448  2837               	incf	___fladd@bexp^0,w,c
  5478  00144A  B4D8               	btfsc	status,2,c
  5479  00144C  EF2A  F00A         	goto	u2511
  5480  001450  EF2C  F00A         	goto	u2510
  5481  001454                     u2511:
  5482  001454  EF34  F00A         	goto	l2590
  5483  001458                     u2510:
  5484  001458  5037               	movf	___fladd@bexp^0,w,c
  5485  00145A  A4D8               	btfss	status,2,c
  5486  00145C  EF32  F00A         	goto	u2521
  5487  001460  EF34  F00A         	goto	u2520
  5488  001464                     u2521:
  5489  001464  EF46  F00A         	goto	l2594
  5490  001468                     u2520:
  5491  001468                     l2590:
  5492  001468  0E00               	movlw	0
  5493  00146A  6E29               	movwf	___fladd@b^0,c
  5494  00146C  0E00               	movlw	0
  5495  00146E  6E2A               	movwf	(___fladd@b+1)^0,c
  5496  001470  0E00               	movlw	0
  5497  001472  6E2B               	movwf	(___fladd@b+2)^0,c
  5498  001474  0E00               	movlw	0
  5499  001476  6E2C               	movwf	(___fladd@b+3)^0,c
  5500  001478  5037               	movf	___fladd@bexp^0,w,c
  5501  00147A  A4D8               	btfss	status,2,c
  5502  00147C  EF42  F00A         	goto	u2531
  5503  001480  EF44  F00A         	goto	u2530
  5504  001484                     u2531:
  5505  001484  EF46  F00A         	goto	l2594
  5506  001488                     u2530:
  5507  001488  0E00               	movlw	0
  5508  00148A  6E35               	movwf	___fladd@signs^0,c
  5509  00148C                     l2594:
  5510  00148C  A037               	btfss	___fladd@bexp^0,0,c
  5511  00148E  EF4B  F00A         	goto	u2541
  5512  001492  EF4D  F00A         	goto	u2540
  5513  001496                     u2541:
  5514  001496  EF50  F00A         	goto	l2598
  5515  00149A                     u2540:
  5516  00149A  8E2B               	bsf	(___fladd@b+2)^0,7,c
  5517  00149C  EF51  F00A         	goto	l2600
  5518  0014A0                     l2598:
  5519  0014A0  9E2B               	bcf	(___fladd@b+2)^0,7,c
  5520  0014A2                     l2600:
  5521  0014A2  90D8               	bcf	status,0,c
  5522  0014A4  3037               	rrcf	___fladd@bexp^0,w,c
  5523  0014A6  6E2C               	movwf	(___fladd@b+3)^0,c
  5524  0014A8  AE35               	btfss	___fladd@signs^0,7,c
  5525  0014AA  EF59  F00A         	goto	u2551
  5526  0014AE  EF5B  F00A         	goto	u2550
  5527  0014B2                     u2551:
  5528  0014B2  EF5C  F00A         	goto	l2606
  5529  0014B6                     u2550:
  5530  0014B6  8E2C               	bsf	(___fladd@b+3)^0,7,c
  5531  0014B8                     l2606:
  5532  0014B8  C029  F029         	movff	___fladd@b,?___fladd
  5533  0014BC  C02A  F02A         	movff	___fladd@b+1,?___fladd+1
  5534  0014C0  C02B  F02B         	movff	___fladd@b+2,?___fladd+2
  5535  0014C4  C02C  F02C         	movff	___fladd@b+3,?___fladd+3
  5536  0014C8                     l662:
  5537  0014C8  0012               	return		;funcret
  5538  0014CA                     __end_of___fladd:
  5539                           	callstack 0
  5540                           
  5541 ;; *************** function _high_isr *****************
  5542 ;; Defined at:
  5543 ;;		line 207 in file "main.c"
  5544 ;; Parameters:    Size  Location     Type
  5545 ;;		None
  5546 ;; Auto vars:     Size  Location     Type
  5547 ;;		None
  5548 ;; Return value:  Size  Location     Type
  5549 ;;                  1    wreg      void 
  5550 ;; Registers used:
  5551 ;;		wreg, status,2, status,0
  5552 ;; Tracked objects:
  5553 ;;		On entry : 0/0
  5554 ;;		On exit  : 0/0
  5555 ;;		Unchanged: 0/0
  5556 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5557 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5558 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5559 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5560 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5561 ;;Total ram usage:        1 bytes
  5562 ;; Hardware stack levels used:    1
  5563 ;; This function calls:
  5564 ;;		Nothing
  5565 ;; This function is called by:
  5566 ;;		Interrupt level 2
  5567 ;; This function uses a non-reentrant model
  5568 ;;
  5569                           
  5570                           	psect	intcode
  5571  000008                     __pintcode:
  5572                           	callstack 0
  5573  000008                     _high_isr:
  5574                           	callstack 22
  5575                           
  5576                           ;incstack = 0
  5577  000008  825D               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  5578  00000A                     
  5579                           ;main.c: 209:     TMR1 = hex;
  5580  00000A  C0E5  FFCE         	movff	_hex,4046	;volatile
  5581  00000E  C0E6  FFCF         	movff	_hex+1,4047	;volatile
  5582                           
  5583                           ;main.c: 210:     if(TMR1IF == 1)
  5584  000012  A09E               	btfss	3998,0,c	;volatile
  5585  000014  EF0E  F000         	goto	i2u300_41
  5586  000018  EF10  F000         	goto	i2u300_40
  5587  00001C                     i2u300_41:
  5588  00001C  EF21  F000         	goto	i2l122
  5589  000020                     i2u300_40:
  5590  000020                     
  5591                           ;main.c: 211:     {;main.c: 212:         LATEbits.LATE0 = ~(LATEbits.LATE0);
  5592  000020  B08D               	btfsc	141,0,c	;volatile
  5593  000022  EF15  F000         	goto	i2u301_41
  5594  000026  EF18  F000         	goto	i2u301_40
  5595  00002A                     i2u301_41:
  5596  00002A  0E01               	movlw	1
  5597  00002C  EF19  F000         	goto	i2u301_46
  5598  000030                     i2u301_40:
  5599  000030  0E00               	movlw	0
  5600  000032                     i2u301_46:
  5601  000032  0AFF               	xorlw	255
  5602  000034  6E01               	movwf	??_high_isr^0,c
  5603  000036  508D               	movf	141,w,c	;volatile
  5604  000038  1801               	xorwf	??_high_isr^0,w,c
  5605  00003A  0BFE               	andlw	-2
  5606  00003C  1801               	xorwf	??_high_isr^0,w,c
  5607  00003E  6E8D               	movwf	141,c	;volatile
  5608  000040                     
  5609                           ;main.c: 213:         TMR1IF=0;
  5610  000040  909E               	bcf	3998,0,c	;volatile
  5611  000042                     i2l122:
  5612  000042  925D               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  5613  000044  0011               	retfie		f
  5614  000046                     __end_of_high_isr:
  5615                           	callstack 0
  5616                           
  5617                           	psect	rparam
  5618  0000                     
  5619                           	psect	temp
  5620  00005D                     btemp:
  5621                           	callstack 0
  5622  00005D                     	ds	1
  5623  0000                     int$flags	set	btemp
  5624  0000                     wtemp8	set	btemp+1
  5625  0000                     ttemp5	set	btemp+1
  5626  0000                     ttemp6	set	btemp+4
  5627  0000                     ttemp7	set	btemp+8
  5628                           
  5629                           	psect	config
  5630                           
  5631                           ;Config register CONFIG1L @ 0x1FFF8
  5632                           ;	Watchdog Timer
  5633                           ;	WDTEN = OFF, Disabled-Controlled by SWDTEN bit
  5634                           ;	Stack Overflow Reset
  5635                           ;	STVREN = OFF, Disabled
  5636                           ;	Extended Instruction Set Enable bit
  5637                           ;	XINST = OFF, Disabled
  5638                           ;	Background Debugger Enable bit
  5639                           ;	DEBUG = 0x1, unprogrammed default
  5640  1FFF8                     	org	131064
  5641  1FFF8  80                 	db	128
  5642                           
  5643                           ;Config register CONFIG1H @ 0x1FFF9
  5644                           ;	Code Protect
  5645                           ;	CP0 = OFF, Disabled
  5646  1FFF9                     	org	131065
  5647  1FFF9  F4                 	db	244
  5648                           
  5649                           ;Config register CONFIG2L @ 0x1FFFA
  5650                           ;	Oscillator Selection bits
  5651                           ;	OSC = INTOSC, Internal oscillator, port function on RA6 and RA7
  5652                           ;	Secondary Clock Source T1OSCEN Enforcement
  5653                           ;	T1DIG = 0x1, unprogrammed default
  5654                           ;	Low-Power Timer1 Oscillator Enable bit
  5655                           ;	LPT1OSC = 0x1, unprogrammed default
  5656                           ;	Fail-Safe Clock Monitor Enable bit
  5657                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  5658                           ;	Two-Speed Start-up (Internal/External Oscillator Switchover) Control bit
  5659                           ;	IESO = OFF, Two-Speed Start-up disabled
  5660  1FFFA                     	org	131066
  5661  1FFFA  18                 	db	24
  5662                           
  5663                           ;Config register CONFIG2H @ 0x1FFFB
  5664                           ;	unspecified, using default values
  5665                           ;	Watchdog Timer Postscaler Select bits
  5666                           ;	WDTPS = 0xF, unprogrammed default
  5667  1FFFB                     	org	131067
  5668  1FFFB  FF                 	db	255
  5669                           
  5670                           ;Config register CONFIG3L @ 0x1FFFC
  5671                           ;	unspecified, using default values
  5672                           ;	RTCC Reference Clock Select bit
  5673                           ;	RTCSOSC = 0x1, unprogrammed default
  5674  1FFFC                     	org	131068
  5675  1FFFC  F2                 	db	242
  5676                           
  5677                           ;Config register CONFIG3H @ 0x1FFFD
  5678                           ;	unspecified, using default values
  5679                           ;	CCP2 MUX
  5680                           ;	CCP2MX = 0x1, unprogrammed default
  5681  1FFFD                     	org	131069
  5682  1FFFD  F1                 	db	241
  5683                           tosu	equ	0xFFF
  5684                           tosh	equ	0xFFE
  5685                           tosl	equ	0xFFD
  5686                           stkptr	equ	0xFFC
  5687                           pclatu	equ	0xFFB
  5688                           pclath	equ	0xFFA
  5689                           pcl	equ	0xFF9
  5690                           tblptru	equ	0xFF8
  5691                           tblptrh	equ	0xFF7
  5692                           tblptrl	equ	0xFF6
  5693                           tablat	equ	0xFF5
  5694                           prodh	equ	0xFF4
  5695                           prodl	equ	0xFF3
  5696                           indf0	equ	0xFEF
  5697                           postinc0	equ	0xFEE
  5698                           postdec0	equ	0xFED
  5699                           preinc0	equ	0xFEC
  5700                           plusw0	equ	0xFEB
  5701                           fsr0h	equ	0xFEA
  5702                           fsr0l	equ	0xFE9
  5703                           wreg	equ	0xFE8
  5704                           indf1	equ	0xFE7
  5705                           postinc1	equ	0xFE6
  5706                           postdec1	equ	0xFE5
  5707                           preinc1	equ	0xFE4
  5708                           plusw1	equ	0xFE3
  5709                           fsr1h	equ	0xFE2
  5710                           fsr1l	equ	0xFE1
  5711                           bsr	equ	0xFE0
  5712                           indf2	equ	0xFDF
  5713                           postinc2	equ	0xFDE
  5714                           postdec2	equ	0xFDD
  5715                           preinc2	equ	0xFDC
  5716                           plusw2	equ	0xFDB
  5717                           fsr2h	equ	0xFDA
  5718                           fsr2l	equ	0xFD9
  5719                           status	equ	0xFD8

Data Sizes:
    Strings     7
    Constant    0
    Data        4
    BSS         363
    Persistent  2
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     90      92
    BANK0           160     24     135
    BANK1           256      0     256
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           84      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 256
		 -> print_buffer(BANK1[256]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_1(CODE[7]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_1(CODE[7]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 7
		 -> STR_1(CODE[7]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    xtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_1(CODE[7]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 256
		 -> print_buffer(BANK1[256]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S1161_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 256
		 -> print_buffer(BANK1[256]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 256
		 -> print_buffer(BANK1[256]), 

    UART_send_string@str	PTR unsigned char  size(2) Largest target is 256
		 -> print_buffer(BANK1[256]), 


Critical Paths under _main in COMRAM

    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_xtoa
    _xtoa->_pad
    _toupper->_islower
    _pad->_fputs
    _fputs->_fputc
    _atoi->_isspace
    _freqCalc->___aldiv
    _flash_block_write->_flash_block_delete
    _UART_send_string->_UART_Write
    _UART_Initial->___fladd
    ___fldiv->___xxtofl
    ___fladd->___fldiv

Critical Paths under _high_isr in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->_vfprintf

Critical Paths under _high_isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _high_isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _high_isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _high_isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _high_isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _high_isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _high_isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _high_isr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _high_isr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _high_isr in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _high_isr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _high_isr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _high_isr in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _high_isr in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _high_isr in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _high_isr in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   16795
                       _UART_Initial
                   _UART_send_string
                  _flash_block_write
                         _flash_read
                           _freqCalc
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             16    10      6   10685
                                              8 BANK0     16    10      6
                         _flash_read (ARG)
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6   10193
                                              0 BANK0      8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           46    40      6    9660
                                             67 COMRAM    23    17      6
                               _atoi
                              _fputc
                            _isdigit
                               _xtoa
 ---------------------------------------------------------------------------------
 (4) _xtoa                                                39    28     11    5447
                                             28 COMRAM    39    28     11
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (5) _toupper                                              8     6      2     512
                                              7 COMRAM     8     6      2
                            _islower
 ---------------------------------------------------------------------------------
 (6) _islower                                              6     4      2     191
                                              1 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    3417
                                             17 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               4     2      2     220
                                              1 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    1537
                                             10 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (7) _fputc                                                9     5      4    1037
                                              1 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (8) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _isupper                                              6     4      2     191
                                              1 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _isalpha                                              6     4      2     191
                                              1 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (4) _atoi                                                15    13      2    1615
                                              8 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (5) _isspace                                              7     5      2     259
                                              1 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              6     4      2     281
                                              1 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     512
                                              1 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _freqCalc                                            10     8      2     619
                                             15 COMRAM    10     8      2
                            ___aldiv
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             14     6      8     452
                                              1 COMRAM    14     6      8
 ---------------------------------------------------------------------------------
 (1) _flash_read                                           8     6      2     168
                                              1 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 (1) _flash_block_write                                   71    67      4     524
                                              3 COMRAM    71    67      4
                 _flash_block_commit
                 _flash_block_delete
 ---------------------------------------------------------------------------------
 (2) _flash_block_delete                                   2     0      2      98
                                              1 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _flash_block_commit                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _UART_send_string                                     5     3      2     188
                                              2 COMRAM     5     3      2
                         _UART_Write
 ---------------------------------------------------------------------------------
 (2) _UART_Write                                           1     1      0      22
                                              1 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _UART_Initial                                         8     4      4    4611
                                             56 COMRAM     8     4      4
                            ___fladd
                            ___fldiv
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     398
                                              1 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             10     6      4     305
                                              1 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (2) ___fldiv                                             25    17      8    1399
                                             15 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) ___fladd                                             16     8      8    2388
                                             40 COMRAM    16     8      8
                            ___fldiv (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _high_isr                                             1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _UART_Initial
     ___fladd
       ___fldiv (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___fldiv
       ___xxtofl (ARG)
     ___fltol
     ___xxtofl
   _UART_send_string
     _UART_Write
   _flash_block_write
     _flash_block_commit
     _flash_block_delete
   _flash_read
   _freqCalc
     ___aldiv
   _sprintf
     _flash_read (ARG)
     _vfprintf (ARG)
       _vfpfcnvrt
         _atoi
           ___wmul
           _isdigit
           _isspace
         _fputc
           _putch
         _isdigit
         _xtoa
           _isalpha
           _isupper
           _pad
             _fputc
               _putch
             _fputs
               _fputc
                 _putch
             _strlen
           _toupper
             _islower

 _high_isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F53      0       0      37        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0     100       7      100.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     18      87       5       84.4%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     5A      5C       1       97.9%
BITBANK15           54      0       0      35        0.0%
BANK15              54      0       0      36        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     1E3      12        0.0%
DATA                 0      0     1E3       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.20 build 20200408173844 
Symbol Table                                                                                   Wed Mar 16 14:29:00 2022

                     ___fldiv@aexp 0028                       ___fldiv@bexp 0027  
                                _a 00A8                                  _t 00E3  
                     ___fldiv@sign 0020                                 l71 271C  
                               l74 2C1C                                 l83 2A0A  
                               l92 28CA                                 l77 2C2A  
                               l95 2A56                                 l98 2BFC  
              ___wmul@multiplicand 0004                                l101 2C14  
                              l113 2676                                l114 2676  
                              l108 27A8                                l204 2346  
                              l125 2BDA                                l422 244C  
                              l720 1B2C                                l712 1A32  
                              l721 1B1A                                l707 1C0E  
                              l803 291C                                l653 11F8  
                              l709 1A6E                                l670 1312  
                              l662 14C8                                l654 11E6  
                              l718 1AB4                                l902 1874  
                              l655 11AC                                l680 13D0  
                              l841 259E                                l850 1C50  
                              l843 25D8                                l780 1F3A  
                              l940 223A                                l908 2806  
                              l909 280E                                l838 255C  
                              l679 13E2                                l783 2096  
                              l943 2AD6                                l871 1E80  
                              l848 1C48                                l937 2232  
                              l873 1EE2                                l857 1CE4  
                              l794 202E                                l787 1FD2  
                              l963 2B46                                l949 2B7E  
                              l957 296E                                l887 15C4  
                              l978 2516                                l986 2A9A  
                              l995 2BB4                                l989 2C30  
                              _hex 00E5                                _pad 2518  
                              wreg 000FE8                         _TXSTA1bits 000FAC  
                     ___fltol@exp1 000B                               l1000 2864  
                             l1011 2B0E                               l1005 286C  
                             l3030 244E                               l3102 2810  
                             l2400 2316                               l3112 2B48  
                             l3120 2936                               l3200 20B4  
                             l3040 24D0                               l3032 2460  
                             l2410 1016                               l2402 2326  
                             l3122 2964                               l3210 2118  
                             l3202 20D4                               l3034 2472  
                             l3050 2A7A                               l3106 2846  
                             l3130 1C20                               l2500 11CA  
                             l2420 1056                               l2412 1024  
                             l2332 2C18                               l2340 2BEA  
                             l2404 2336                               l3124 2968  
                             l3116 291E                               l3212 212E  
                             l3204 210E                               l3036 247C  
                             l3044 2A58                               l3052 2B80  
                             l3108 2858                               l3140 1C8E  
                             l3132 1C22                               l3300 1744  
                             l2510 1216                               l2502 11D8  
                             l2430 1088                               l2422 1058  
                             l2414 1026                               l2350 2BF8  
                             l2342 2BEC                               l2334 2BDC  
                             l3118 2922                               l3230 2216  
                             l3222 21B0                               l3214 2136  
                             l3206 2112                               l3038 249A  
                             l3046 2A64                               l3054 2B8C  
                             l3062 2AD8                               l3150 1CC8  
                             l3142 1C96                               l3134 1C3C  
                             l3310 17F2                               l3302 1752  
                             l2600 14A2                               l2520 1256  
                             l2504 11DA                               l2440 10B0  
                             l2432 108A                               l2416 1036  
                             l2424 1060                               l2408 100A  
                             l2360 2C10                               l2352 2BFA  
                             l2344 2BEE                               l2336 2BE6  
                             l3216 213E                               l3048 2A76  
                             l3056 2B90                               l3080 2554  
                             l3072 2518                               l3152 1CD8  
                             l3144 1C9E                               l3136 1C66  
                             l3128 1C10                               l3320 182E  
                             l3312 1800                               l3304 178E  
                             l3240 1500                               l2602 14A8  
                             l2530 1280                               l2522 1262  
                             l2514 122A                               l2506 11E4  
                             l2450 10EA                               l2442 10C0  
                             l2434 1090                               l2426 1070  
                             l2418 1046                               l2610 1876  
                             l2362 2C12                               l2354 2BFE  
                             l2346 2BF2                               l2338 2BE8  
                             l2370 225E                               l3066 2BB6  
                             l3226 21F2                               l3218 2176  
                             l3058 2BA8                               l3090 25C0  
                             l3082 2568                               l3074 2526  
                             l3170 1DA0                               l3162 1D64  
                             l3146 1CA4                               l3138 1C6E  
                             l3314 1814                               l3250 1536  
                             l3242 1512                               l2604 14B6  
                             l2540 12F2                               l2524 1266  
                             l2516 123A                               l2508 1206  
                             l2532 1286                               l2460 1116  
                             l2452 10FC                               l2444 10D0  
                             l2436 109E                               l2428 1076  
                             l2700 1AA4                               l2620 18B2  
                             l2612 1882                               l2356 2C06  
                             l2348 2BF6                               l2380 2294  
                             l2372 2262                               l2364 223C  
                             l3068 2BD2                               l3228 2204  
                             l3084 257C                               l3076 253A  
                             l3180 1E58                               l3172 1DA6  
                             l3164 1D76                               l3156 1D18  
                             l3148 1CAC                               l3308 17CA  
                             l3244 1516                               l3324 183A  
                             l3236 14CA                               l3340 27C0  
                             l2606 14B8                               l2550 134C  
                             l2534 12AC                               l2542 1302  
                             l2526 1274                               l2518 1248  
                             l2470 112A                               l2462 111A  
                             l2454 110A                               l2446 10D2  
                             l2438 10A0                               l2710 1AE4  
                             l2702 1AB2                               l2630 18E2  
                             l2622 18C2                               l2614 1890  
                             l2358 2C0E                               l2390 22D6  
                             l2382 22AA                               l2374 2270  
                             l2366 2240                               l3430 2160  
                             l3094 2B10                               l3086 2580  
                             l3078 2548                               l3190 1EBA  
                             l3182 1E72                               l3158 1D2A  
                             l3166 1D8A                               l3174 1E04  
                             l3326 1862                               l3318 1820  
                             l3270 155A                               l3262 1548  
                             l3254 153C                               l3246 1522  
                             l3238 14F2                               l3342 27E6  
                             l3350 28EE                               l2560 137C  
                             l2552 1356                               l2544 1328  
                             l2536 12E0                               l2528 1276  
                             l2480 113E                               l2472 112E  
                             l2464 111E                               l2456 110E  
                             l2448 10DA                               l2720 1B56  
                             l2712 1B12                               l2704 1AC4  
                             l2640 1918                               l2632 18E8  
                             l2624 18C4                               l2616 1892  
                             l2800 1F60                               l2392 22F4  
                             l2384 22B2                               l2376 2280  
                             l2368 224E                               l3088 25AC  
                             l3184 1E8E                               l3176 1E20  
                             l3168 1D9A                               l3280 1632  
                             l3248 1524                               l3272 15B2  
                             l3336 27AA                               l3352 290A  
                             l3344 28CC                               l3360 25F6  
                             l2570 13A4                               l2562 1380  
                             l2554 1364                               l2546 1338  
                             l2538 12E2                               l2490 1178  
                             l2482 1142                               l2474 1132  
                             l2466 1122                               l2458 1112  
                             l2730 1BCE                               l2722 1B80  
                             l2706 1AD2                               l2650 1958  
                             l2642 1928                               l2634 18F6  
                             l2618 18A2                               l2626 18CC  
                             l2810 1FBA                               l2394 2304  
                             l2386 22BE                               l2378 2284  
                             l3194 2098                               l3098 2A9C  
                             l3186 1E94                               l3178 1E3E  
                             l3282 1642                               l3274 15D2  
                             l3266 154E                               l3258 1542  
                             l3338 27B2                               l3346 28DE  
                             l3370 2620                               l3362 25FA  
                             l2580 13FE                               l2572 13B2  
                             l2564 1390                               l2556 1366  
                             l2492 1194                               l2484 1146  
                             l2476 1136                               l2468 1126  
                             l2740 1C04                               l2732 1BEA  
                             l2716 1B3C                               l2724 1B84  
                             l2708 1AD6                               l2652 1968  
                             l2660 1988                               l2644 192A  
                             l2636 18F8                               l2628 18DC  
                             l2820 201E                               l2812 1FBC  
                             l2804 1F74                               l2396 2306  
                             l2388 22CC                               l3196 20AC  
                             l3188 1EA4                               l3292 16C8  
                             l3284 1650                               l3276 15D4  
                             l3428 1584                               l3348 28E6  
                             l3380 262A                               l3372 2622  
                             l3364 25FE                               l3356 25DA  
                             l2590 1468                               l2582 140C  
                             l2574 13C8                               l2558 1374  
                             l2566 1392                               l2494 11A4  
                             l2478 113A                               l2486 114A  
                             l2734 1BEE                               l2726 1B9E  
                             l2718 1B48                               l2670 19C6  
                             l2662 1998                               l2654 1970  
                             l2638 1908                               l2646 1932  
                             l2750 235E                               l2830 2076  
                             l2822 203C                               l2814 1FC8  
                             l2806 1F7C                               l2902 271E  
                             l2398 2310                               l3198 20B0  
                             l3286 1670                               l3294 16DA  
                             l3278 15FC                               l3382 262C  
                             l3374 2624                               l3366 2602  
                             l3358 25E2                               l2592 1488  
                             l2584 1446                               l2568 13A0  
                             l2496 11BA                               l2488 114E  
                             l2736 1BFC                               l2728 1BB4  
                             l2680 1A0E                               l2672 19D6  
                             l2664 1998                               l2656 1974  
                             l2648 1942                               l2760 23AE  
                             l2832 2084                               l2824 203E  
                             l2816 2004                               l2808 1F88  
                             l2920 2756                               l2904 271E  
                             l3296 1702                               l3288 167E  
                             l3384 2640                               l3376 2626  
                             l3368 261E                               l2594 148C  
                             l2578 13F2                               l2586 1448  
                             l2498 11C6                               l2738 1C02  
                             l2690 1A5C                               l2682 1A22  
                             l2674 19E6                               l2770 23D8  
                             l2762 23B2                               l2754 2372  
                             l2834 2086                               l2826 2042  
                             l2818 2010                               l2850 2708  
                             l2930 278A                               l2922 2758  
                             l2914 2736                               l2906 272A  
                             l3298 172A                               l3386 266A  
                             l3378 2628                               l2596 149A  
                             l2588 1458                               l2692 1A6C  
                             l2684 1A30                               l2676 19F6  
                             l2668 19AC                               l2780 2400  
                             l2772 23E2                               l2764 23C0  
                             l2756 239C                               l2748 2348  
                             l2828 2066                               l2860 2712  
                             l2852 270A                               l2932 2790  
                             l2924 276C                               l2916 2742  
                             l2908 2732                               l2598 14A0  
                             l2694 1A7E                               l2686 1A3C  
                             l2678 19FE                               l2782 240C  
                             l2774 23EC                               l2758 239E  
                             l2862 2714                               l2854 270C  
                             l2846 267E                               l2870 29CA  
                             l2934 2794                               l2926 2778  
                             l2918 2752                               ?_pad 0012  
                             l2696 1A94                               l2688 1A5A  
                             l2784 241C                               l2792 1EE6  
                             l2864 2718                               l2856 270E  
                             l2848 2682                               l2872 29DC  
                             l2936 279E                               l2928 2780  
                             l2880 2878                               l2698 1A9A  
                             l2786 242C                               l2794 1EF6  
                             l2866 271A                               l2858 2710  
                             l2874 29EA                               l2938 27A4  
                             l2890 2A14                               l2882 28BA  
                             l2788 243C                               l2796 1F04  
                             l2876 29EE                               l2868 29BE  
                             l2892 2A2C                               l2884 28C2  
                             l2798 1F4A                               l2894 2A32  
                             l2878 286E                               l2896 2A3E  
                             l2888 2A0C                               l2898 2A44  
                             STR_1 1001                               u2100 2C2A  
                             u2101 2C26                               u2110 224E  
                             u2111 224A                               u2200 1088  
                             u2120 2270                               u2201 1084  
                             u2121 226C                               u2210 109E  
                             u2130 22AA                               u2211 109A  
                             u2131 22A6                               u2300 11D8  
                             u2220 10B0                               u2140 22CC  
                             u3020 2460                               u3100 2526  
                             u2301 11D4                               u2221 10AC  
                             u2141 22C8                               u3021 245C  
                             u3101 2522                               u2310 11F8  
                             u2230 10C0                               u2150 22F4  
                             u3030 2472                               u3110 2548  
                             u2311 11F4                               u2231 10BC  
                             u2151 22F0                               u3031 246E  
                             u3111 2544                               u2400 1338  
                             u2320 1206                               u2240 10FC  
                             u2160 2326                               u3040 249A  
                             u3120 259E                               u3200 2858  
                             u2401 1334                               u2321 1202  
                             u2241 10F8                               u2161 2322  
                             u3041 2496                               u3121 259A  
                             u3201 2854                               _LATE 000F8D  
                             u2410 1364                               u2330 1216  
                             u2250 110A                               u2170 1024  
                             u3210 2B78                               u3050 24D0  
                             u3130 25AC                               u2411 1360  
                             u2331 1212                               u2251 1106  
                             u2171 1020                               u3211 2B72  
                             u3051 24CC                               u3131 25A8  
                             u2500 1446                               u2420 1374  
                             u2340 1248                               u2260 1178  
                             u2180 1036                               u3220 2B7A  
                             u3140 2B40                               u3060 2A9A  
                             u3300 1D14                               u2501 1442  
                             u2421 1370                               u2341 1244  
                             u2261 1174                               u2181 1032  
                             u3141 2B3A                               u3061 2A96  
                             u2510 1458                               u2430 1390  
                             u2350 1256                               u2270 1190  
                             u2190 1046                               u3230 2936  
                             u3150 2B42                               u3070 2BA8  
                             u3310 1D2A                               u2511 1454  
                             u2431 138C                               u2351 1252  
                             u2271 118A                               u2191 1042  
                             u3231 2932                               u3071 2BA4  
                             u3311 1D26                               u2520 1468  
                             u2440 13A0                               u2360 1274  
                             u2280 1192                               u2600 1908  
                             u3240 2964                               u3160 2AD0  
                             u3080 2B08                               u3400 1E80  
                             u3320 1D5E                               u2521 1464  
                             u2441 139C                               u2361 1270  
                             u2601 1904                               u3241 2960  
                             u3161 2ACA                               u3081 2B02  
                             u3401 1E7C                               u3321 1D58  
                             u2530 1488                               u2450 13B2  
                             u2370 12AC                               u2290 11BA  
                             u2610 1918                               u3170 2AD2  
                             u3090 2B0A                               u3410 1E8E  
                             u3330 1D60                               u3250 1C20  
                             u2531 1484                               u2451 13AE  
                             u2371 12A8                               u2291 11B6  
                             u2611 1914                               u3411 1E8A  
                             u3251 1C1C                               u2540 149A  
                             u2460 13C8                               u2380 12F2  
                             u2700 1AD2                               u2620 1958  
                             u3420 20D4                               u3180 2840  
                             u3340 1D76                               u3260 1C3C  
                             u3500 15C4                               u2541 1496  
                             u2461 13C4                               u2381 12EE  
                             u2701 1ACE                               u2621 1954  
                             u3421 20D0                               u3181 283A  
                             u3341 1D72                               u3261 1C38  
                             u3501 15C0                               u2550 14B6  
                             u2470 13DE                               u2390 1328  
                             u2710 1AE4                               u2630 1998  
                             u3430 210E                               u3190 2842  
                             u3350 1DDE                               u3270 1C66  
                             u3510 15D2                               u2551 14B2  
                             u2471 13DA                               u2391 1324  
                             u2711 1AE0                               u2631 1994  
                             u3431 210A                               u3271 1C62  
                             u3511 15CE                               u2480 13F2  
                             u2720 1B12                               u2640 1A0E  
                             u2560 1890                               u2800 2392  
                             u3440 212A                               u3360 1E20  
                             u3280 1CC8                               u3520 15FC  
                             u3600 2806                               u2481 13EE  
                             u2721 1B0E                               u2641 1A0A  
                             u2561 188C                               u3441 2126  
                             u3361 1E1C                               u3281 1CC4  
                             u3521 15F8                               u3601 2802  
                             u2490 140C                               u2730 1B28  
                             u2650 1A30                               u2570 18A2  
                             u2810 23C0                               u3450 21EC  
                             u3370 1E3E                               u3290 1D12  
                             u3530 1642                               u2491 1408  
                             u2731 1B24                               u2651 1A2C  
                             u2571 189E                               u2811 23BC  
                             u3451 21E6                               u3371 1E3A  
                             u3355 1DCC                               u3291 1D0C  
                             u3531 163E                               u2740 1B3C  
                             u2660 1A5A                               u2580 18B2  
                             u2820 23D4                               u2900 2000  
                             u3460 21EE                               u3380 1E58  
                             u3540 16C2                               u2741 1B38  
                             u2661 1A56                               u2581 18AE  
                             u2821 23D0                               u2805 2388  
                             u2901 1FFC                               u3381 1E54  
                             u3541 16BC                               u2750 1B56  
                             u2670 1A7E                               u2590 18F6  
                             u2830 23FC                               u2910 201E  
                             u3470 2204                               u3390 1E72  
                             u3550 16C4                               u2751 1B52  
                             u2671 1A7A                               u2591 18F2  
                             u2831 23F8                               u2911 201A  
                             u3471 2200                               u3391 1E6E  
                             u2760 1B9E                               u2680 1A94  
                             u2840 241C                               u2920 202E  
                             u3480 2216                               u3560 16DA  
                             u2761 1B9A                               u2681 1A90  
                             u2841 2418                               u2921 202A  
                             u3617 29E2                               u3481 2212  
                             u3561 16D6                               u2770 1BCE  
                             u2690 1AB2                               u2850 242C  
                             u2930 203C                               u3570 1702  
                             u3490 14F2                               u2771 1BCA  
                             u2691 1AAE                               u2851 2428  
                             u2931 2038                               u3571 16FE  
                             u3491 14EE                               u2780 1BFC  
                             u2940 2076                               u2860 1EF6  
                             u3580 172A                               u2781 1BF8  
                             u2941 2072                               u2861 1EF2  
                             u3581 1726                               u2790 235E  
                             u2950 2084                               u2870 1F04  
                             u3590 17F2                               u2791 235A  
                             u2951 2080                               u2871 1F00  
                             u3591 17EE                               u2880 1F60  
                             u2881 1F5C                               u2890 1FB6  
                             u2970 2A0A                               u2891 1FB2  
                             u2971 2A06                               u2981 2724  
                             u2990 276C                               u2991 2768  
                             _TMR1 000FCE                               _TRMT 007D61  
                             _dbuf 00A9                               _atoi 2098  
                             _main 25DA                               _freq 00E1  
                             _prec 00A4                               _nout 00A0  
                             pad@i 0019                               pad@p 0016  
                             fsr1h 000FE2                               fsr2h 000FDA  
                             indf2 000FDF                               fsr1l 000FE1  
                             pad@w 001B                               fsr2l 000FD9  
                             btemp 005D                               _xtoa 1C10  
                             prodh 000FF4                               prodl 000FF3  
                             start 0046                    ___fldiv@new_exp 0021  
                      freqCalc@cal 0018                       ___param_bank 000000  
             flash_read@flash_addr 0002          __size_of_UART_send_string 004E  
                            ??_pad 0018                       _BAUDCON1bits 000F7E  
                    ___fltol@sign1 000A                    __end_of___aldiv 2348  
                            ?_atoi 0009                    __end_of___fladd 14CA  
                            ?_main 0001                    __end_of___fldiv 1C10  
                  __end_of___fltol 244E                              ?_xtoa 001D  
                            _T1CON 000FCD                              _RC1IF 007CF5  
                            i2l122 0042                       vfpfcnvrt@fmt 0046  
                     vfpfcnvrt@llu 004E                              _TRISE 000F96  
                      ?_UART_Write 0001                              _flags 005B  
                            _count 00A6                              _fputc 244E  
                  __end_of_isalpha 2AD8                              _fputs 2A58  
                  __end_of_isdigit 2B80                              atoi@n 0016  
                            pad@fp 0012                              atoi@s 0009  
                            _width 00A2                              _putch 2C30  
                  __end_of_islower 2B10                    __end_of_isspace 2970  
                  __end_of_isupper 2B48                              tablat 000FF5  
                            ttemp5 005E                              ttemp6 0061  
                            ttemp7 0065                              status 000FD8  
                            wtemp8 005E                    __end_of_sprintf 291E  
                            xtoa@c 0042                              xtoa@d 001F  
                            xtoa@i 0040                              xtoa@n 0038  
                            xtoa@p 0034                              xtoa@w 0036  
                            xtoa@x 0027                    __end_of_toupper 286E  
                     _toupper$1371 000E                       freqCalc@temp 0014  
                  __initialization 2970                       __end_of_atoi 223C  
                     __end_of_main 267E                       __end_of_xtoa 1EE4  
                           ??_atoi 000B                             ??_main 005B  
                           ??_xtoa 0028                      __activetblptr 000003  
                           ?_fputc 0002                             ?_fputs 000B  
                           _EECON2 000FA7                             ?_putch 0001  
                           i2l2984 000A                             i2l2986 0020  
                           i2l2988 0040                             _TABLAT 000FF5  
                           _RCREG1 000FAE                             _RCSTA1 000FAB  
                           _TBLPTR 000FF6                      vfpfcnvrt@done 0057  
                           _SPBRG1 000FAF                             _TMR1IF 007CF0  
                           _TXREG1 000FAD                   __end_of___xxtofl 2098  
                     vfprintf@cfmt 00CF                   __end_of_high_isr 0046  
                 __end_of_freqCalc 28CC                __size_of_UART_Write 0016  
                        ??___aldiv 000A                          ??___fladd 0031  
                           ___wmul 2BB6                          ??___fldiv 0018  
                        ??___fltol 0006                             clear_0 2998  
                           clear_1 29AA        __size_of_flash_block_delete 0022  
                           pad@buf 0014        __size_of_flash_block_commit 0018  
                           _strlen 2B80                             fputc@c 0002  
                           fputs@c 000F                             fputs@i 0010  
                           fputs@s 000B                          ??_isalpha 0004  
                        ??_isdigit 0004                          ??_islower 0004  
                     __mediumconst 0000                          ??_isspace 0004  
flash_block_write@flash_store_buff 0008                             tblptrh 000FF7  
                        ??_isupper 0004                             tblptrl 000FF6  
                           tblptru 000FF8                             putch@c 0001  
                 __end_of_vfprintf 2810                          ??_sprintf 005B  
                           xtoa@fp 001D                          ??_toupper 000A  
                     ___xxtofl@arg 000C                       ___xxtofl@exp 000B  
                     ___xxtofl@val 0002                         __accesstop 0060  
          __end_of__initialization 29B4                      ___rparam_used 000001  
                       ___fltol@f1 0002                     __pcstackCOMRAM 0001  
                     __pidataBANK0 2C2C                   _UART_send_string 29BE  
                    __end_of_fputc 2518                      __end_of_fputs 2A9C  
                    __end_of_putch 2C32                            ??_fputc 0006  
                          ??_fputs 000F                            ??_putch 0002  
                       __pbssBANK0 0060                         __pbssBANK1 0100  
               flash_block_write@i 004A                            ?___wmul 0002  
                          ?_strlen 0002             flash_block_write@F5893 0060  
                        ?___xxtofl 0002                         _flash_read 2A0C  
                     ??_UART_Write 0002                 __size_of_vfpfcnvrt 03AC  
                        ?_high_isr 0001                          ?_freqCalc 0010  
                flash_read@flash_h 0006                  flash_read@flash_l 0008  
                    ?_UART_Initial 0039                            __Hparam 0000  
                          __Lparam 0000                            ___aldiv 223C  
                          ___fladd 100A                            ___fldiv 1876  
                          ___fltol 2348                    __size_of___wmul 0026  
               __end_of_UART_Write 2C2C                          ?_vfprintf 00C9  
                     __psmallconst 1000                            __pcinit 2970  
                          __ramtop 1000                            __ptext0 25DA  
                          __ptext1 28CC                            __ptext2 27AA  
                          __ptext3 14CA                            __ptext4 1C10  
                          __ptext5 2810                            __ptext6 2AD8  
                          __ptext7 2518                            __ptext8 2B80  
                          __ptext9 2A58              UART_Initial@baud_rate 0039  
                UART_send_string@i 0006                    __size_of_strlen 0036  
                _flash_block_write 271E                          _T1CONbits 000FCD  
                     __size_of_pad 00C2                            _isalpha 2A9C  
                          _isdigit 2B48                         ??___xxtofl 0006  
                 ___aldiv@dividend 0002                            _islower 2AD8  
                          _isspace 291E                 ?_flash_block_write 0004  
                          _isupper 2B10                            atoi@neg 000F  
                          _sprintf 28CC                         ??_high_isr 0001  
                          _toupper 2810                         ??_freqCalc 0012  
             end_of_initialization 29B4                     ??_UART_Initial 003D  
              ??_flash_block_write 0008                            fputc@fp 0004  
                          fputs@fp 000D                  __end_of_vfpfcnvrt 1876  
                 ___aldiv@quotient 000C                            postdec1 000FE5  
                          postdec2 000FDD                            postinc0 000FEE  
                          postinc1 000FE6                            postinc2 000FDE  
                       ??_vfprintf 005B                            strlen@a 0004  
                          strlen@s 0002          __end_of_flash_block_write 27AA  
                   UART_Write@data 0002                        ___fladd@grs 0038  
                      ?_flash_read 0002                      ___xxtofl@sign 000A  
                        _TRISCbits 000F94                        ___fldiv@grs 0023  
                      ___fldiv@rem 001C   flash_block_write@flash_data_buff 0006  
         __end_of_UART_send_string 2A0C         __end_of_flash_block_delete 2BFE  
       __end_of_flash_block_commit 2C16                        vfpfcnvrt@ap 0048  
                      vfpfcnvrt@fp 0044                     __end_of___wmul 2BDC  
                   __end_of_strlen 2BB6                start_initialization 2970  
                      __end_of_pad 25DA                        vfprintf@fmt 00CB  
              __size_of_flash_read 004C                           ??___wmul 0006  
                      __pdataBANK0 00E1         __size_of_flash_block_write 008C  
             __end_of_UART_Initial 271E                           ??_strlen 0004  
                        ___fladd@a 002D                          ___fladd@b 0029  
                        ___fldiv@a 0014                          ___fldiv@b 0010  
                      __pbssCOMRAM 005B                      __pcstackBANK0 00C9  
                __size_of___xxtofl 01B4                  __size_of_high_isr 003E  
                __size_of_freqCalc 005E                          _atoi$1290 0015  
                        _atoi$1291 0013                          _atoi$1289 0011  
                        __pnvBANK0 00E5                          __pintcode 0008  
                         ?___aldiv 0002                           ?___fladd 0029  
                         ?___fldiv 0010                           ?___fltol 0002  
                __size_of_vfprintf 0066                UART_send_string@str 0003  
            flash_block_write@addr 0004                        __smallconst 1000  
                         ?_isalpha 0002                           ?_isdigit 0002  
                         ?_islower 0002                           ?_isspace 0002  
                         ?_isupper 0002                           ?_sprintf 00D1  
                   __size_of_fputc 00CA                     __size_of_fputs 0044  
                         ?_toupper 0008                     __size_of_putch 0002  
                  ___aldiv@divisor 0006                    ___aldiv@counter 000A  
                   ___wmul@product 0006                           _LATEbits 000F8D  
                         _IPR1bits 000F9F                           _PIE1bits 000F9D  
                  UART_Initial@bps 003D                           i2u300_40 0020  
                         i2u300_41 001C                           i2u301_40 0030  
                         i2u301_41 002A                           i2u301_46 0032  
                         _PIR1bits 000F9E                           _RCONbits 000FD0  
                        _vfpfcnvrt 14CA                          _xtoa$1255 0030  
                        _xtoa$1256 0032                  ___wmul@multiplier 0002  
                     ??_flash_read 0004                          freqCalc@f 0010  
                        freqCalc@t 0016                       _isspace$1316 0008  
                       vfpfcnvrt@c 0056                          copy_data0 2984  
                ?_UART_send_string 0003                 ??_UART_send_string 0005  
                       _EECON1bits 000FA6                           __Hrparam 0000  
                       vfprintf@ap 00CD                           __Lrparam 0000  
                       vfprintf@fp 00C9              __size_of_UART_Initial 00A0  
               __end_of_flash_read 2A58                   __size_of___aldiv 010C  
                 __size_of___fladd 04C0                   __size_of___fldiv 039A  
                 __size_of___fltol 0106                         ?_vfpfcnvrt 0044  
                       sprintf@fmt 00D3                           ___xxtofl 1EE4  
                 __size_of_isalpha 003C                   __size_of_isdigit 0038  
               _flash_block_delete 2BDC                   __size_of_islower 0038  
                 __size_of_isspace 0052                 _flash_block_commit 2BFE  
                         __ptext10 244E                           __ptext11 2C30  
                         __ptext20 2A0C                           __ptext12 2B10  
                         __ptext21 271E                           __ptext13 2A9C  
                         __ptext30 100A                           __ptext22 2BDC  
                         __ptext14 2098                           __ptext23 2BFE  
                         __ptext15 291E                           __ptext24 29BE  
                         __ptext16 2B48                           __ptext25 2C16  
                         __ptext17 2BB6                           __ptext26 267E  
                         __ptext18 286E                           __ptext27 1EE4  
                         __ptext19 223C                           __ptext28 2348  
                         __ptext29 1876                   __size_of_isupper 0038  
                         _high_isr 0008                           _freqCalc 286E  
                 __size_of_sprintf 0052                   __size_of_toupper 005E  
              ?_flash_block_delete 0002                ?_flash_block_commit 0001  
                     _UART_Initial 267E                      __size_of_atoi 01A4  
                    __size_of_main 00A4                      __size_of_xtoa 02D4  
       flash_block_write@flash_ptr 0048                           int$flags 005D  
                         _vfprintf 27AA               ??_flash_block_delete 0004  
             ??_flash_block_commit 0002                     _vfpfcnvrt$1271 0059  
                       _INTCONbits 000FF2                           isalpha@c 0002  
                         isdigit@c 0002                           intlevel2 0000  
                        sprintf@ap 00D9                           islower@c 0002  
                         isspace@c 0002                           isupper@c 0002  
                       _OSCCONbits 000FD3                        ??_vfpfcnvrt 004A  
           flash_block_delete@addr 0002                           sprintf@f 00DB  
                         sprintf@s 00D1                       _print_buffer 0100  
                         toupper@c 0008                       ___aldiv@sign 000B  
                       _UART_Write 2C16                      ___fladd@signs 0035  
                     ___fladd@aexp 0036                       ___fladd@bexp 0037  
